{"version":3,"file":"util.js","sources":["../../net/util.ts"],"sourcesContent":["/**\n * Retrieves the public IP address of the current machine.\n *\n * @see https://checkip.amazonaws.com\n */\nexport async function getInternetIp() {\n    const res = await fetch(\"https://checkip.amazonaws.com\");\n    if (res.ok) {\n        const text = await res.text();\n        const match = text.match(/\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}/);\n        if (match) {\n            return match[0];\n        }\n        else {\n            throw new Error(\"Failed to parse IP address from response\");\n        }\n    }\n    else {\n        throw new Error(`Failed to fetch IP address: ${res.status} ${res.statusText}`);\n    }\n}\n//# sourceMappingURL=util.js.map"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACO,eAAe,aAAa,GAAG;AACtC,IAAI,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,+BAA+B,CAAC,CAAC;AAC7D,IAAI,IAAI,GAAG,CAAC,EAAE,EAAE;AAChB,QAAQ,MAAM,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;AACtC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;AACvE,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,SAAS;AACT,aAAa;AACb,YAAY,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AACxE,SAAS;AACT,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,4BAA4B,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvF,KAAK;AACL;;;;"}