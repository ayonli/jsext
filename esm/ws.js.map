{"version":3,"file":"ws.js","sources":["../ws.ts"],"sourcesContent":["/**\n * This module provides a universal WebSocket server interface for Node.js, Deno,\n * Bun and Cloudflare Workers. This module is based on the `EventTarget`\n * interface and conforms the web standard.\n *\n * NOTE: In order to work in Node.js, install the `@ayonli/jsext` library from\n * NPM instead of JSR.\n * @experimental\n */\nvar _a, _b, _c;\nimport { asyncTask } from \"./async.ts\";\nimport { createCloseEvent, createErrorEvent } from \"./event.ts\";\nimport runtime from \"./runtime.ts\";\nconst _source = Symbol.for(\"source\");\nconst _errored = Symbol.for(\"errored\");\nconst _listener = Symbol.for(\"listener\");\nconst _clients = Symbol.for(\"clients\");\nconst _server = Symbol.for(\"server\");\nconst _connTasks = Symbol.for(\"connTasks\");\n/**\n * This class represents a WebSocket connection on the server side.\n * Normally we don't create instances of this class directly, but rather use\n * the {@link WebSocketServer} to handle WebSocket connections, which will\n * create the instance for us.\n *\n * **Events:**\n *\n * - `error` - Dispatched when an error occurs, such as network failure. After\n *   this event is dispatched, the connection will be closed and the `close`\n *   event will be dispatched.\n * - `close` - Dispatched when the connection is closed. If the connection is\n *   closed due to some error, the `error` event will be dispatched before this\n *   event, and the close event will have the `wasClean` set to `false`, and the\n *   `reason` property contains the error message, if any.\n * - `message` - Dispatched when a message is received.\n */\nexport class WebSocketConnection extends EventTarget {\n    constructor(source) {\n        super();\n        this[_source] = source;\n    }\n    /**\n     * The current state of the WebSocket connection.\n     */\n    get readyState() {\n        return this[_source].readyState;\n    }\n    /**\n     * Sends data to the WebSocket client.\n     */\n    send(data) {\n        this[_source].send(data);\n    }\n    /**\n     * Closes the WebSocket connection.\n     */\n    close(code, reason) {\n        this[_source].close(code, reason);\n    }\n    addEventListener(event, listener, options) {\n        return super.addEventListener(event, listener, options);\n    }\n}\n/**\n * A universal WebSocket server interface for Node.js, Deno, Bun and Cloudflare\n * Workers.\n *\n * There are two ways to handle WebSocket connections:\n *\n * 1. By passing a listener function to the constructor, handle all connections\n *    in a central place.\n * 2. By using the `socket` object returned from the `upgrade` method to handle\n *    each connection in a more flexible way.\n *\n * NOTE: In order to work in Node.js, install the `@ayonli/jsext` library from\n * NPM instead of JSR.\n *\n * @example\n * ```ts\n * // centralized connection handler\n * import { WebSocketServer } from \"@ayonli/jsext/ws\";\n *\n * const wsServer = new WebSocketServer(socket => {\n *     console.log(`WebSocket connection established.`);\n *\n *     socket.addEventListener(\"message\", (event) => {\n *         socket.send(\"received: \" + event.data);\n *     });\n *\n *     socket.addEventListener(\"error\", (event) => {\n *         console.error(\"WebSocket connection error:\", event.error);\n *     });\n *\n *     socket.addEventListener(\"close\", (event) => {\n *         console.log(`WebSocket connection closed, reason: ${event.reason}, code: ${event.code}`);\n *     });\n * });\n *\n * // Node.js\n * import * as http from \"node:http\";\n * const httpServer = http.createServer(async (req) => {\n *      await wsServer.upgrade(req);\n * });\n * httpServer.listen(3000);\n *\n * // Node.js (withWeb)\n * import { withWeb } from \"@ayonli/jsext/http\";\n * const httpServer2 = http.createServer(withWeb(async (req) => {\n *      const { response } = await wsServer.upgrade(req);\n *      return response;\n * }));\n * httpServer2.listen(3001);\n *\n * // Bun\n * const bunServer = Bun.serve({\n *     async fetch(req) {\n *         const { response } = await wsServer.upgrade(req);\n *         return response;\n *     },\n *     websocket: wsServer.bunListener,\n * });\n * wsServer.bunBind(bunServer);\n *\n * // Deno\n * Deno.serve(async req => {\n *     const { response } = await wsServer.upgrade(req);\n *     return response;\n * });\n *\n * // Cloudflare Workers\n * export default {\n *     fetch(req) {\n *         const { response } = wsServer.upgrade(req);\n *         return response;\n *     },\n * };\n * ```\n *\n * @example\n * ```ts\n * // per-request connection handler (e.g. for Deno)\n * import { WebSocketServer } from \"@ayonli/jsext/ws\";\n *\n * const wsServer = new WebSocketServer();\n *\n * Deno.serve(async req => {\n *     const { socket, response } = await wsServer.upgrade(req);\n *\n *     console.log(`WebSocket connection established.`);\n *\n *     socket.addEventListener(\"message\", (event) => {\n *         socket.send(\"received: \" + event.data);\n *     });\n *\n *     socket.addEventListener(\"error\", (event) => {\n *         console.error(\"WebSocket connection error:\", event.error);\n *     });\n *\n *     socket.addEventListener(\"close\", (event) => {\n *         console.log(`WebSocket connection closed, reason: ${event.reason}, code: ${event.code}`);\n *     });\n *\n *     return response;\n * });\n * ```\n */\nexport class WebSocketServer {\n    constructor(...args) {\n        var _d, _e, _f;\n        this[_a] = new Map();\n        this[_b] = undefined;\n        this[_c] = new Map();\n        if (args.length === 2) {\n            this.idleTimeout = ((_d = args[0]) === null || _d === void 0 ? void 0 : _d.idleTimeout) || 30;\n            this.perMessageDeflate = (_f = (_e = args[0]) === null || _e === void 0 ? void 0 : _e.perMessageDeflate) !== null && _f !== void 0 ? _f : false;\n            this[_listener] = args[1];\n        }\n        else {\n            this.idleTimeout = 30;\n            this.perMessageDeflate = false;\n            this[_listener] = args[0];\n        }\n    }\n    async upgrade(request) {\n        if (!(request instanceof Request)) {\n            throw new TypeError(\"Node.js support is not implemented\");\n        }\n        const upgradeHeader = request.headers.get(\"Upgrade\");\n        if (!upgradeHeader || upgradeHeader !== \"websocket\") {\n            throw new TypeError(\"Expected Upgrade: websocket\");\n        }\n        const listener = this[_listener];\n        const clients = this[_clients];\n        const { identity } = runtime();\n        if (identity === \"deno\") {\n            const { socket: ws, response } = Deno.upgradeWebSocket(request, {\n                idleTimeout: this.idleTimeout,\n            });\n            const socket = new WebSocketConnection(ws);\n            clients.set(request, socket);\n            ws.binaryType = \"arraybuffer\";\n            ws.onmessage = (ev) => {\n                if (typeof ev.data === \"string\") {\n                    socket.dispatchEvent(new MessageEvent(\"message\", {\n                        data: ev.data,\n                    }));\n                }\n                else {\n                    socket.dispatchEvent(new MessageEvent(\"message\", {\n                        data: new Uint8Array(ev.data),\n                    }));\n                }\n            };\n            ws.onclose = (ev) => {\n                if (!ev.wasClean) {\n                    socket.dispatchEvent(createErrorEvent(\"error\", {\n                        error: new Error(`WebSocket connection closed: ${ev.reason} (${ev.code})`),\n                    }));\n                }\n                clients.delete(request);\n                socket.dispatchEvent(createCloseEvent(\"close\", {\n                    code: ev.code,\n                    reason: ev.reason,\n                    wasClean: ev.wasClean,\n                }));\n            };\n            await new Promise((resolve) => {\n                ws.onopen = resolve;\n            });\n            listener === null || listener === void 0 ? void 0 : listener.call(this, socket);\n            return { socket, response };\n        }\n        else if (identity === \"cloudflare-worker\") {\n            // @ts-ignore\n            const [client, server] = Object.values(new WebSocketPair());\n            const socket = new WebSocketConnection(server);\n            clients.set(request, socket);\n            server.accept();\n            server.addEventListener(\"message\", ev => {\n                if (typeof ev.data === \"string\") {\n                    socket.dispatchEvent(new MessageEvent(\"message\", {\n                        data: ev.data,\n                    }));\n                }\n                else if (ev.data instanceof ArrayBuffer) {\n                    socket.dispatchEvent(new MessageEvent(\"message\", {\n                        data: new Uint8Array(ev.data),\n                    }));\n                }\n                else {\n                    ev.data.arrayBuffer().then(buffer => {\n                        socket.dispatchEvent(new MessageEvent(\"message\", {\n                            data: new Uint8Array(buffer),\n                        }));\n                    }).catch(() => { });\n                }\n            });\n            server.addEventListener(\"close\", ev => {\n                if (!ev.wasClean) {\n                    socket.dispatchEvent(createErrorEvent(\"error\", {\n                        error: new Error(`WebSocket connection closed: ${ev.reason} (${ev.code})`),\n                    }));\n                }\n                clients.delete(request);\n                socket.dispatchEvent(createCloseEvent(\"close\", {\n                    code: ev.code,\n                    reason: ev.reason,\n                    wasClean: ev.wasClean,\n                }));\n            });\n            listener === null || listener === void 0 ? void 0 : listener.call(this, socket);\n            return {\n                socket,\n                response: new Response(null, {\n                    status: 101,\n                    statusText: \"Switching Protocols\",\n                    headers: new Headers({\n                        \"Upgrade\": \"websocket\",\n                        \"Connection\": \"Upgrade\",\n                    }),\n                    // @ts-ignore\n                    webSocket: client,\n                }),\n            };\n        }\n        else if (identity === \"bun\") {\n            const server = this[_server];\n            if (!server) {\n                throw new Error(\"WebSocket server is not bound to a Bun server instance.\");\n            }\n            const task = asyncTask();\n            this[_connTasks].set(request, task);\n            const ok = server.upgrade(request, { data: { request } });\n            if (!ok) {\n                throw new Error(\"Failed to upgrade to WebSocket\");\n            }\n            const socket = await task;\n            listener === null || listener === void 0 ? void 0 : listener.call(this, socket);\n            return {\n                socket,\n                response: new Response(null, {\n                    status: 101,\n                    statusText: \"Switching Protocols\",\n                    headers: new Headers({\n                        \"Upgrade\": \"websocket\",\n                        \"Connection\": \"Upgrade\",\n                    }),\n                }),\n            };\n        }\n        else {\n            throw new TypeError(\"Unsupported runtime\");\n        }\n    }\n    /**\n     * Used in Bun, to bind the WebSocket server to the Bun server instance.\n     */\n    bunBind(server) {\n        this[_server] = server;\n    }\n    /**\n     * A WebSocket listener for `Bun.serve()`.\n     */\n    get bunListener() {\n        const clients = this[_clients];\n        const connTasks = this[_connTasks];\n        return {\n            idleTimeout: this.idleTimeout,\n            perMessageDeflate: this.perMessageDeflate,\n            open: (ws) => {\n                const { request } = ws.data;\n                const client = new WebSocketConnection(ws);\n                clients.set(request, client);\n                const task = connTasks.get(request);\n                if (task) {\n                    connTasks.delete(request);\n                    task.resolve(client);\n                }\n            },\n            message: (ws, msg) => {\n                const { request } = ws.data;\n                const client = clients.get(request);\n                if (client) {\n                    if (typeof msg === \"string\") {\n                        client.dispatchEvent(new MessageEvent(\"message\", {\n                            data: msg,\n                        }));\n                    }\n                    else {\n                        client.dispatchEvent(new MessageEvent(\"message\", {\n                            data: new Uint8Array(msg),\n                        }));\n                    }\n                }\n            },\n            error: (ws, error) => {\n                Object.assign(ws, { [_errored]: true });\n                const { request } = ws.data;\n                const client = clients.get(request);\n                client && client.dispatchEvent(createErrorEvent(\"error\", { error }));\n            },\n            close: (ws, code, reason) => {\n                const { request } = ws.data;\n                const client = clients.get(request);\n                if (client) {\n                    clients.delete(request);\n                    client.dispatchEvent(createCloseEvent(\"close\", {\n                        code,\n                        reason,\n                        wasClean: Reflect.get(ws, _errored) !== true,\n                    }));\n                }\n            },\n        };\n    }\n    /**\n     * An iterator that yields all connected WebSocket clients, can be used to\n     * broadcast messages to all clients.\n     */\n    get clients() {\n        return this[_clients].values();\n    }\n}\n_a = _clients, _b = _server, _c = _connTasks;\n//# sourceMappingURL=ws.js.map"],"names":[],"mappings":"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"}