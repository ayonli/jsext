{"version":3,"file":"ws.js","sources":["../ws.ts"],"sourcesContent":["/**\n * This module provides a unified WebSocket server interface for Node.js, Deno,\n * Bun and Cloudflare Workers. This module is based on the `EventTarget`\n * interface and conforms the web standard.\n *\n * NOTE: In Node.js, this module requires Node.js v15.4 or above.\n * @module\n * @experimental\n */\nvar _a, _b, _c, _d;\nimport { asyncTask } from \"./async.ts\";\nimport { concat, text } from \"./bytes.ts\";\nimport { createCloseEvent, createErrorEvent } from \"./event.ts\";\nimport runtime from \"./runtime.ts\";\nconst _errored = Symbol.for(\"errored\");\nconst _handler = Symbol.for(\"handler\");\nconst _clients = Symbol.for(\"clients\");\nconst _httpServer = Symbol.for(\"httpServer\");\nconst _wsServer = Symbol.for(\"wsServer\");\nconst _connTasks = Symbol.for(\"connTasks\");\n/**\n * A unified WebSocket server interface for Node.js, Deno, Bun and Cloudflare\n * Workers.\n *\n * There are two ways to handle WebSocket connections:\n *\n * 1. By passing a listener function to the constructor, handle all connections\n *    in a central place.\n * 2. By using the `socket` object returned from the `upgrade` method to handle\n *    each connection in a more flexible way. However, at this stage, the\n *    connection may not be ready yet, and we need to wait for the `ready`\n *    promise to resolve before we can start sending messages.\n *\n * The `socket` object is an async iterable object, which can be used in the\n * `for await...of` loop to read messages with backpressure support.\n *\n * @example\n * ```ts\n * // centralized connection handler\n * import { WebSocketServer } from \"@ayonli/jsext/ws\";\n *\n * const wsServer = new WebSocketServer(socket => {\n *     console.log(\"WebSocket connection established.\");\n *\n *     socket.addEventListener(\"message\", (event) => {\n *         socket.send(\"received: \" + event.data);\n *     });\n *\n *     socket.addEventListener(\"error\", (event) => {\n *         console.error(\"WebSocket connection error:\", event.error);\n *     });\n *\n *     socket.addEventListener(\"close\", (event) => {\n *         console.log(`WebSocket connection closed, reason: ${event.reason}, code: ${event.code}`);\n *     });\n * });\n *\n * // Node.js\n * import * as http from \"node:http\";\n * const httpServer = http.createServer(async (req) => {\n *      await wsServer.upgrade(req);\n * });\n * httpServer.listen(3000);\n *\n * // Node.js (withWeb)\n * import { withWeb } from \"@ayonli/jsext/http\";\n * const httpServer2 = http.createServer(withWeb(async (req) => {\n *      const { response } = await wsServer.upgrade(req);\n *      return response;\n * }));\n * httpServer2.listen(3001);\n *\n * // Bun\n * const bunServer = Bun.serve({\n *     async fetch(req) {\n *         const { response } = await wsServer.upgrade(req);\n *         return response;\n *     },\n *     websocket: wsServer.bunListener,\n * });\n * wsServer.bunBind(bunServer);\n *\n * // Deno\n * Deno.serve(async req => {\n *     const { response } = await wsServer.upgrade(req);\n *     return response;\n * });\n *\n * // Cloudflare Workers\n * export default {\n *     fetch(req) {\n *         const { response } = wsServer.upgrade(req);\n *         return response;\n *     },\n * };\n * ```\n *\n * @example\n * ```ts\n * // per-request connection handler (e.g. for Deno)\n * import { WebSocketServer } from \"@ayonli/jsext/ws\";\n *\n * const wsServer = new WebSocketServer();\n *\n * Deno.serve(async req => {\n *     const { socket, response } = await wsServer.upgrade(req);\n *\n *     socket.ready.then(() => {\n *         console.log(\"WebSocket connection established.\");\n *\n *         socket.addEventListener(\"message\", (event) => {\n *             socket.send(\"received: \" + event.data);\n *         });\n *\n *         socket.addEventListener(\"error\", (event) => {\n *             console.error(\"WebSocket connection error:\", event.error);\n *         });\n *\n *         socket.addEventListener(\"close\", (event) => {\n *             console.log(`WebSocket connection closed, reason: ${event.reason}, code: ${event.code}`);\n *         });\n *     });\n *\n *     // The response should be returned immediately, otherwise the web socket\n *     // will not be ready.\n *     return response;\n * });\n * ```\n *\n * @example\n * ```ts\n * // async iterable (e.g. for Deno)\n * const wsServer = new WebSocketServer(async socket => {\n *     console.log(\"WebSocket connection established.\");\n *\n *     try {\n *         for await (const message of socket) {\n *             socket.send(\"received: \" + event.data);\n *         }\n *     } catch (error) {\n *         console.error(\"WebSocket connection error:\", error);\n *     }\n *\n *     console.log(\"WebSocket connection closed\");\n * });\n *\n * Deno.serve(async req => {\n *     const { response } = await wsServer.upgrade(req);\n *     return response;\n * });\n * ```\n */\nexport class WebSocketServer {\n    constructor(...args) {\n        var _e, _f, _g;\n        this[_a] = new Map();\n        this[_b] = undefined;\n        this[_c] = null;\n        this[_d] = new Map();\n        if (args.length === 2) {\n            this.idleTimeout = ((_e = args[0]) === null || _e === void 0 ? void 0 : _e.idleTimeout) || 30;\n            this.perMessageDeflate = (_g = (_f = args[0]) === null || _f === void 0 ? void 0 : _f.perMessageDeflate) !== null && _g !== void 0 ? _g : false;\n            this[_handler] = args[1];\n        }\n        else {\n            this.idleTimeout = 30;\n            this.perMessageDeflate = false;\n            this[_handler] = args[0];\n        }\n    }\n    async upgrade(request) {\n        const upgradeHeader = \"socket\" in request\n            ? request.headers[\"upgrade\"]\n            : request.headers.get(\"Upgrade\");\n        if (!upgradeHeader || upgradeHeader !== \"websocket\") {\n            throw new TypeError(\"Expected Upgrade: websocket\");\n        }\n        const { WebSocketConnection } = await import(\"./ws/base.ts\");\n        const handler = this[_handler];\n        const clients = this[_clients];\n        const { identity } = runtime();\n        if (identity === \"deno\") {\n            if (\"socket\" in request) {\n                throw new TypeError(\"Node.js support is not implemented outside Node.js runtime.\");\n            }\n            const { socket: ws, response } = Deno.upgradeWebSocket(request, {\n                idleTimeout: this.idleTimeout,\n            });\n            const socket = new WebSocketConnection(ws);\n            clients.set(request, socket);\n            ws.binaryType = \"arraybuffer\";\n            ws.onmessage = (ev) => {\n                if (typeof ev.data === \"string\") {\n                    socket.dispatchEvent(new MessageEvent(\"message\", {\n                        data: ev.data,\n                    }));\n                }\n                else {\n                    socket.dispatchEvent(new MessageEvent(\"message\", {\n                        data: new Uint8Array(ev.data),\n                    }));\n                }\n            };\n            ws.onclose = (ev) => {\n                if (!ev.wasClean) {\n                    socket.dispatchEvent(createErrorEvent(\"error\", {\n                        error: new Error(`WebSocket connection closed: ${ev.reason} (${ev.code})`),\n                    }));\n                }\n                clients.delete(request);\n                socket.dispatchEvent(createCloseEvent(\"close\", {\n                    code: ev.code,\n                    reason: ev.reason,\n                    wasClean: ev.wasClean,\n                }));\n            };\n            if (socket.readyState === 1) {\n                handler === null || handler === void 0 ? void 0 : handler.call(this, socket);\n            }\n            else {\n                ws.onopen = () => {\n                    handler === null || handler === void 0 ? void 0 : handler.call(this, socket);\n                };\n            }\n            return { socket, response };\n        }\n        else if (identity === \"bun\") {\n            if (\"socket\" in request) {\n                throw new TypeError(\"Node.js support is not implemented outside Node.js runtime.\");\n            }\n            const server = this[_httpServer];\n            if (!server) {\n                throw new Error(\"WebSocket server is not bound to a Bun server instance.\");\n            }\n            const task = asyncTask();\n            this[_connTasks].set(request, task);\n            const ok = server.upgrade(request, { data: { request } });\n            if (!ok) {\n                throw new Error(\"Failed to upgrade to WebSocket\");\n            }\n            const socket = await task;\n            handler === null || handler === void 0 ? void 0 : handler.call(this, socket);\n            return {\n                socket,\n                response: new Response(null, {\n                    status: 101,\n                    statusText: \"Switching Protocols\",\n                    headers: new Headers({\n                        \"Upgrade\": \"websocket\",\n                        \"Connection\": \"Upgrade\",\n                    }),\n                }),\n            };\n        }\n        else if (identity === \"node\") {\n            if (!this[_wsServer]) {\n                this[_wsServer] = import(\"ws\").then(({ WebSocketServer: WsServer }) => {\n                    return new WsServer({\n                        noServer: true,\n                        perMessageDeflate: this.perMessageDeflate,\n                    });\n                });\n            }\n            const wsServer = await this[_wsServer];\n            return new Promise((resolve, reject) => {\n                const isNodeRequest = \"socket\" in request;\n                if (!isNodeRequest && Reflect.has(request, Symbol.for(\"incomingMessage\"))) {\n                    request = Reflect.get(request, Symbol.for(\"incomingMessage\"));\n                }\n                if (!(\"socket\" in request)) {\n                    return reject(new TypeError(\"Expected an instance of http.IncomingMessage\"));\n                }\n                const { socket } = request;\n                const upgradeHeader = request.headers.upgrade;\n                if (!upgradeHeader || upgradeHeader !== \"websocket\") {\n                    return reject(new TypeError(\"Expected Upgrade: websocket\"));\n                }\n                const handler = this[_handler];\n                const clients = this[_clients];\n                wsServer.handleUpgrade(request, socket, Buffer.alloc(0), (ws) => {\n                    const client = new WebSocketConnection(ws);\n                    clients.set(request, client);\n                    ws.on(\"message\", (data, isBinary) => {\n                        data = Array.isArray(data) ? concat(...data) : data;\n                        let event;\n                        if (typeof data === \"string\") {\n                            event = new MessageEvent(\"message\", { data });\n                        }\n                        else {\n                            if (isBinary) {\n                                event = new MessageEvent(\"message\", {\n                                    data: new Uint8Array(data),\n                                });\n                            }\n                            else {\n                                const bytes = data instanceof ArrayBuffer\n                                    ? new Uint8Array(data)\n                                    : data;\n                                event = new MessageEvent(\"message\", {\n                                    data: text(bytes),\n                                });\n                            }\n                        }\n                        client.dispatchEvent(event);\n                    });\n                    ws.on(\"error\", error => {\n                        Object.assign(ws, { [_errored]: true });\n                        client.dispatchEvent(createErrorEvent(\"error\", { error }));\n                    });\n                    ws.on(\"close\", (code, reason) => {\n                        var _e;\n                        clients.delete(request);\n                        client.dispatchEvent(createCloseEvent(\"close\", {\n                            code,\n                            reason: (_e = reason === null || reason === void 0 ? void 0 : reason.toString(\"utf8\")) !== null && _e !== void 0 ? _e : \"\",\n                            wasClean: Reflect.get(ws, _errored) !== false,\n                        }));\n                    });\n                    handler === null || handler === void 0 ? void 0 : handler.call(this, client);\n                    if (!isNodeRequest && typeof Response === \"function\") {\n                        const response = new Response(null, {\n                            status: 200,\n                            statusText: \"Switching Protocols\",\n                            headers: new Headers({\n                                \"Upgrade\": \"websocket\",\n                                \"Connection\": \"Upgrade\",\n                            }),\n                        });\n                        // HACK: Node.js currently does not support setting the\n                        // status code to outside the range of 200 to 599. This\n                        // is a workaround to set the status code to 101.\n                        Object.defineProperty(response, \"status\", {\n                            configurable: true,\n                            value: 101,\n                        });\n                        resolve({ socket: client, response });\n                    }\n                    else {\n                        resolve({ socket: client });\n                    }\n                });\n            });\n        }\n        else {\n            throw new TypeError(\"Unsupported runtime\");\n        }\n    }\n    /**\n     * Used in Bun, to bind the WebSocket server to the Bun server instance.\n     */\n    bunBind(server) {\n        this[_httpServer] = server;\n    }\n    /**\n     * A WebSocket listener for `Bun.serve()`.\n     */\n    get bunListener() {\n        const clients = this[_clients];\n        const connTasks = this[_connTasks];\n        return {\n            idleTimeout: this.idleTimeout,\n            perMessageDeflate: this.perMessageDeflate,\n            open: async (ws) => {\n                const { request } = ws.data;\n                const { WebSocketConnection } = await import(\"./ws/base.ts\");\n                const client = new WebSocketConnection(ws);\n                clients.set(request, client);\n                const task = connTasks.get(request);\n                if (task) {\n                    connTasks.delete(request);\n                    task.resolve(client);\n                }\n            },\n            message: (ws, msg) => {\n                const { request } = ws.data;\n                const client = clients.get(request);\n                if (client) {\n                    if (typeof msg === \"string\") {\n                        client.dispatchEvent(new MessageEvent(\"message\", {\n                            data: msg,\n                        }));\n                    }\n                    else {\n                        client.dispatchEvent(new MessageEvent(\"message\", {\n                            data: new Uint8Array(msg),\n                        }));\n                    }\n                }\n            },\n            error: (ws, error) => {\n                Object.assign(ws, { [_errored]: true });\n                const { request } = ws.data;\n                const client = clients.get(request);\n                client && client.dispatchEvent(createErrorEvent(\"error\", { error }));\n            },\n            close: (ws, code, reason) => {\n                const { request } = ws.data;\n                const client = clients.get(request);\n                if (client) {\n                    clients.delete(request);\n                    client.dispatchEvent(createCloseEvent(\"close\", {\n                        code,\n                        reason,\n                        wasClean: Reflect.get(ws, _errored) !== true,\n                    }));\n                }\n            },\n        };\n    }\n    /**\n     * An iterator that yields all connected WebSocket clients, can be used to\n     * broadcast messages to all clients.\n     */\n    get clients() {\n        return this[_clients].values();\n    }\n}\n_a = _clients, _b = _httpServer, _c = _wsServer, _d = _connTasks;\n//# sourceMappingURL=ws.js.map"],"names":[],"mappings":"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"}