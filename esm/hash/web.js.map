{"version":3,"file":"web.js","sources":["../../hash/web.ts"],"sourcesContent":["import bytes, { text } from \"../bytes.ts\";\nimport { readAsArrayBuffer } from \"../reader.ts\";\nexport async function toArrayBuffer(data) {\n    let buffer;\n    if (typeof data === \"string\") {\n        buffer = bytes(data).buffer;\n    }\n    else if (data instanceof ArrayBuffer) {\n        buffer = data;\n    }\n    else if (ArrayBuffer.isView(data)) {\n        buffer = data.buffer;\n    }\n    else if (typeof ReadableStream === \"function\" && data instanceof ReadableStream) {\n        buffer = await readAsArrayBuffer(data);\n    }\n    else if (typeof Blob === \"function\" && data instanceof Blob) {\n        buffer = await data.arrayBuffer();\n    }\n    else {\n        throw new TypeError(\"Unsupported data type\");\n    }\n    return buffer;\n}\nexport async function sha1(data, encoding = undefined) {\n    const buffer = await toArrayBuffer(data);\n    const hash = await crypto.subtle.digest(\"SHA-1\", buffer);\n    if (encoding === \"hex\") {\n        return text(new Uint8Array(hash), \"hex\");\n    }\n    else if (encoding === \"base64\") {\n        return text(new Uint8Array(hash), \"base64\");\n    }\n    else {\n        return hash;\n    }\n}\nexport async function sha256(data, encoding = undefined) {\n    const buffer = await toArrayBuffer(data);\n    const hash = await crypto.subtle.digest(\"SHA-256\", buffer);\n    if (encoding === \"hex\") {\n        return text(new Uint8Array(hash), \"hex\");\n    }\n    else if (encoding === \"base64\") {\n        return text(new Uint8Array(hash), \"base64\");\n    }\n    else {\n        return hash;\n    }\n}\nexport async function sha512(data, encoding = undefined) {\n    const buffer = await toArrayBuffer(data);\n    const hash = await crypto.subtle.digest(\"SHA-512\", buffer);\n    if (encoding === \"hex\") {\n        return text(new Uint8Array(hash), \"hex\");\n    }\n    else if (encoding === \"base64\") {\n        return text(new Uint8Array(hash), \"base64\");\n    }\n    else {\n        return hash;\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":[],"mappings":"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"}