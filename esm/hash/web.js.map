{"version":3,"file":"web.js","sources":["../../hash/web.ts"],"sourcesContent":["import bytes, { text } from \"../bytes.ts\";\nimport { readAsArrayBuffer } from \"../reader.ts\";\n/**\n * Calculates the hash of the given data.\n *\n * This function uses the same algorithm as the [string-hash](https://www.npmjs.com/package/string-hash)\n * package, non-string data are converted to strings before hashing.\n *\n * @example\n * ```ts\n * import hash from \"@ayonli/jsext/hash\";\n *\n * console.log(hash(\"Hello, World!\")); // 4010631688\n * console.log(hash(new Uint8Array([1, 2, 3]))); // 193378021\n * ```\n */\nexport function hash(data) {\n    let str;\n    if (typeof data === \"string\") {\n        str = data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        str = text(new Uint8Array(data));\n    }\n    else if (data instanceof Uint8Array) {\n        str = text(data);\n    }\n    else if (ArrayBuffer.isView(data)) {\n        const bytes = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n        str = text(bytes);\n    }\n    else {\n        throw new TypeError(\"Unsupported data type\");\n    }\n    let hash = 5381;\n    let i = str.length;\n    while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n    }\n    /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n     * integers. Since we want the results to be always positive, convert the\n     * signed int to an unsigned by doing an unsigned bitshift. */\n    return hash >>> 0;\n}\nconst CRC32_TABLE = (() => {\n    const IEEE = 0xedb88320;\n    const table = new Uint32Array(256);\n    // Fill the table\n    for (let i = 0; i < 256; i++) {\n        let crc = i;\n        for (let j = 0; j < 8; j++) {\n            crc = crc & 1 ? IEEE ^ crc >>> 1 : crc >>> 1;\n        }\n        table[i] = crc;\n    }\n    return table;\n})();\n/**\n * Calculates the CRC-32 hash of the given data, the result is a 32-bit unsigned\n * integer.\n *\n * This function is based on IEEE polynomial, which is widely used by Ethernet\n * (IEEE 802.3), v.42, fddi, gzip, zip, png and other technologies.\n *\n * @param previous The previous CRC value, default is `0`. This is useful when\n * calculating the CRC of a large data in chunks.\n *\n * @example\n * ```ts\n * import { crc32 } from \"@ayonli/jsext/hash\";\n *\n * console.log(crc32(\"Hello, World!\")); // 3964322768\n * console.log(crc32(new Uint8Array([1, 2, 3]))); // 1438416925\n * ```\n */\nexport function crc32(data, previous = 0) {\n    let bin;\n    if (data instanceof Uint8Array) {\n        bin = data;\n    }\n    else if (typeof data === \"string\") {\n        bin = bytes(data);\n    }\n    else if (data instanceof ArrayBuffer) {\n        bin = new Uint8Array(data);\n    }\n    else if (ArrayBuffer.isView(data)) {\n        bin = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n    else {\n        throw new TypeError(\"Unsupported data type\");\n    }\n    let crc = ~~previous ^ -1;\n    for (let i = 0; i < bin.length; i++) {\n        crc = CRC32_TABLE[(crc ^ bin[i]) & 0xff] ^ crc >>> 8;\n    }\n    return (crc ^ -1) >>> 0;\n}\nexport async function toBytes(data) {\n    let bin;\n    if (typeof data === \"string\") {\n        bin = bytes(data);\n    }\n    else if (data instanceof ArrayBuffer) {\n        bin = new Uint8Array(data);\n    }\n    else if (data instanceof Uint8Array) {\n        bin = data;\n    }\n    else if (ArrayBuffer.isView(data)) {\n        bin = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n    else if (typeof ReadableStream === \"function\" && data instanceof ReadableStream) {\n        bin = new Uint8Array(await readAsArrayBuffer(data));\n    }\n    else if (typeof Blob === \"function\" && data instanceof Blob) {\n        bin = new Uint8Array(await data.arrayBuffer());\n    }\n    else {\n        throw new TypeError(\"Unsupported data type\");\n    }\n    return bin;\n}\nexport async function sha1(data, encoding = undefined) {\n    const bytes = await toBytes(data);\n    const hash = await crypto.subtle.digest(\"SHA-1\", bytes);\n    if (encoding === \"hex\") {\n        return text(new Uint8Array(hash), \"hex\");\n    }\n    else if (encoding === \"base64\") {\n        return text(new Uint8Array(hash), \"base64\");\n    }\n    else {\n        return hash;\n    }\n}\nexport async function sha256(data, encoding = undefined) {\n    const bytes = await toBytes(data);\n    const hash = await crypto.subtle.digest(\"SHA-256\", bytes);\n    if (encoding === \"hex\") {\n        return text(new Uint8Array(hash), \"hex\");\n    }\n    else if (encoding === \"base64\") {\n        return text(new Uint8Array(hash), \"base64\");\n    }\n    else {\n        return hash;\n    }\n}\nexport async function sha512(data, encoding = undefined) {\n    const bytes = await toBytes(data);\n    const hash = await crypto.subtle.digest(\"SHA-512\", bytes);\n    if (encoding === \"hex\") {\n        return text(new Uint8Array(hash), \"hex\");\n    }\n    else if (encoding === \"base64\") {\n        return text(new Uint8Array(hash), \"base64\");\n    }\n    else {\n        return hash;\n    }\n}\nexport async function hmac(algorithm, key, data, encoding = undefined) {\n    const keyBuffer = await crypto.subtle.importKey(\"raw\", bytes(key), {\n        name: \"HMAC\",\n        hash: {\n            \"sha1\": \"SHA-1\",\n            \"sha256\": \"SHA-256\",\n            \"sha512\": \"SHA-512\",\n        }[algorithm],\n    }, false, [\"sign\"]);\n    const dataBytes = await toBytes(data);\n    const hash = await crypto.subtle.sign(\"HMAC\", keyBuffer, dataBytes);\n    if (encoding === \"hex\") {\n        return text(new Uint8Array(hash), \"hex\");\n    }\n    else if (encoding === \"base64\") {\n        return text(new Uint8Array(hash), \"base64\");\n    }\n    else {\n        return hash;\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":[],"mappings":";;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,IAAI,CAAC,IAAI,EAAE;AAC3B,IAAI,IAAI,GAAG,CAAC;AACZ,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAClC,QAAQ,GAAG,GAAG,IAAI,CAAC;AACnB,KAAK;AACL,SAAS,IAAI,IAAI,YAAY,WAAW,EAAE;AAC1C,QAAQ,GAAG,GAAG,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;AACzC,KAAK;AACL,SAAS,IAAI,IAAI,YAAY,UAAU,EAAE;AACzC,QAAQ,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,KAAK;AACL,SAAS,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACvC,QAAQ,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACpF,QAAQ,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC;AACpB,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;AACvB,IAAI,OAAO,CAAC,EAAE;AACd,QAAQ,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACjD,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,IAAI,KAAK,CAAC,CAAC;AACtB,CAAC;AACD,MAAM,WAAW,GAAG,CAAC,MAAM;AAC3B,IAAI,MAAM,IAAI,GAAG,UAAU,CAAC;AAC5B,IAAI,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC;AACvC;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,QAAQ,IAAI,GAAG,GAAG,CAAC,CAAC;AACpB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACpC,YAAY,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;AACzD,SAAS;AACT,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACvB,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC,GAAG,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,EAAE;AAC1C,IAAI,IAAI,GAAG,CAAC;AACZ,IAAI,IAAI,IAAI,YAAY,UAAU,EAAE;AACpC,QAAQ,GAAG,GAAG,IAAI,CAAC;AACnB,KAAK;AACL,SAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACvC,QAAQ,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAK;AACL,SAAS,IAAI,IAAI,YAAY,WAAW,EAAE;AAC1C,QAAQ,GAAG,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;AACnC,KAAK;AACL,SAAS,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACvC,QAAQ,GAAG,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5E,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;AAC9B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,QAAQ,GAAG,GAAG,WAAW,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;AAC7D,KAAK;AACL,IAAI,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;AAC5B,CAAC;AACM,eAAe,OAAO,CAAC,IAAI,EAAE;AACpC,IAAI,IAAI,GAAG,CAAC;AACZ,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAClC,QAAQ,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AAC1B,KAAK;AACL,SAAS,IAAI,IAAI,YAAY,WAAW,EAAE;AAC1C,QAAQ,GAAG,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC;AACnC,KAAK;AACL,SAAS,IAAI,IAAI,YAAY,UAAU,EAAE;AACzC,QAAQ,GAAG,GAAG,IAAI,CAAC;AACnB,KAAK;AACL,SAAS,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACvC,QAAQ,GAAG,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5E,KAAK;AACL,SAAS,IAAI,OAAO,cAAc,KAAK,UAAU,IAAI,IAAI,YAAY,cAAc,EAAE;AACrF,QAAQ,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5D,KAAK;AACL,SAAS,IAAI,OAAO,IAAI,KAAK,UAAU,IAAI,IAAI,YAAY,IAAI,EAAE;AACjE,QAAQ,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AACvD,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAC;AACrD,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,eAAe,IAAI,CAAC,IAAI,EAAE,QAAQ,GAAG,SAAS,EAAE;AACvD,IAAI,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;AACtC,IAAI,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC5D,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC5B,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AACjD,KAAK;AACL,SAAS,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACpC,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpD,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,CAAC;AACM,eAAe,MAAM,CAAC,IAAI,EAAE,QAAQ,GAAG,SAAS,EAAE;AACzD,IAAI,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;AACtC,IAAI,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC9D,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC5B,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AACjD,KAAK;AACL,SAAS,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACpC,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpD,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,CAAC;AACM,eAAe,MAAM,CAAC,IAAI,EAAE,QAAQ,GAAG,SAAS,EAAE;AACzD,IAAI,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;AACtC,IAAI,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAC9D,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC5B,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AACjD,KAAK;AACL,SAAS,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACpC,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpD,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,CAAC;AACM,eAAe,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,GAAG,SAAS,EAAE;AACvE,IAAI,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE;AACvE,QAAQ,IAAI,EAAE,MAAM;AACpB,QAAQ,IAAI,EAAE;AACd,YAAY,MAAM,EAAE,OAAO;AAC3B,YAAY,QAAQ,EAAE,SAAS;AAC/B,YAAY,QAAQ,EAAE,SAAS;AAC/B,SAAS,CAAC,SAAS,CAAC;AACpB,KAAK,EAAE,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACxB,IAAI,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1C,IAAI,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACxE,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC5B,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AACjD,KAAK;AACL,SAAS,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACpC,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpD,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;;;;"}