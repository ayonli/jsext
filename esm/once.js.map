{"version":3,"file":"once.js","sources":["../once.ts"],"sourcesContent":["const uninitialized = Symbol(\"uninitialized\");\n/**\n * Creates a function that performs lazy initialization on the first call and\n * returns the same result on subsequent calls.\n *\n * @example\n * ```ts\n * import once from \"@ayonli/jsext/once\";\n *\n * // sync\n * const getMap = once(() => new Map());\n * (() => {\n *     const map1 = getMap();\n *     map1.set(\"key\", \"value\");\n *     console.log(map1.get(\"key\")); // \"value\"\n *\n *     const map2 = getMap();\n *     console.log(map1 === map2); // true\n * })();\n *\n * // async\n * const getDb = once(async () => {\n *     const db = await connectToDb();\n *     return db;\n * });\n * (async () => {\n *     const db1 = await getDb();\n *     const result = await db1.query(\"SELECT * FROM users\");\n *     console.log(result);\n *\n *     const db2 = await getDb();\n *     console.log(db1 === db2); // true\n * })();\n * ```\n */\nexport default function once(init) {\n    let value = uninitialized;\n    return () => {\n        if (value === uninitialized) {\n            value = init();\n        }\n        return value;\n    };\n}\n//# sourceMappingURL=once.js.map"],"names":[],"mappings":"AAAA,MAAM,aAAa,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAAS,IAAI,CAAC,IAAI,EAAE;AACnC,IAAI,IAAI,KAAK,GAAG,aAAa,CAAC;AAC9B,IAAI,OAAO,MAAM;AACjB,QAAQ,IAAI,KAAK,KAAK,aAAa,EAAE;AACrC,YAAY,KAAK,GAAG,IAAI,EAAE,CAAC;AAC3B,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK,CAAC;AACN;;;;"}