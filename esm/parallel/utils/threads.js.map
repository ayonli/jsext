{"version":3,"file":"threads.js","sources":["../../../parallel/utils/threads.ts"],"sourcesContent":["import { Channel } from \"../../chan.ts\";\nimport { isBun, isDeno, isNode, isNodePrior14 } from \"../constants.ts\";\nimport { handleChannelMessage, isChannelMessage, wrapChannel } from \"./channel.ts\";\nimport { isPlainObject } from \"../../object/index.ts\";\nimport { sequence } from \"../../number/index.ts\";\nimport { fromErrorEvent, fromObject, isAggregateError, isDOMException, toObject, } from \"../../error/index.ts\";\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\nlet gcTimer;\nexport const remoteTasks = new Map();\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function isCallResponse(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options) {\n    var _a;\n    let { adapter = \"worker_threads\", parallel } = options;\n    let entry = parallel.workerEntry;\n    if (isNode || isBun) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules\n                // (hope it exists).\n                if (isBun) {\n                    if (_filename.endsWith(\".ts\")) {\n                        entry = \"./node_modules/@ayonli/jsext/worker.ts\";\n                    }\n                    else {\n                        entry = \"./node_modules/@ayonli/jsext/bundle/worker.mjs\";\n                    }\n                }\n                else {\n                    entry = \"./node_modules/@ayonli/jsext/bundle/worker-node.mjs\";\n                }\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if (_dirname.endsWith(path.join(\"jsext\", \"bundle\"))) {\n                    // The application imports the bundled version of this module\n                    _dirname = path.dirname(_dirname);\n                }\n                else if ([\n                    path.join(\"jsext\", \"cjs\", \"parallel\", \"utils\"),\n                    path.join(\"jsext\", \"esm\", \"parallel\", \"utils\"),\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this module\n                    _dirname = path.resolve(_dirname, \"../../..\");\n                }\n                else {\n                    _dirname = path.resolve(_dirname, \"../..\");\n                }\n                if (isBun) {\n                    if (_filename.endsWith(\".ts\")) {\n                        entry = path.join(_dirname, \"worker.ts\");\n                    }\n                    else {\n                        entry = path.join(_dirname, \"bundle\", \"worker.mjs\");\n                    }\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker-node.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isNodePrior14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        if (isDeno) {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    if (import.meta.url.includes(\"jsr.io\")) {\n                        entry = \"jsr:@ayonli/jsext/worker.ts\";\n                    }\n                    else {\n                        entry = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n                    }\n                }\n                else {\n                    if (import.meta.url.includes(\"jsr.io\")) {\n                        entry = \"jsr:@ayonli/jsext/worker.ts\";\n                    }\n                    else {\n                        const paths = import.meta.url.split(\"/\").slice(0, -1);\n                        let _dirname = paths.join(\"/\");\n                        if (_dirname.endsWith(\"/jsext/bundle\")) {\n                            _dirname = paths.slice(0, -1).join(\"/\");\n                        }\n                        else if (_dirname.endsWith(\"/jsext/cjs/parallel/utils\")\n                            || _dirname.endsWith(\"/jsext/esm/parallel/utils\")) {\n                            _dirname = paths.slice(0, -3).join(\"/\");\n                        }\n                        else {\n                            _dirname = paths.slice(0, -2).join(\"/\");\n                        }\n                        entry = _dirname + \"/worker.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can\n            // bypass CORS security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nexport async function acquireWorker(taskId, parallel) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker({ parallel })).worker;\n                const handleMessage = (msg) => {\n                    var _a, _b, _c, _d;\n                    if (isChannelMessage(msg)) {\n                        handleChannelMessage(msg);\n                    }\n                    else if (isCallResponse(msg) && msg.taskId) {\n                        const task = remoteTasks.get(msg.taskId);\n                        if (!task)\n                            return;\n                        if (msg.type === \"return\" || msg.type === \"error\") {\n                            if (msg.type === \"error\") {\n                                const err = isPlainObject(msg.error)\n                                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                                    : msg.error;\n                                if (err instanceof Error &&\n                                    (err.message.includes(\"not be cloned\")\n                                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                                    )) {\n                                    Object.defineProperty(err, \"stack\", {\n                                        configurable: true,\n                                        enumerable: false,\n                                        writable: true,\n                                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                            + `at ${task.fn} (${task.module})`,\n                                    });\n                                }\n                                if (task.resolver) {\n                                    task.resolver.reject(err);\n                                    if (task.channel) {\n                                        task.channel.close();\n                                    }\n                                }\n                                else if (task.channel) {\n                                    task.channel.close(err);\n                                }\n                                else {\n                                    task.error = err;\n                                }\n                            }\n                            else {\n                                const value = unwrapReturnValue(msg.value);\n                                if (task.resolver) {\n                                    task.resolver.resolve(value);\n                                }\n                                else {\n                                    task.result = { value };\n                                }\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            poolRecord.tasks.delete(msg.taskId);\n                            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                                // Allow the main thread to exit if the event\n                                // loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        else if (msg.type === \"yield\") {\n                            const value = unwrapReturnValue(msg.value);\n                            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.send({ value, done: msg.done });\n                            if (msg.done) {\n                                // The final message of yield event is the\n                                // return value.\n                                handleMessage({\n                                    type: \"return\",\n                                    value,\n                                    taskId: msg.taskId,\n                                });\n                            }\n                        }\n                        else if (msg.type === \"gen\") {\n                            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n                        }\n                    }\n                };\n                const handleClose = (err) => {\n                    for (const taskId of poolRecord.tasks) {\n                        poolRecord.tasks.delete(taskId);\n                        const task = remoteTasks.get(taskId);\n                        if (task) {\n                            if (task.resolver) {\n                                task.resolver.reject(err);\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            else if (task.channel) {\n                                task.channel.close(err);\n                            }\n                            else {\n                                task.error = err;\n                            }\n                        }\n                    }\n                    workerPool = workerPool.filter(item => item !== poolRecord);\n                };\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to\n                            // the channel in the worker thread when the thread\n                            // is terminated. This situation often occurs when\n                            // using `run()` to call function and the `result()`\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if ((arg instanceof Exception)\n            || isDOMException(arg)\n            || isAggregateError(arg)) {\n            return toObject(arg);\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n                else if ((value instanceof Exception)\n                    || isDOMException(value)\n                    || isAggregateError(value)) {\n                    arg[key] = toObject(value);\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            arg = arg.map(item => {\n                if (item instanceof ArrayBuffer) {\n                    transferable.push(item);\n                    return item;\n                }\n                else if ((item instanceof Exception)\n                    || isDOMException(item)\n                    || isAggregateError(item)) {\n                    return toObject(item);\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nexport function unwrapReturnValue(value) {\n    if (isPlainObject(value) && (value[\"@@type\"] === \"Exception\" ||\n        value[\"@@type\"] === \"DOMException\" ||\n        value[\"@@type\"] === \"AggregateError\")) {\n        return fromObject(value);\n    }\n    return value;\n}\n//# sourceMappingURL=threads.js.map"],"names":[],"mappings":"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"}