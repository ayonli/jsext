{"version":3,"file":"parallel.js","sources":["../parallel.ts"],"sourcesContent":["var _a;\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport run, { createFFIRequest, createWorker, isFFIResponse, sanitizeModuleId } from \"./run.ts\";\nimport chan from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { fromObject } from \"./error/index.ts\";\nconst isNode = typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst tasks = new Map;\nlet workerPool = [];\nasync function acquireWorker(taskId) {\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    let worker;\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n        worker = poolRecord.worker;\n    }\n    else if (workerPool.length < run.maxWorkers) {\n        const res = await createWorker({ entry: run.workerEntry, adapter: \"worker_threads\" });\n        worker = res.worker;\n        const handleMessage = (msg) => {\n            var _a, _b;\n            if (isFFIResponse(msg) && msg.taskId) {\n                const task = tasks.get(msg.taskId);\n                if (!task) {\n                    return;\n                }\n                if (msg.type === \"error\") {\n                    const err = msg.error instanceof Error\n                        ? msg.error\n                        : fromObject(msg.error);\n                    if (task.resolver) {\n                        task.resolver.reject(err);\n                    }\n                    else if (task.channel) {\n                        task.channel.close(err);\n                    }\n                    else {\n                        task.error = err;\n                    }\n                }\n                else if (msg.type === \"return\") {\n                    if (task.resolver) {\n                        task.resolver.resolve(msg.value);\n                    }\n                    else {\n                        task.result = { value: msg.value };\n                    }\n                    if (task.channel) {\n                        task.channel.close();\n                    }\n                    if (poolRecord) {\n                        poolRecord.tasks.delete(msg.taskId);\n                        { // GC: clean long-time unused workers\n                            const now = Date.now();\n                            const idealItems = [];\n                            workerPool = workerPool.filter(item => {\n                                const ideal = !item.tasks.size && (now - item.lastAccess) >= 300000;\n                                if (ideal) {\n                                    idealItems.push(item);\n                                }\n                                return !ideal;\n                            });\n                            idealItems.forEach(item => {\n                                item.worker.terminate();\n                            });\n                        }\n                    }\n                }\n                else if (msg.type === \"yield\") {\n                    (_a = task.channel) === null || _a === void 0 ? void 0 : _a.push({ value: msg.value, done: msg.done });\n                    if (msg.done) {\n                        // The final message of yield event is the return value.\n                        handleMessage({\n                            type: \"return\",\n                            value: msg.value,\n                            taskId: msg.taskId,\n                        });\n                    }\n                }\n                else if (msg.type === \"gen\") {\n                    (_b = task.generate) === null || _b === void 0 ? void 0 : _b.call(task);\n                }\n            }\n        };\n        if (isNode) {\n            worker.on(\"message\", handleMessage);\n            await new Promise(resolve => worker.once(\"online\", resolve));\n        }\n        else {\n            worker.onmessage = (ev) => handleMessage(ev.data);\n        }\n        workerPool.push(poolRecord = {\n            worker,\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n        worker = poolRecord.worker;\n    }\n    poolRecord.tasks.add(taskId);\n    return worker;\n}\nfunction createCall(script, fn, args) {\n    const modId = sanitizeModuleId(script, true);\n    const taskId = taskIdCounter.next().value;\n    const task = {};\n    tasks.set(taskId, task);\n    let worker;\n    return new ThenableAsyncGenerator({\n        async then(onfulfilled, onrejected) {\n            if (!worker) {\n                worker = await acquireWorker(taskId);\n                worker.postMessage(createFFIRequest(modId, fn, args, taskId));\n            }\n            const task = tasks.get(taskId);\n            if (task) {\n                if (task.error) {\n                    tasks.delete(taskId);\n                    return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n                }\n                else if (task.result) {\n                    tasks.delete(taskId);\n                    return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n                }\n                else {\n                    return new Promise((resolve, reject) => {\n                        task.resolver = {\n                            resolve: (value) => {\n                                tasks.delete(taskId);\n                                resolve(value);\n                            },\n                            reject: (err) => {\n                                tasks.delete(taskId);\n                                reject(err);\n                            }\n                        };\n                    }).then(onfulfilled, onrejected);\n                }\n            }\n            else {\n                throw new Error(\"task doesn't exist\");\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = tasks.get(taskId);\n            if (task) {\n                if (task.error) {\n                    const err = task.error;\n                    tasks.delete(taskId);\n                    throw err;\n                }\n                else if (task.result) {\n                    const value = task.result.value;\n                    tasks.delete(taskId);\n                    return { value, done: true };\n                }\n                else {\n                    if (!worker) {\n                        worker = await acquireWorker(taskId);\n                        worker.postMessage(createFFIRequest(modId, fn, args, taskId));\n                        await new Promise((resolve) => {\n                            task.generate = resolve;\n                        });\n                    }\n                    (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                    worker.postMessage(createFFIRequest(modId, fn, [input], taskId, \"next\"));\n                    return await task.channel.pop();\n                }\n            }\n            else {\n                return { value: undefined, done: true };\n            }\n        },\n        async return(value) {\n            worker === null || worker === void 0 ? void 0 : worker.postMessage(createFFIRequest(modId, fn, [value], taskId, \"return\"));\n            tasks.delete(taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            worker === null || worker === void 0 ? void 0 : worker.postMessage(createFFIRequest(modId, fn, [err], taskId, \"throw\"));\n            tasks.delete(taskId);\n            throw err;\n        },\n    });\n}\n/**\n * Links a module whose functions are run in worker threads.\n *\n * NOTE: This function also uses `run.maxWorkers` and `run.workerEntry` for worker configuration.\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./job-example.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./job-example.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n */\nexport default function parallel(mod) {\n    return new Proxy(Object.create(null), {\n        get: (_, prop) => {\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    return createCall(mod, prop, args);\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n//# sourceMappingURL=parallel.js.map"],"names":[],"mappings":"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"}