{"version":3,"file":"parallel.js","sources":["../parallel.ts"],"sourcesContent":["import { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport { isNode, resolveModule, isChannelMessage, handleChannelMessage, wrapChannel } from \"./util.ts\";\nconst shouldTransfer = Symbol.for(\"shouldTransfer\");\nconst IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\nconst isMainThread = isNode\n    ? (!process.argv.includes(\"--worker-thread\") && !process.env[\"__WORKER_THREAD\"])\n    // @ts-ignore\n    : typeof WorkerGlobalScope === \"undefined\";\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst tasks = new Map;\nlet workerPool = [];\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let start = str.lastIndexOf(\"(\");\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += 1;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if (isNode &&\n        !/\\.[cm]?(js|ts|)x?$/.test(_id) && // omit suffix\n        IsPath.test(_id) // relative or absolute path\n    ) {\n        if (typeof Bun === \"object\") {\n            _id += \".ts\";\n        }\n        else {\n            _id += \".js\";\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport function createCallRequest(init) {\n    const msg = { ...init, type: init.type || \"call\" };\n    if (!msg.baseUrl) {\n        if (typeof Deno === \"object\") {\n            msg.baseUrl = \"file://\" + Deno.cwd() + \"/\";\n        }\n        else if (isNode) {\n            if (IsPath.test(msg.script)) {\n                // Only set baseUrl for relative modules, don't set it for node modules.\n                msg.baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n        }\n        else if (typeof location === \"object\") {\n            msg.baseUrl = location.href;\n        }\n    }\n    return msg;\n}\nexport function isCallResponse(msg) {\n    return msg && typeof msg === \"object\" && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options = {}) {\n    var _a, _b;\n    let { entry, adapter } = options;\n    if (isNode) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules (hope it exists).\n                entry = \"./node_modules/@ayonli/jsext/bundle/worker.mjs\";\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if ([\n                    path.join(\"jsext\", \"cjs\"),\n                    path.join(\"jsext\", \"esm\"),\n                    path.join(\"jsext\", \"bundle\")\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this module,\n                    // redirect to the root directory of this package.\n                    _dirname = path.dirname(_dirname);\n                }\n                if (typeof Bun === \"object\") {\n                    entry = path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const isPrior14 = parseInt(process.version.slice(1)) < 14;\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization: isPrior14 ? \"advanced\" : \"json\",\n            });\n            const workerId = worker.pid;\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else {\n            const { Worker } = await import(\"worker_threads\");\n            const options = {};\n            if (typeof Bun === \"object\") {\n                // Currently, Bun doesn't support `argv` option, use `env` for compatibility\n                // support.\n                options.env = { ...process.env, __WORKER_THREAD: \"true\" };\n            }\n            else {\n                options.argv = [\"--worker-thread\"];\n            }\n            const worker = new Worker(entry, options);\n            // `threadId` may not exist in Bun.\n            const workerId = (_a = worker.threadId) !== null && _a !== void 0 ? _a : workerIdCounter.next().value;\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n    }\n    else {\n        if (typeof Deno === \"object\") {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    entry = \"https://ayonli.github.io/jsext/bundle/worker-web.mjs\";\n                }\n                else {\n                    entry = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker-web.ts\"\n                    ].join(\"/\");\n                    // The application imports the compiled version of this module,\n                    // redirect to the source worker entry.\n                    if (entry.endsWith(\"/esm/worker-web.ts\")) {\n                        entry = entry.slice(0, -18) + \"/worker-web.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can bypass CORS\n            // security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker-web.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_b = res.headers.get(\"content-type\")) === null || _b === void 0 ? void 0 : _b.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nasync function acquireWorker(taskId) {\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    let worker;\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n        worker = poolRecord.worker;\n    }\n    else if (workerPool.length < parallel.maxWorkers) {\n        const res = await createWorker({ entry: parallel.workerEntry, adapter: \"worker_threads\" });\n        worker = res.worker;\n        const handleMessage = (msg) => {\n            var _a, _b;\n            if (isChannelMessage(msg)) {\n                handleChannelMessage(msg);\n            }\n            else if (isCallResponse(msg) && msg.taskId) {\n                const task = tasks.get(msg.taskId);\n                if (!task)\n                    return;\n                if (msg.type === \"return\" || msg.type === \"error\") {\n                    if (msg.type === \"error\") {\n                        if (task.resolver) {\n                            task.resolver.reject(msg.error);\n                            if (task.channel) {\n                                task.channel.close();\n                            }\n                        }\n                        else if (task.channel) {\n                            task.channel.close(msg.error);\n                        }\n                        else {\n                            task.error = msg.error;\n                        }\n                    }\n                    else {\n                        if (task.resolver) {\n                            task.resolver.resolve(msg.value);\n                        }\n                        else {\n                            task.result = { value: msg.value };\n                        }\n                        if (task.channel) {\n                            task.channel.close();\n                        }\n                    }\n                    if (poolRecord) {\n                        poolRecord.tasks.delete(msg.taskId);\n                        if (!poolRecord.tasks.size) {\n                            if (isNode) {\n                                // Allow the main thread to exit if the event loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        { // GC: clean long-time unused workers\n                            const now = Date.now();\n                            const idealItems = [];\n                            workerPool = workerPool.filter(item => {\n                                const ideal = !item.tasks.size && (now - item.lastAccess) >= 300000;\n                                if (ideal) {\n                                    idealItems.push(item);\n                                }\n                                return !ideal;\n                            });\n                            idealItems.forEach(item => {\n                                item.worker.terminate();\n                            });\n                        }\n                    }\n                }\n                else if (msg.type === \"yield\") {\n                    (_a = task.channel) === null || _a === void 0 ? void 0 : _a.push({ value: msg.value, done: msg.done });\n                    if (msg.done) {\n                        // The final message of yield event is the return value.\n                        handleMessage({\n                            type: \"return\",\n                            value: msg.value,\n                            taskId: msg.taskId,\n                        });\n                    }\n                }\n                else if (msg.type === \"gen\") {\n                    (_b = task.generate) === null || _b === void 0 ? void 0 : _b.call(task);\n                }\n            }\n        };\n        if (isNode) {\n            worker.on(\"message\", handleMessage);\n            await new Promise(resolve => worker.once(\"online\", resolve));\n        }\n        else {\n            worker.onmessage = (ev) => handleMessage(ev.data);\n        }\n        workerPool.push(poolRecord = {\n            worker,\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n        worker = poolRecord.worker;\n    }\n    poolRecord.tasks.add(taskId);\n    if (isNode) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        worker.postMessage({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if (arg[shouldTransfer]) {\n            transferable.push(arg);\n            return arg;\n        }\n        else {\n            return arg;\n        }\n    });\n    return { args, transferable };\n}\nfunction createRemoteCall(modId, fn, args, baseUrl = undefined) {\n    const taskId = taskIdCounter.next().value;\n    tasks.set(taskId, {});\n    let getWorker = acquireWorker(taskId);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then((worker) => {\n        worker.postMessage(createCallRequest({\n            script: modId,\n            fn,\n            args: _args,\n            taskId,\n            baseUrl: baseUrl\n        }), transferable);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = tasks.get(taskId);\n            if (task.error) {\n                tasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                tasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            tasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            tasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                }).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = tasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                tasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                tasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                worker.postMessage(createCallRequest({\n                    script: modId,\n                    fn,\n                    args: [input],\n                    taskId,\n                    type: \"next\",\n                    baseUrl: baseUrl,\n                }), transferable);\n                return await task.channel.pop();\n            }\n        },\n        async return(value) {\n            tasks.delete(taskId);\n            const worker = await getWorker;\n            worker.postMessage(createCallRequest({\n                script: modId,\n                fn,\n                args: [value],\n                taskId,\n                type: \"return\",\n                baseUrl: baseUrl,\n            }), transferable);\n            return { value, done: true };\n        },\n        async throw(err) {\n            tasks.delete(taskId);\n            const worker = await getWorker;\n            worker.postMessage(createCallRequest({\n                script: modId,\n                fn,\n                args: [err],\n                taskId,\n                type: \"throw\",\n                baseUrl: baseUrl,\n            }), transferable);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(modId, fn, args, baseUrl = undefined) {\n    const getReturns = resolveModule(modId, baseUrl).then(module => {\n        return module[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    const lines = stackTrace.split(\"\\n\");\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            baseUrl = \"file://\" + baseUrl;\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module and run its functions in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS module,\n * **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * In Bun and Deno, the `module` can also be a TypeScript file.\n *\n * Data are cloned and transferred between threads via **Structured Clone Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel} can also be\n * used to transfer data between threads. To do so, just passed a channel instance to the threaded\n * function.\n *\n * But be aware, channel can only be used as a parameter, return a channel from the threaded\n * function is not allowed. And the channel can only be used for one threaded function at a time,\n * once passed, the data can only be transferred into and out-from the function.\n *\n * The difference between using channel and generator function for streaming processing is, for a\n * generator function, `next(value)` is coupled with a `yield value`, the process is blocked\n * between **next** calls, channel doesn't have this limitation, we can use it to stream all\n * the data into the function before processing and receiving any result.\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<number>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of Number.sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);\n * console.log(await length);\n * // output:\n * // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * // 10\n * ```\n */\nfunction parallel(module) {\n    const modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    return new Proxy(Object.create(null), {\n        get: (_, prop) => {\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args, baseUrl);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args, baseUrl);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     *\n     * In Bun, Deno and browsers, the default value is set to\n     * `navigator.hardwareConcurrency`.\n     *\n     * In Node.js, the default value is `16`.\n     */\n    parallel.maxWorkers = typeof navigator === \"object\" ? navigator.hardwareConcurrency : 16;\n    /**\n     * Marks the given data to be transferred instead of cloned to the worker thread.\n     *\n     * Currently, only `ArrayBuffer` are guaranteed to be transferable across all supported\n     * JavaScript runtimes.\n     *\n     * Be aware, the transferable object can only be used as a parameter, return a transferable\n     * object from the threaded function is not supported and will always be cloned.\n     *\n     * @example\n     * ```ts\n     * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n     *\n     * const arr = Uint8Array.from([0, 1, 2]);\n     * const length = await mod.transfer(parallel.transfer(arr.buffer));\n     *\n     * console.assert(length === 3);\n     * console.assert(arr.byteLength === 0);\n     * ```\n     */\n    function transfer(data) {\n        // @ts-ignore\n        data[shouldTransfer] = true;\n        return data;\n    }\n    parallel.transfer = transfer;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map"],"names":[],"mappings":"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"}