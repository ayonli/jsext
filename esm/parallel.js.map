{"version":3,"file":"parallel.js","sources":["../parallel.ts"],"sourcesContent":["import { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { Exception, fromErrorEvent, fromObject, isAggregateError, isDOMException, toObject } from \"./error/index.ts\";\nimport { isNode, isDeno, isBun, isBeforeNode14, IsPath, isMainThread, resolveModule, isChannelMessage, handleChannelMessage, wrapChannel } from \"./util.ts\";\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst remoteTasks = new Map;\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\nlet gcTimer;\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let start = str.lastIndexOf(\"(\");\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += 1;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if (isNode &&\n        !/\\.[cm]?(js|ts|)x?$/.test(_id) && // omit suffix\n        IsPath.test(_id) // relative or absolute path\n    ) {\n        if (isBun) {\n            _id += \".ts\";\n        }\n        else {\n            _id += \".js\";\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport function isCallResponse(msg) {\n    return msg && typeof msg === \"object\" && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options = {}) {\n    var _a;\n    let { adapter = \"worker_threads\" } = options;\n    let entry = parallel.workerEntry;\n    if (isNode || isBun) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules (hope it exists).\n                if (isBun) {\n                    entry = \"./node_modules/@ayonli/jsext/worker.ts\";\n                }\n                else {\n                    entry = \"./node_modules/@ayonli/jsext/bundle/worker-node.mjs\";\n                }\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if ([\n                    path.join(\"jsext\", \"cjs\"),\n                    path.join(\"jsext\", \"esm\"),\n                    path.join(\"jsext\", \"bundle\")\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this module,\n                    // redirect to the root directory of this package.\n                    _dirname = path.dirname(_dirname);\n                }\n                if (isBun) {\n                    entry = path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker-node.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isBeforeNode14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        if (isDeno) {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    entry = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n                }\n                else {\n                    entry = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker.ts\"\n                    ].join(\"/\");\n                    // The application imports the compiled version of this module,\n                    // redirect to the source worker entry.\n                    if (entry.endsWith(\"/esm/worker.ts\")) {\n                        entry = entry.slice(0, -14) + \"/worker.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can bypass CORS\n            // security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nasync function acquireWorker(taskId) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker()).worker;\n                const handleMessage = (msg) => {\n                    var _a, _b, _c, _d;\n                    if (isChannelMessage(msg)) {\n                        handleChannelMessage(msg);\n                    }\n                    else if (isCallResponse(msg) && msg.taskId) {\n                        const task = remoteTasks.get(msg.taskId);\n                        if (!task)\n                            return;\n                        if (msg.type === \"return\" || msg.type === \"error\") {\n                            if (msg.type === \"error\") {\n                                const err = isPlainObject(msg.error)\n                                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                                    : msg.error;\n                                if (err instanceof Error &&\n                                    (err.message.includes(\"not be cloned\")\n                                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                                    )) {\n                                    Object.defineProperty(err, \"stack\", {\n                                        configurable: true,\n                                        enumerable: false,\n                                        writable: true,\n                                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                            + `at ${task.fn} (${task.module})`,\n                                    });\n                                }\n                                if (task.resolver) {\n                                    task.resolver.reject(err);\n                                    if (task.channel) {\n                                        task.channel.close();\n                                    }\n                                }\n                                else if (task.channel) {\n                                    task.channel.close(err);\n                                }\n                                else {\n                                    task.error = err;\n                                }\n                            }\n                            else {\n                                const value = unwrapReturnValue(msg.value);\n                                if (task.resolver) {\n                                    task.resolver.resolve(value);\n                                }\n                                else {\n                                    task.result = { value };\n                                }\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            poolRecord.tasks.delete(msg.taskId);\n                            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                                // Allow the main thread to exit if the event loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        else if (msg.type === \"yield\") {\n                            const value = unwrapReturnValue(msg.value);\n                            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.push({ value, done: msg.done });\n                            if (msg.done) {\n                                // The final message of yield event is the return value.\n                                handleMessage({\n                                    type: \"return\",\n                                    value,\n                                    taskId: msg.taskId,\n                                });\n                            }\n                        }\n                        else if (msg.type === \"gen\") {\n                            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n                        }\n                    }\n                };\n                const handleClose = (err) => {\n                    for (const taskId of poolRecord.tasks) {\n                        poolRecord.tasks.delete(taskId);\n                        const task = remoteTasks.get(taskId);\n                        if (task) {\n                            if (task.resolver) {\n                                task.resolver.reject(err);\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            else if (task.channel) {\n                                task.channel.close(err);\n                            }\n                            else {\n                                task.error = err;\n                            }\n                        }\n                    }\n                    workerPool = workerPool.filter(item => item !== poolRecord);\n                };\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to the channel in the\n                            // worker thread when the thread is terminated. This situation often\n                            // occurs when using `run()` to call function and the `result()` is\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if ((arg instanceof Exception) || isDOMException(arg) || isAggregateError(arg)) {\n            return toObject(arg);\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n                else if ((value instanceof Exception)\n                    || isDOMException(value)\n                    || isAggregateError(value)) {\n                    arg[key] = toObject(value);\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            arg = arg.map(item => {\n                if (item instanceof ArrayBuffer) {\n                    transferable.push(item);\n                    return item;\n                }\n                else if ((item instanceof Exception)\n                    || isDOMException(item)\n                    || isAggregateError(item)) {\n                    return toObject(item);\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nexport function unwrapReturnValue(value) {\n    if (isPlainObject(value) && (value[\"@@type\"] === \"Exception\" ||\n        value[\"@@type\"] === \"DOMException\" ||\n        value[\"@@type\"] === \"AggregateError\")) {\n        return fromObject(value);\n    }\n    return value;\n}\nasync function safeRemoteCall(worker, req, transferable, taskId) {\n    try {\n        worker.postMessage(req, transferable);\n    }\n    catch (err) {\n        remoteTasks.delete(taskId);\n        if (typeof worker[\"unref\"] === \"function\") {\n            worker.unref();\n        }\n        throw err;\n    }\n}\nfunction createRemoteCall(module, fn, args) {\n    const taskId = taskIdCounter.next().value;\n    remoteTasks.set(taskId, { module, fn });\n    let getWorker = acquireWorker(taskId);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then(async (worker) => {\n        await safeRemoteCall(worker, {\n            type: \"call\",\n            module,\n            fn,\n            args: _args,\n            taskId,\n        }, transferable, taskId);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                remoteTasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                remoteTasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return getWorker.then(() => new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            remoteTasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            remoteTasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                })).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                remoteTasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                remoteTasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                const { args, transferable } = wrapArgs([input], getWorker);\n                await safeRemoteCall(worker, {\n                    type: \"next\",\n                    args: args,\n                    taskId,\n                }, transferable, taskId);\n                return await task.channel.pop();\n            }\n        },\n        async return(value) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            const { args, transferable } = wrapArgs([value], getWorker);\n            await safeRemoteCall(worker, {\n                type: \"return\",\n                args: args,\n                taskId,\n            }, transferable, taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            await safeRemoteCall(worker, {\n                type: \"throw\",\n                args: [err],\n                taskId,\n            }, transferable, taskId);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(module, fn, args) {\n    const getReturns = resolveModule(module).then(mod => {\n        return mod[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    const lines = stackTrace.split(\"\\n\");\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            baseUrl = \"file://\" + baseUrl;\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module so its functions are run in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS module,\n * **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * In Bun and Deno, the `module` can also be a TypeScript file.\n *\n * Data are cloned and transferred between threads via **Structured Clone Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel} can also be\n * used to transfer data between threads. To do so, just passed a channel instance to the threaded\n * function. But be aware, channel can only be used as a parameter, return a channel from the\n * threaded function is not allowed. Once passed, the data can only be transferred into and\n * out-from the function.\n *\n * The difference between using a channel and a generator function for streaming processing is, for\n * a generator function, `next(value)` is coupled with a `yield value`, the process is blocked\n * between **next** calls, channel doesn't have this limit, we can use it to stream all the data\n * into the function before processing and receiving any result.\n *\n * The threaded function also supports `ArrayBuffer`s as transferable objects. If an array buffer is\n * presented as an argument or the direct property of an argument (assume it's a plain object), or\n * the array buffer is the return value or the direct property of the return value (assume it's a\n * plain object), it automatically becomes a transferrable object and will be transferred to the\n * other thread instead of being cloned. This strategy allows us to easily compose objects like\n * `Request` and `Response` instances into plain objects and pass them between threads without\n * overhead.\n *\n * NOTE: if the current module is already in a worker thread, use this function won't create another\n * worker thread.\n *\n * NOTE: cloning and transferring data between the main thread and worker threads are very heavy\n * and slow, worker threads are only intended to run CPU-intensive tasks and prevent blocking the\n * main thread, they have no advantage when performing IO-intensive tasks such as handling HTTP\n * requests, always prefer `cluster` module for that kind of purpose.\n *\n * NOTE: for error instances, only the following types are guaranteed to be sent and received properly\n * between threads.\n *\n * - `Error`\n * - `EvalError`\n * - `RangeError`\n * - `ReferenceError`\n * - `SyntaxError`\n * - `TypeError`\n * - `URIError`\n * - `AggregateError` (as arguments, return values, thrown values, or shallow object properties)\n * - `Exception` (as arguments, return values, thrown values, or shallow object properties)\n * - `DOMException` (as arguments, return values, thrown values, or shallow object properties)\n *\n * In order to handle errors properly between threads, throw well-known error types or use\n * `Exception` (or `DOMException`) with error names in the threaded function.\n *\n * @example\n * ```ts\n * // regular or async function\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * // generator or async generator function\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // use channel\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<{ value: number; done: boolean; }>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of Number.sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);      // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * console.log(await length); // 10\n * ```\n *\n * @example\n * ```ts\n * // use transferrable\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const arr = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n * const length = await mod.transfer(arr.buffer);\n *\n * console.log(length);     // 10\n * console.log(arr.length); // 0\n * ```\n *\n * NOTE: if the application is to be bundled, use the following syntax to link the module instead,\n * it will prevent the bundler from including the file and rewriting the path.\n *\n * ```ts\n * const mod = parallel<typeof import(\"./examples/worker.mjs\")>(\"./examples/worker.mjs\");\n * ```\n */\nfunction parallel(module) {\n    let modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    return new Proxy(Object.create(null), {\n        get: (target, prop) => {\n            if (Reflect.has(target, prop)) {\n                return target[prop];\n            }\n            else if (typeof prop === \"symbol\") {\n                return undefined;\n            }\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not set, the program\n     * by default uses CPU core numbers as the limit.\n     */\n    parallel.maxWorkers = undefined;\n    /**\n     * In browsers, by default, the program loads the worker entry directly from GitHub,\n     * which could be slow due to poor internet connection, we can copy the entry file\n     * `bundle/worker.mjs` to a local path of our website and set this option to that path\n     * so that it can be loaded locally.\n     *\n     * Or, if the code is bundled, the program won't be able to automatically locate the entry\n     * file in the file system, in such case, we can also copy the entry file\n     * (`bundle/worker.mjs` for Bun, Deno and the browser, `bundle/worker-node.mjs` for Node.js)\n     * to a local directory and supply this option instead.\n     */\n    parallel.workerEntry = undefined;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map"],"names":[],"mappings":";;;;;;;;;AAOA,MAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACpE,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC;AAC5B,MAAM,eAAe,GAAG,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACtE,IAAI,UAAU,GAAG,EAAE,CAAC;AACpB,IAAI,OAAO,CAAC;AACA,MAAC,iBAAiB,GAAG,CAAC,YAAY;AAC9C,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQ,MAAM,EAAE,GAAG,MAAM,OAAO,IAAI,CAAC,CAAC;AACtC,QAAQ,IAAI,OAAO,EAAE,CAAC,oBAAoB,KAAK,UAAU,EAAE;AAC3D,YAAY,OAAO,EAAE,CAAC,oBAAoB,EAAE,CAAC;AAC7C,SAAS;AACT,aAAa;AACb,YAAY,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;AACpC,SAAS;AACT,KAAK;AACL,SAAS,IAAI,OAAO,SAAS,KAAK,QAAQ,IAAI,SAAS,CAAC,mBAAmB,EAAE;AAC7E,QAAQ,OAAO,SAAS,CAAC,mBAAmB,CAAC;AAC7C,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL,CAAC,IAAI;AACE,SAAS,gBAAgB,CAAC,EAAE,EAAE,MAAM,GAAG,KAAK,EAAE;AACrD,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAClC,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;AAChC,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACzC,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC1B,YAAY,MAAM,IAAI,SAAS,CAAC,qDAAqD,CAAC,CAAC;AACvF,SAAS;AACT,aAAa;AACb,YAAY,KAAK,IAAI,CAAC,CAAC;AACvB,YAAY,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAChD,YAAY,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACvD,SAAS;AACT,KAAK;AACL,SAAS;AACT,QAAQ,GAAG,GAAG,EAAE,CAAC;AACjB,KAAK;AACL,IAAI,IAAI,MAAM;AACd,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACxB,MAAM;AACN,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,GAAG,IAAI,KAAK,CAAC;AACzB,SAAS;AACT,aAAa;AACb,YAAY,GAAG,IAAI,KAAK,CAAC;AACzB,SAAS;AACT,KAAK;AACL,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;AACtC,QAAQ,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,SAAS,cAAc,CAAC,GAAG,EAAE;AACpC,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACpG,CAAC;AACM,eAAe,YAAY,CAAC,OAAO,GAAG,EAAE,EAAE;AACjD,IAAI,IAAI,EAAE,CAAC;AACX,IAAI,IAAI,EAAE,OAAO,GAAG,gBAAgB,EAAE,GAAG,OAAO,CAAC;AACjD,IAAI,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC;AACrC,IAAI,IAAI,MAAM,IAAI,KAAK,EAAE;AACzB,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,MAAM,IAAI,GAAG,MAAM,OAAO,MAAM,CAAC,CAAC;AAC9C,YAAY,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,OAAO,KAAK,CAAC,CAAC;AAC1D,YAAY,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7D,YAAY,IAAI,SAAS,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AAC/C;AACA,gBAAgB,IAAI,KAAK,EAAE;AAC3B,oBAAoB,KAAK,GAAG,wCAAwC,CAAC;AACrE,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,KAAK,GAAG,qDAAqD,CAAC;AAClF,iBAAiB;AACjB,aAAa;AACb,iBAAiB;AACjB,gBAAgB,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACvD,gBAAgB,IAAI;AACpB,oBAAoB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;AAC7C,oBAAoB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;AAC7C,oBAAoB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;AAChD,iBAAiB,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACzD;AACA;AACA,oBAAoB,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACtD,iBAAiB;AACjB,gBAAgB,IAAI,KAAK,EAAE;AAC3B,oBAAoB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AAC7D,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAC7E,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,OAAO,KAAK,eAAe,EAAE;AACzC,YAAY,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,OAAO,eAAe,CAAC,CAAC;AAC3D,YAAY,MAAM,aAAa,GAAG,cAAc,GAAG,MAAM,GAAG,UAAU,CAAC;AACvE,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,iBAAiB,CAAC,EAAE;AAC5D,gBAAgB,KAAK,EAAE,SAAS;AAChC,gBAAgB,aAAa;AAC7B,aAAa,CAAC,CAAC;AACf,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC;AACxC,YAAY,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AACnD,gBAAgB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC7C,gBAAgB,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM;AAC7C,oBAAoB,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAChD,oBAAoB,OAAO,EAAE,CAAC;AAC9B,iBAAiB,CAAC,CAAC;AACnB,aAAa,CAAC,CAAC;AACf,YAAY,OAAO;AACnB,gBAAgB,MAAM;AACtB,gBAAgB,QAAQ;AACxB,gBAAgB,IAAI,EAAE,cAAc;AACpC,aAAa,CAAC;AACd,SAAS;AACT,aAAa,IAAI,MAAM,EAAE;AACzB,YAAY,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO,gBAAgB,CAAC,CAAC;AAC9D,YAAY,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AAC5E,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC7C,YAAY,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AACnD,gBAAgB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC7C,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM;AAC5C,oBAAoB,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAChD,oBAAoB,OAAO,EAAE,CAAC;AAC9B,iBAAiB,CAAC,CAAC;AACnB,aAAa,CAAC,CAAC;AACf,YAAY,OAAO;AACnB,gBAAgB,MAAM;AACtB,gBAAgB,QAAQ;AACxB,gBAAgB,IAAI,EAAE,aAAa;AACnC,aAAa,CAAC;AACd,SAAS;AACT,aAAa;AACb,YAAY,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACjE,YAAY,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AAC1D,YAAY,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AACnD,gBAAgB,MAAM,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK;AACzC,oBAAoB,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,OAAO,IAAI,4BAA4B,CAAC,CAAC,CAAC;AAClF,iBAAiB,CAAC;AAClB,gBAAgB,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM;AACtD,oBAAoB,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AAC1C,oBAAoB,OAAO,EAAE,CAAC;AAC9B,iBAAiB,CAAC,CAAC;AACnB,aAAa,CAAC,CAAC;AACf,YAAY,OAAO;AACnB,gBAAgB,MAAM;AACtB,gBAAgB,QAAQ;AACxB,gBAAgB,IAAI,EAAE,YAAY;AAClC,aAAa,CAAC;AACd,SAAS;AACT,KAAK;AACL,SAAS;AACT,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,IAAI,CAAC,KAAK,EAAE;AACxB,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACzC;AACA,oBAAoB,KAAK,GAAG,kDAAkD,CAAC;AAC/E,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,KAAK,GAAG;AAC5B,wBAAwB,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpE,wBAAwB,WAAW;AACnC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChC;AACA;AACA,oBAAoB,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;AAC1D,wBAAwB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;AACnE,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,aAAa;AACb;AACA;AACA,YAAY,MAAM,GAAG,GAAG,KAAK,IAAI,kDAAkD,CAAC;AACpF,YAAY,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;AACzC,YAAY,IAAI,IAAI,CAAC;AACrB,YAAY,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AACxH,gBAAgB,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;AACxC,aAAa;AACb,iBAAiB;AACjB,gBAAgB,MAAM,GAAG,GAAG,MAAM,GAAG,CAAC,WAAW,EAAE,CAAC;AACpD,gBAAgB,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;AACvD,oBAAoB,IAAI,EAAE,wBAAwB;AAClD,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,YAAY,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AAC9C,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC7D,QAAQ,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AACtD,QAAQ,OAAO;AACf,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB,YAAY,IAAI,EAAE,YAAY;AAC9B,SAAS,CAAC;AACV,KAAK;AACL,CAAC;AACD,eAAe,aAAa,CAAC,MAAM,EAAE;AACrC,IAAI,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,IAAI,MAAM,iBAAiB,CAAC;AACtE,IAAI,IAAI,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC/D,IAAI,IAAI,UAAU,EAAE;AACpB,QAAQ,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3C,KAAK;AACL,SAAS,IAAI,UAAU,CAAC,MAAM,GAAG,UAAU,EAAE;AAC7C,QAAQ,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG;AACrC,YAAY,SAAS,EAAE,CAAC,YAAY;AACpC,gBAAgB,MAAM,MAAM,GAAG,CAAC,MAAM,YAAY,EAAE,EAAE,MAAM,CAAC;AAC7D,gBAAgB,MAAM,aAAa,GAAG,CAAC,GAAG,KAAK;AAC/C,oBAAoB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACvC,oBAAoB,IAAI,gBAAgB,CAAC,GAAG,CAAC,EAAE;AAC/C,wBAAwB,oBAAoB,CAAC,GAAG,CAAC,CAAC;AAClD,qBAAqB;AACrB,yBAAyB,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE;AAChE,wBAAwB,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACjE,wBAAwB,IAAI,CAAC,IAAI;AACjC,4BAA4B,OAAO;AACnC,wBAAwB,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;AAC3E,4BAA4B,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;AACtD,gCAAgC,MAAM,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC;AACpE,uCAAuC,CAAC,EAAE,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,KAAK;AAC9G,sCAAsC,GAAG,CAAC,KAAK,CAAC;AAChD,gCAAgC,IAAI,GAAG,YAAY,KAAK;AACxD,qCAAqC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,eAAe,CAAC;AAC1E,4CAA4C,CAAC,EAAE,GAAG,GAAG,CAAC,KAAK,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;AAC/H,qCAAqC,EAAE;AACvC,oCAAoC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,OAAO,EAAE;AACxE,wCAAwC,YAAY,EAAE,IAAI;AAC1D,wCAAwC,UAAU,EAAE,KAAK;AACzD,wCAAwC,QAAQ,EAAE,IAAI;AACtD,wCAAwC,KAAK,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,QAAQ,GAAG,EAAE;AACrF,8CAA8C,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9E,qCAAqC,CAAC,CAAC;AACvC,iCAAiC;AACjC,gCAAgC,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnD,oCAAoC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9D,oCAAoC,IAAI,IAAI,CAAC,OAAO,EAAE;AACtD,wCAAwC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AAC7D,qCAAqC;AACrC,iCAAiC;AACjC,qCAAqC,IAAI,IAAI,CAAC,OAAO,EAAE;AACvD,oCAAoC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAC5D,iCAAiC;AACjC,qCAAqC;AACrC,oCAAoC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AACrD,iCAAiC;AACjC,6BAA6B;AAC7B,iCAAiC;AACjC,gCAAgC,MAAM,KAAK,GAAG,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC3E,gCAAgC,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnD,oCAAoC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACjE,iCAAiC;AACjC,qCAAqC;AACrC,oCAAoC,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,CAAC;AAC5D,iCAAiC;AACjC,gCAAgC,IAAI,IAAI,CAAC,OAAO,EAAE;AAClD,oCAAoC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACzD,iCAAiC;AACjC,6BAA6B;AAC7B,4BAA4B,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAChE,4BAA4B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,KAAK,CAAC,EAAE;AAC7E;AACA,gCAAgC,MAAM,CAAC,KAAK,EAAE,CAAC;AAC/C,6BAA6B;AAC7B,yBAAyB;AACzB,6BAA6B,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;AACvD,4BAA4B,MAAM,KAAK,GAAG,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACvE,4BAA4B,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AACxH,4BAA4B,IAAI,GAAG,CAAC,IAAI,EAAE;AAC1C;AACA,gCAAgC,aAAa,CAAC;AAC9C,oCAAoC,IAAI,EAAE,QAAQ;AAClD,oCAAoC,KAAK;AACzC,oCAAoC,MAAM,EAAE,GAAG,CAAC,MAAM;AACtD,iCAAiC,CAAC,CAAC;AACnC,6BAA6B;AAC7B,yBAAyB;AACzB,6BAA6B,IAAI,GAAG,CAAC,IAAI,KAAK,KAAK,EAAE;AACrD,4BAA4B,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpG,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB,CAAC;AAClB,gBAAgB,MAAM,WAAW,GAAG,CAAC,GAAG,KAAK;AAC7C,oBAAoB,KAAK,MAAM,MAAM,IAAI,UAAU,CAAC,KAAK,EAAE;AAC3D,wBAAwB,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACxD,wBAAwB,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7D,wBAAwB,IAAI,IAAI,EAAE;AAClC,4BAA4B,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC/C,gCAAgC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC1D,gCAAgC,IAAI,IAAI,CAAC,OAAO,EAAE;AAClD,oCAAoC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACzD,iCAAiC;AACjC,6BAA6B;AAC7B,iCAAiC,IAAI,IAAI,CAAC,OAAO,EAAE;AACnD,gCAAgC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxD,6BAA6B;AAC7B,iCAAiC;AACjC,gCAAgC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AACjD,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,oBAAoB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,KAAK,UAAU,CAAC,CAAC;AAChF,iBAAiB,CAAC;AAClB,gBAAgB,IAAI,MAAM,EAAE;AAC5B,oBAAoB,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;AACvD,yBAAyB,EAAE,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AAClD,iBAAiB;AACjB,qBAAqB,IAAI,KAAK,EAAE;AAChC,oBAAoB,MAAM,OAAO,GAAG,MAAM,CAAC;AAC3C,oBAAoB,OAAO,CAAC,SAAS,GAAG,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACvE,oBAAoB,OAAO,CAAC,OAAO,GAAG,MAAM,OAAO,CAAC,SAAS,EAAE,CAAC;AAChE,oBAAoB,OAAO,CAAC,gBAAgB,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK;AAC/D,wBAAwB,WAAW,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;AACjF,qBAAqB,EAAE,CAAC;AACxB,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,MAAM,OAAO,GAAG,MAAM,CAAC;AAC3C,oBAAoB,OAAO,CAAC,SAAS,GAAG,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AACvE,oBAAoB,OAAO,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK;AAC9C,wBAAwB,IAAI,EAAE,CAAC;AAC/B,wBAAwB,OAAO,CAAC,SAAS,EAAE,CAAC;AAC5C,wBAAwB,WAAW,CAAC,CAAC,EAAE,GAAG,cAAc,CAAC,EAAE,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AAC3H,qBAAqB,CAAC;AACtB,iBAAiB;AACjB,gBAAgB,OAAO,MAAM,CAAC;AAC9B,aAAa,GAAG;AAChB,YAAY,KAAK,EAAE,IAAI,GAAG,EAAE;AAC5B,YAAY,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE;AAClC,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,OAAO,EAAE;AACtB,YAAY,OAAO,GAAG,WAAW,CAAC,MAAM;AACxC;AACA,gBAAgB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACvC,gBAAgB,MAAM,UAAU,GAAG,EAAE,CAAC;AACtC,gBAAgB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI;AACvD,oBAAoB,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;AAClD,2BAA2B,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC;AAC5D,oBAAoB,IAAI,KAAK,EAAE;AAC/B,wBAAwB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9C,qBAAqB;AACrB,oBAAoB,OAAO,CAAC,KAAK,CAAC;AAClC,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,UAAU,CAAC,OAAO,CAAC,OAAO,IAAI,KAAK;AACnD,oBAAoB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC;AACxD,oBAAoB,MAAM,MAAM,CAAC,SAAS,EAAE,CAAC;AAC7C,iBAAiB,CAAC,CAAC;AACnB,aAAa,EAAE,IAAI,CAAC,CAAC;AACrB,YAAY,IAAI,MAAM,IAAI,KAAK,EAAE;AACjC,gBAAgB,OAAO,CAAC,KAAK,EAAE,CAAC;AAChC,aAAa;AACb,iBAAiB,IAAI,MAAM,EAAE;AAC7B,gBAAgB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AACzC,aAAa;AACb,SAAS;AACT,KAAK;AACL,SAAS;AACT,QAAQ,UAAU,GAAG,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5D,QAAQ,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3C,KAAK;AACL,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACjC,IAAI,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,SAAS,CAAC;AAC9C,IAAI,IAAI,MAAM,IAAI,KAAK,EAAE;AACzB;AACA,QAAQ,MAAM,CAAC,GAAG,EAAE,CAAC;AACrB,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;AACM,SAAS,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE;AAC1C,IAAI,MAAM,YAAY,GAAG,EAAE,CAAC;AAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI;AAC3B,QAAQ,IAAI,GAAG,YAAY,OAAO,EAAE;AACpC,YAAY,OAAO,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,SAAS,KAAK;AAC9D,gBAAgB,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI;AACzC,oBAAoB,IAAI,OAAO,MAAM,CAAC,aAAa,CAAC,KAAK,UAAU,EAAE;AACrE,wBAAwB,IAAI;AAC5B,4BAA4B,MAAM,CAAC,WAAW,CAAC;AAC/C,gCAAgC,IAAI;AACpC,gCAAgC,KAAK,EAAE,GAAG;AAC1C,gCAAgC,SAAS;AACzC,6BAA6B,CAAC,CAAC;AAC/B,yBAAyB;AACzB,wBAAwB,OAAO,GAAG,EAAE;AACpC;AACA;AACA;AACA;AACA,4BAA4B,IAAI,EAAE,IAAI,KAAK,OAAO;AAClD,gCAAgC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC,EAAE;AACrF,gCAAgC,MAAM,GAAG,CAAC;AAC1C,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,yBAAyB;AACzB,wBAAwB,MAAM,CAAC,IAAI,CAAC;AACpC,4BAA4B,IAAI;AAChC,4BAA4B,KAAK,EAAE,GAAG;AACtC,4BAA4B,SAAS;AACrC,yBAAyB,CAAC,CAAC;AAC3B,qBAAqB;AACrB,iBAAiB,CAAC,CAAC;AACnB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,aAAa,IAAI,CAAC,GAAG,YAAY,SAAS,KAAK,cAAc,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,GAAG,CAAC,EAAE;AAC7F,YAAY,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;AACjC,SAAS;AACT,QAAQ,IAAI,GAAG,YAAY,WAAW,EAAE;AACxC,YAAY,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnC,SAAS;AACT,aAAa,IAAI,aAAa,CAAC,GAAG,CAAC,EAAE;AACrC,YAAY,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAAE;AAC/D,gBAAgB,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AACvC,gBAAgB,IAAI,KAAK,YAAY,WAAW,EAAE;AAClD,oBAAoB,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7C,iBAAiB;AACjB,qBAAqB,IAAI,CAAC,KAAK,YAAY,SAAS;AACpD,uBAAuB,cAAc,CAAC,KAAK,CAAC;AAC5C,uBAAuB,gBAAgB,CAAC,KAAK,CAAC,EAAE;AAChD,oBAAoB,GAAG,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC/C,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,aAAa,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACrC,YAAY,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI;AAClC,gBAAgB,IAAI,IAAI,YAAY,WAAW,EAAE;AACjD,oBAAoB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5C,oBAAoB,OAAO,IAAI,CAAC;AAChC,iBAAiB;AACjB,qBAAqB,IAAI,CAAC,IAAI,YAAY,SAAS;AACnD,uBAAuB,cAAc,CAAC,IAAI,CAAC;AAC3C,uBAAuB,gBAAgB,CAAC,IAAI,CAAC,EAAE;AAC/C,oBAAoB,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC1C,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,OAAO,IAAI,CAAC;AAChC,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,QAAQ,OAAO,GAAG,CAAC;AACnB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;AAClC,CAAC;AACM,SAAS,iBAAiB,CAAC,KAAK,EAAE;AACzC,IAAI,IAAI,aAAa,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,QAAQ,CAAC,KAAK,WAAW;AAChE,QAAQ,KAAK,CAAC,QAAQ,CAAC,KAAK,cAAc;AAC1C,QAAQ,KAAK,CAAC,QAAQ,CAAC,KAAK,gBAAgB,CAAC,EAAE;AAC/C,QAAQ,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;AACjC,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD,eAAe,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE;AACjE,IAAI,IAAI;AACR,QAAQ,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;AAC9C,KAAK;AACL,IAAI,OAAO,GAAG,EAAE;AAChB,QAAQ,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACnC,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,EAAE;AACnD,YAAY,MAAM,CAAC,KAAK,EAAE,CAAC;AAC3B,SAAS;AACT,QAAQ,MAAM,GAAG,CAAC;AAClB,KAAK;AACL,CAAC;AACD,SAAS,gBAAgB,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE;AAC5C,IAAI,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AAC9C,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;AAC5C,IAAI,IAAI,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;AAC1C,IAAI,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACpE,IAAI,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,MAAM,KAAK;AACjD,QAAQ,MAAM,cAAc,CAAC,MAAM,EAAE;AACrC,YAAY,IAAI,EAAE,MAAM;AACxB,YAAY,MAAM;AAClB,YAAY,EAAE;AACd,YAAY,IAAI,EAAE,KAAK;AACvB,YAAY,MAAM;AAClB,SAAS,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;AACjC,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,sBAAsB,CAAC;AACtC,QAAQ,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE;AACtC,YAAY,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACjD,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE;AAC5B,gBAAgB,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3C,gBAAgB,OAAO,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtG,aAAa;AACb,iBAAiB,IAAI,IAAI,CAAC,MAAM,EAAE;AAClC,gBAAgB,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3C,gBAAgB,OAAO,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAChH,aAAa;AACb,iBAAiB;AACjB,gBAAgB,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC7E,oBAAoB,IAAI,CAAC,QAAQ,GAAG;AACpC,wBAAwB,OAAO,EAAE,CAAC,KAAK,KAAK;AAC5C,4BAA4B,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACvD,4BAA4B,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3C,yBAAyB;AACzB,wBAAwB,MAAM,EAAE,CAAC,GAAG,KAAK;AACzC,4BAA4B,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACvD,4BAA4B,MAAM,CAAC,GAAG,CAAC,CAAC;AACxC,yBAAyB;AACzB,qBAAqB,CAAC;AACtB,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AAClD,aAAa;AACb,SAAS;AACT,QAAQ,MAAM,IAAI,CAAC,KAAK,EAAE;AAC1B,YAAY,IAAI,EAAE,CAAC;AACnB,YAAY,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACjD,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE;AAC5B,gBAAgB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;AACvC,gBAAgB,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3C,gBAAgB,MAAM,GAAG,CAAC;AAC1B,aAAa;AACb,iBAAiB,IAAI,IAAI,CAAC,MAAM,EAAE;AAClC,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAChD,gBAAgB,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3C,gBAAgB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC7C,aAAa;AACb,iBAAiB;AACjB,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrG,gBAAgB,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC;AAC/C,gBAAgB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACpC,oBAAoB,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI;AACjD,wBAAwB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAChD,qBAAqB,CAAC,CAAC;AACvB,iBAAiB;AACjB,gBAAgB,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AAC5E,gBAAgB,MAAM,cAAc,CAAC,MAAM,EAAE;AAC7C,oBAAoB,IAAI,EAAE,MAAM;AAChC,oBAAoB,IAAI,EAAE,IAAI;AAC9B,oBAAoB,MAAM;AAC1B,iBAAiB,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;AACzC,gBAAgB,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;AAChD,aAAa;AACb,SAAS;AACT,QAAQ,MAAM,MAAM,CAAC,KAAK,EAAE;AAC5B,YAAY,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACvC,YAAY,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC;AAC3C,YAAY,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,GAAG,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;AACxE,YAAY,MAAM,cAAc,CAAC,MAAM,EAAE;AACzC,gBAAgB,IAAI,EAAE,QAAQ;AAC9B,gBAAgB,IAAI,EAAE,IAAI;AAC1B,gBAAgB,MAAM;AACtB,aAAa,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;AACrC,YAAY,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AACzC,SAAS;AACT,QAAQ,MAAM,KAAK,CAAC,GAAG,EAAE;AACzB,YAAY,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACvC,YAAY,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC;AAC3C,YAAY,MAAM,cAAc,CAAC,MAAM,EAAE;AACzC,gBAAgB,IAAI,EAAE,OAAO;AAC7B,gBAAgB,IAAI,EAAE,CAAC,GAAG,CAAC;AAC3B,gBAAgB,MAAM;AACtB,aAAa,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;AACrC,YAAY,MAAM,GAAG,CAAC;AACtB,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,eAAe,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE;AAC3C,IAAI,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI;AACzD,QAAQ,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AAChC,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,IAAI,sBAAsB,CAAC;AACtC,QAAQ,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE;AACtC,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AAC5D,SAAS;AACT,QAAQ,MAAM,IAAI,CAAC,KAAK,EAAE;AAC1B,YAAY,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC;AACzC,YAAY,OAAO,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzC,SAAS;AACT,QAAQ,MAAM,MAAM,CAAC,KAAK,EAAE;AAC5B,YAAY,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC;AACzC,YAAY,OAAO,MAAM,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3C,SAAS;AACT,QAAQ,MAAM,KAAK,CAAC,GAAG,EAAE;AACzB,YAAY,MAAM,GAAG,GAAG,MAAM,UAAU,CAAC;AACzC,YAAY,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAClC,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,cAAc,CAAC,UAAU,EAAE;AACpC,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACnB,IAAI,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACzC,IAAI,IAAI,QAAQ,CAAC;AACjB,IAAI,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AACrF,QAAQ,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,KAAK;AACL,SAAS;AACT,QAAQ,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC9C,QAAQ,IAAI,GAAG,GAAG,CAAC,CAAC;AACpB,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC1B,YAAY,KAAK,IAAI,CAAC,CAAC;AACvB,YAAY,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC/C,YAAY,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAClD,SAAS;AACT,aAAa,IAAI,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;AACjD,YAAY,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzC,SAAS;AACT,aAAa,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAC/C,YAAY,KAAK,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AACrJ,YAAY,IAAI,KAAK,GAAG,CAAC,EAAE;AAC3B,gBAAgB,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACjD,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACpD,QAAQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AAC9C,YAAY,OAAO,GAAG,SAAS,GAAG,OAAO,CAAC;AAC1C,SAAS;AACT,KAAK;AACL,IAAI,OAAO,OAAO,CAAC;AACnB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,MAAM,EAAE;AAC1B,IAAI,IAAI,KAAK,GAAG,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC/C,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC5B,QAAQ,IAAI,OAAO,KAAK,CAAC,iBAAiB,KAAK,UAAU,EAAE;AAC3D,YAAY,MAAM,KAAK,GAAG,EAAE,CAAC;AAC7B,YAAY,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC3C,YAAY,OAAO,GAAG,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClD,SAAS;AACT,aAAa;AACb,YAAY,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;AACxC,YAAY,OAAO,GAAG,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClD,SAAS;AACT,KAAK;AACL,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,KAAK,GAAG,IAAI,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC;AAC7C,KAAK;AACL,IAAI,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AAC1C,QAAQ,GAAG,EAAE,CAAC,MAAM,EAAE,IAAI,KAAK;AAC/B,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,EAAE;AAC3C,gBAAgB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC,aAAa;AACb,iBAAiB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC/C,gBAAgB,OAAO,SAAS,CAAC;AACjC,aAAa;AACb,YAAY,MAAM,GAAG,GAAG;AACxB;AACA,gBAAgB,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,KAAK;AACrC,oBAAoB,IAAI,YAAY,EAAE;AACtC,wBAAwB,OAAO,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACnE,qBAAqB;AACrB,yBAAyB;AACzB,wBAAwB,OAAO,eAAe,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAClE,qBAAqB;AACrB,iBAAiB;AACjB,aAAa,CAAC;AACd,YAAY,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD,CAAC,UAAU,QAAQ,EAAE;AACrB;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,UAAU,GAAG,SAAS,CAAC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,WAAW,GAAG,SAAS,CAAC;AACrC,CAAC,EAAE,QAAQ,KAAK,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;AAChC,iBAAe,QAAQ;;;;"}