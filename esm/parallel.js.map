{"version":3,"file":"parallel.js","sources":["../parallel.ts"],"sourcesContent":["var _a;\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport { fromObject, toObject } from \"./error/index.ts\";\nconst IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\nconst isNode = typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst tasks = new Map;\nlet workerPool = [];\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let start = str.lastIndexOf(\"(\");\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += 1;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if (isNode &&\n        !/\\.[cm]?(js|ts|)x?$/.test(_id) && // omit suffix\n        IsPath.test(_id) // relative or absolute path\n    ) {\n        if (typeof Bun === \"object\") {\n            _id += \".ts\";\n        }\n        else {\n            _id += \".js\";\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport function createFFIRequest(init) {\n    const msg = { ...init, type: init.type || \"ffi\" };\n    if (!msg.baseUrl) {\n        if (typeof Deno === \"object\") {\n            msg.baseUrl = \"file://\" + Deno.cwd() + \"/\";\n        }\n        else if (isNode) {\n            if (IsPath.test(msg.script)) {\n                // Only set baseUrl for relative modules, don't set it for node modules.\n                msg.baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n        }\n        else if (typeof location === \"object\") {\n            msg.baseUrl = location.href;\n        }\n    }\n    return msg;\n}\nexport function isFFIResponse(msg) {\n    return msg && typeof msg === \"object\" && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options = {}) {\n    var _a, _b;\n    let { entry, adapter } = options;\n    if (isNode) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            const _dirname = path.dirname(_filename);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules (if it exists).\n                entry = \"./node_modules/@ayonli/jsext/bundle/worker.mjs\";\n            }\n            else if ([\n                path.join(\"jsext\", \"cjs\"),\n                path.join(\"jsext\", \"esm\"),\n                path.join(\"jsext\", \"bundle\")\n            ].some(path => _dirname.endsWith(path))) { // compiled\n                entry = path.join(path.dirname(_dirname), \"bundle\", \"worker.mjs\");\n            }\n            else {\n                entry = path.join(_dirname, \"worker.mjs\");\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const isPrior14 = parseInt(process.version.slice(1)) < 14;\n            const worker = fork(entry, {\n                stdio: \"inherit\",\n                serialization: isPrior14 ? \"advanced\" : \"json\",\n            });\n            const workerId = worker.pid;\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry);\n            // `threadId` may not exist in Bun.\n            const workerId = (_a = worker.threadId) !== null && _a !== void 0 ? _a : workerIdCounter.next().value;\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n    }\n    else {\n        if (!entry) {\n            if (typeof Deno === \"object\") {\n                if (import.meta[\"main\"]) {\n                    // code is bundled, try the remote URL\n                    entry = \"https://ayonli.github.io/jsext/bundle/worker-web.mjs\";\n                }\n                else {\n                    entry = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker-web.mjs\"\n                    ].join(\"/\");\n                    // The code uses ESM version instead of TS version, redirect\n                    // to the root path.\n                    if (entry.endsWith(\"/jsext/esm/worker-web.mjs\")) {\n                        entry = entry.slice(0, -25) + \"/jsext/worker-web.mjs\";\n                    }\n                    else if (entry.endsWith(\"\\\\jsext\\\\esm\\\\worker-web.mjs\")) {\n                        entry = entry.slice(0, -25) + \"\\\\jsext\\\\worker-web.mjs\";\n                    }\n                }\n            }\n            else {\n                const url = entry || \"https://ayonli.github.io/jsext/bundle/worker-web.mjs\";\n                const res = await fetch(url);\n                let blob;\n                if ((_b = res.headers.get(\"content-type\")) === null || _b === void 0 ? void 0 : _b.includes(\"/javascript\")) {\n                    blob = await res.blob();\n                }\n                else {\n                    const buf = await res.arrayBuffer();\n                    blob = new Blob([new Uint8Array(buf)], {\n                        type: \"application/javascript\",\n                    });\n                }\n                entry = URL.createObjectURL(blob);\n            }\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nasync function acquireWorker(taskId) {\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    let worker;\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n        worker = poolRecord.worker;\n    }\n    else if (workerPool.length < parallel.maxWorkers) {\n        const res = await createWorker({ entry: parallel.workerEntry, adapter: \"worker_threads\" });\n        worker = res.worker;\n        const handleMessage = (msg) => {\n            var _a, _b;\n            if (isFFIResponse(msg) && msg.taskId) {\n                const task = tasks.get(msg.taskId);\n                if (!task) {\n                    return;\n                }\n                if (msg.type === \"error\") {\n                    const err = msg.error instanceof Error\n                        ? msg.error\n                        : fromObject(msg.error);\n                    if (task.resolver) {\n                        task.resolver.reject(err);\n                    }\n                    else if (task.channel) {\n                        task.channel.close(err);\n                    }\n                    else {\n                        task.error = err;\n                    }\n                }\n                else if (msg.type === \"return\") {\n                    if (task.resolver) {\n                        task.resolver.resolve(msg.value);\n                    }\n                    else {\n                        task.result = { value: msg.value };\n                    }\n                    if (task.channel) {\n                        task.channel.close();\n                    }\n                    if (poolRecord) {\n                        poolRecord.tasks.delete(msg.taskId);\n                        if (!poolRecord.tasks.size) {\n                            if (isNode) {\n                                // Allow the main thread to exit if the event loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        { // GC: clean long-time unused workers\n                            const now = Date.now();\n                            const idealItems = [];\n                            workerPool = workerPool.filter(item => {\n                                const ideal = !item.tasks.size && (now - item.lastAccess) >= 300000;\n                                if (ideal) {\n                                    idealItems.push(item);\n                                }\n                                return !ideal;\n                            });\n                            idealItems.forEach(item => {\n                                item.worker.terminate();\n                            });\n                        }\n                    }\n                }\n                else if (msg.type === \"yield\") {\n                    (_a = task.channel) === null || _a === void 0 ? void 0 : _a.push({ value: msg.value, done: msg.done });\n                    if (msg.done) {\n                        // The final message of yield event is the return value.\n                        handleMessage({\n                            type: \"return\",\n                            value: msg.value,\n                            taskId: msg.taskId,\n                        });\n                    }\n                }\n                else if (msg.type === \"gen\") {\n                    (_b = task.generate) === null || _b === void 0 ? void 0 : _b.call(task);\n                }\n            }\n        };\n        if (isNode) {\n            worker.on(\"message\", handleMessage);\n            await new Promise(resolve => worker.once(\"online\", resolve));\n        }\n        else {\n            worker.onmessage = (ev) => handleMessage(ev.data);\n        }\n        workerPool.push(poolRecord = {\n            worker,\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n        worker = poolRecord.worker;\n    }\n    poolRecord.tasks.add(taskId);\n    if (isNode) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nfunction createCall(modId, fn, args, baseUrl = undefined) {\n    const taskId = taskIdCounter.next().value;\n    const task = {};\n    let worker;\n    tasks.set(taskId, task);\n    return new ThenableAsyncGenerator({\n        async then(onfulfilled, onrejected) {\n            if (!worker) {\n                worker = await acquireWorker(taskId);\n                worker.postMessage(createFFIRequest({\n                    script: modId,\n                    fn,\n                    args,\n                    taskId,\n                    baseUrl: baseUrl\n                }));\n            }\n            const task = tasks.get(taskId);\n            if (task.error) {\n                tasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                tasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            tasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            tasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                }).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = tasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                tasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                tasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                if (!worker) {\n                    worker = await acquireWorker(taskId);\n                    worker.postMessage(createFFIRequest({\n                        script: modId,\n                        fn,\n                        args,\n                        taskId,\n                        baseUrl: baseUrl\n                    }));\n                    await new Promise((resolve) => {\n                        task.generate = resolve;\n                    });\n                }\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                worker.postMessage(createFFIRequest({\n                    script: modId,\n                    fn,\n                    args: [input],\n                    taskId,\n                    type: \"next\",\n                    baseUrl: baseUrl,\n                }));\n                return await task.channel.pop();\n            }\n        },\n        async return(value) {\n            worker === null || worker === void 0 ? void 0 : worker.postMessage(createFFIRequest({\n                script: modId,\n                fn,\n                args: [value],\n                taskId,\n                type: \"return\",\n                baseUrl: baseUrl,\n            }));\n            tasks.delete(taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            worker === null || worker === void 0 ? void 0 : worker.postMessage(createFFIRequest({\n                script: modId,\n                fn,\n                args: [toObject(err)],\n                taskId,\n                type: \"throw\",\n                baseUrl: baseUrl,\n            }));\n            tasks.delete(taskId);\n            throw err;\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    let callSite = stackTrace.split(\"\\n\")[2];\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            baseUrl = \"file://\" + baseUrl;\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module and run its functions in worker threads.\n *\n * In Node.js and Bun, the `module` can be either a CommonJS module or an ES module,\n * **node_modules** and built-in modules are also supported.\n *\n * In browser and Deno, the `module` can only be an ES module.\n *\n * In Bun and Deno, the `module` can also be a TypeScript file.\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./job-example.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./job-example.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n */\nfunction parallel(module) {\n    const modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    return new Proxy(Object.create(null), {\n        get: (_, prop) => {\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    return createCall(modId, prop, args, baseUrl);\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     */\n    parallel.maxWorkers = 16;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map"],"names":[],"mappings":";;;;;;AAAA,IAAI,EAAE,CAAC;AAMP,MAAM,MAAM,GAAG,qCAAqC,CAAC;AACrD,MAAM,MAAM,GAAG,OAAO,OAAO,KAAK,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,OAAO,CAAC,QAAQ,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;AACvH,MAAM,eAAe,GAAG,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACtE,MAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACpE,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC;AACtB,IAAI,UAAU,GAAG,EAAE,CAAC;AACb,SAAS,gBAAgB,CAAC,EAAE,EAAE,MAAM,GAAG,KAAK,EAAE;AACrD,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,IAAI,OAAO,EAAE,KAAK,UAAU,EAAE;AAClC,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;AAChC,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACzC,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC1B,YAAY,MAAM,IAAI,SAAS,CAAC,qDAAqD,CAAC,CAAC;AACvF,SAAS;AACT,aAAa;AACb,YAAY,KAAK,IAAI,CAAC,CAAC;AACvB,YAAY,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAChD,YAAY,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AACvD,SAAS;AACT,KAAK;AACL,SAAS;AACT,QAAQ,GAAG,GAAG,EAAE,CAAC;AACjB,KAAK;AACL,IAAI,IAAI,MAAM;AACd,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC;AACvC,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACxB,MAAM;AACN,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACrC,YAAY,GAAG,IAAI,KAAK,CAAC;AACzB,SAAS;AACT,aAAa;AACb,YAAY,GAAG,IAAI,KAAK,CAAC;AACzB,SAAS;AACT,KAAK;AACL,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;AACtC,QAAQ,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,SAAS,gBAAgB,CAAC,IAAI,EAAE;AACvC,IAAI,MAAM,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE,CAAC;AACtD,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;AACtB,QAAQ,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACtC,YAAY,GAAG,CAAC,OAAO,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;AACvD,SAAS;AACT,aAAa,IAAI,MAAM,EAAE;AACzB,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AACzC;AACA,gBAAgB,GAAG,CAAC,OAAO,GAAG,SAAS,GAAG,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;AAC9D,aAAa;AACb,SAAS;AACT,aAAa,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAC/C,YAAY,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;AACxC,SAAS;AACT,KAAK;AACL,IAAI,OAAO,GAAG,CAAC;AACf,CAAC;AACM,SAAS,aAAa,CAAC,GAAG,EAAE;AACnC,IAAI,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACpG,CAAC;AACM,eAAe,YAAY,CAAC,OAAO,GAAG,EAAE,EAAE;AACjD,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf,IAAI,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;AACrC,IAAI,IAAI,MAAM,EAAE;AAChB,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,MAAM,IAAI,GAAG,MAAM,OAAO,MAAM,CAAC,CAAC;AAC9C,YAAY,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,OAAO,KAAK,CAAC,CAAC;AAC1D,YAAY,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC7D,YAAY,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACrD,YAAY,IAAI,SAAS,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AAC/C;AACA,gBAAgB,KAAK,GAAG,gDAAgD,CAAC;AACzE,aAAa;AACb,iBAAiB,IAAI;AACrB,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;AACzC,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;AACzC,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC;AAC5C,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;AACrD,gBAAgB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;AAClF,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AAC1D,aAAa;AACb,SAAS;AACT,QAAQ,IAAI,OAAO,KAAK,eAAe,EAAE;AACzC,YAAY,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,OAAO,eAAe,CAAC,CAAC;AAC3D,YAAY,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACtE,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE;AACvC,gBAAgB,KAAK,EAAE,SAAS;AAChC,gBAAgB,aAAa,EAAE,SAAS,GAAG,UAAU,GAAG,MAAM;AAC9D,aAAa,CAAC,CAAC;AACf,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC;AACxC,YAAY,OAAO;AACnB,gBAAgB,MAAM;AACtB,gBAAgB,QAAQ;AACxB,gBAAgB,IAAI,EAAE,cAAc;AACpC,aAAa,CAAC;AACd,SAAS;AACT,aAAa;AACb,YAAY,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO,gBAAgB,CAAC,CAAC;AAC9D,YAAY,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7C;AACA,YAAY,MAAM,QAAQ,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG,eAAe,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AAClH,YAAY,OAAO;AACnB,gBAAgB,MAAM;AACtB,gBAAgB,QAAQ;AACxB,gBAAgB,IAAI,EAAE,aAAa;AACnC,aAAa,CAAC;AACd,SAAS;AACT,KAAK;AACL,SAAS;AACT,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,YAAY,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC1C,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACzC;AACA,oBAAoB,KAAK,GAAG,sDAAsD,CAAC;AACnF,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,KAAK,GAAG;AAC5B,wBAAwB,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACpE,wBAAwB,gBAAgB;AACxC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChC;AACA;AACA,oBAAoB,IAAI,KAAK,CAAC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;AACrE,wBAAwB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,uBAAuB,CAAC;AAC9E,qBAAqB;AACrB,yBAAyB,IAAI,KAAK,CAAC,QAAQ,CAAC,8BAA8B,CAAC,EAAE;AAC7E,wBAAwB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,yBAAyB,CAAC;AAChF,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,iBAAiB;AACjB,gBAAgB,MAAM,GAAG,GAAG,KAAK,IAAI,sDAAsD,CAAC;AAC5F,gBAAgB,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;AAC7C,gBAAgB,IAAI,IAAI,CAAC;AACzB,gBAAgB,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AAC5H,oBAAoB,IAAI,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;AAC5C,iBAAiB;AACjB,qBAAqB;AACrB,oBAAoB,MAAM,GAAG,GAAG,MAAM,GAAG,CAAC,WAAW,EAAE,CAAC;AACxD,oBAAoB,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;AAC3D,wBAAwB,IAAI,EAAE,wBAAwB;AACtD,qBAAqB,CAAC,CAAC;AACvB,iBAAiB;AACjB,gBAAgB,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AAClD,aAAa;AACb,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AAC7D,QAAQ,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AACtD,QAAQ,OAAO;AACf,YAAY,MAAM;AAClB,YAAY,QAAQ;AACpB,YAAY,IAAI,EAAE,YAAY;AAC9B,SAAS,CAAC;AACV,KAAK;AACL,CAAC;AACD,eAAe,aAAa,CAAC,MAAM,EAAE;AACrC,IAAI,IAAI,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC/D,IAAI,IAAI,MAAM,CAAC;AACf,IAAI,IAAI,UAAU,EAAE;AACpB,QAAQ,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3C,QAAQ,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AACnC,KAAK;AACL,SAAS,IAAI,UAAU,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,EAAE;AACtD,QAAQ,MAAM,GAAG,GAAG,MAAM,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,CAAC,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;AACnG,QAAQ,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AAC5B,QAAQ,MAAM,aAAa,GAAG,CAAC,GAAG,KAAK;AACvC,YAAY,IAAI,EAAE,EAAE,EAAE,CAAC;AACvB,YAAY,IAAI,aAAa,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE;AAClD,gBAAgB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACnD,gBAAgB,IAAI,CAAC,IAAI,EAAE;AAC3B,oBAAoB,OAAO;AAC3B,iBAAiB;AACjB,gBAAgB,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;AAC1C,oBAAoB,MAAM,GAAG,GAAG,GAAG,CAAC,KAAK,YAAY,KAAK;AAC1D,0BAA0B,GAAG,CAAC,KAAK;AACnC,0BAA0B,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAChD,oBAAoB,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvC,wBAAwB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAClD,qBAAqB;AACrB,yBAAyB,IAAI,IAAI,CAAC,OAAO,EAAE;AAC3C,wBAAwB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAChD,qBAAqB;AACrB,yBAAyB;AACzB,wBAAwB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AACzC,qBAAqB;AACrB,iBAAiB;AACjB,qBAAqB,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,EAAE;AAChD,oBAAoB,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvC,wBAAwB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACzD,qBAAqB;AACrB,yBAAyB;AACzB,wBAAwB,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC;AAC3D,qBAAqB;AACrB,oBAAoB,IAAI,IAAI,CAAC,OAAO,EAAE;AACtC,wBAAwB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AAC7C,qBAAqB;AACrB,oBAAoB,IAAI,UAAU,EAAE;AACpC,wBAAwB,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC5D,wBAAwB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE;AACpD,4BAA4B,IAAI,MAAM,EAAE;AACxC;AACA,gCAAgC,MAAM,CAAC,KAAK,EAAE,CAAC;AAC/C,6BAA6B;AAC7B,yBAAyB;AACzB,wBAAwB;AACxB,4BAA4B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AACnD,4BAA4B,MAAM,UAAU,GAAG,EAAE,CAAC;AAClD,4BAA4B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI;AACnE,gCAAgC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,KAAK,MAAM,CAAC;AACpG,gCAAgC,IAAI,KAAK,EAAE;AAC3C,oCAAoC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1D,iCAAiC;AACjC,gCAAgC,OAAO,CAAC,KAAK,CAAC;AAC9C,6BAA6B,CAAC,CAAC;AAC/B,4BAA4B,UAAU,CAAC,OAAO,CAAC,IAAI,IAAI;AACvD,gCAAgC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACxD,6BAA6B,CAAC,CAAC;AAC/B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,qBAAqB,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;AAC/C,oBAAoB,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3H,oBAAoB,IAAI,GAAG,CAAC,IAAI,EAAE;AAClC;AACA,wBAAwB,aAAa,CAAC;AACtC,4BAA4B,IAAI,EAAE,QAAQ;AAC1C,4BAA4B,KAAK,EAAE,GAAG,CAAC,KAAK;AAC5C,4BAA4B,MAAM,EAAE,GAAG,CAAC,MAAM;AAC9C,yBAAyB,CAAC,CAAC;AAC3B,qBAAqB;AACrB,iBAAiB;AACjB,qBAAqB,IAAI,GAAG,CAAC,IAAI,KAAK,KAAK,EAAE;AAC7C,oBAAoB,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5F,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC;AACV,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AAChD,YAAY,MAAM,IAAI,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AACzE,SAAS;AACT,aAAa;AACb,YAAY,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC9D,SAAS;AACT,QAAQ,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG;AACrC,YAAY,MAAM;AAClB,YAAY,KAAK,EAAE,IAAI,GAAG,EAAE;AAC5B,YAAY,UAAU,EAAE,IAAI,CAAC,GAAG,EAAE;AAClC,SAAS,CAAC,CAAC;AACX,KAAK;AACL,SAAS;AACT,QAAQ,UAAU,GAAG,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5D,QAAQ,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3C,QAAQ,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AACnC,KAAK;AACL,IAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACjC,IAAI,IAAI,MAAM,EAAE;AAChB;AACA,QAAQ,MAAM,CAAC,GAAG,EAAE,CAAC;AACrB,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC;AACD,SAAS,UAAU,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,GAAG,SAAS,EAAE;AAC1D,IAAI,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;AAC9C,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC;AACpB,IAAI,IAAI,MAAM,CAAC;AACf,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC5B,IAAI,OAAO,IAAI,sBAAsB,CAAC;AACtC,QAAQ,MAAM,IAAI,CAAC,WAAW,EAAE,UAAU,EAAE;AAC5C,YAAY,IAAI,CAAC,MAAM,EAAE;AACzB,gBAAgB,MAAM,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC,CAAC;AACrD,gBAAgB,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC;AACpD,oBAAoB,MAAM,EAAE,KAAK;AACjC,oBAAoB,EAAE;AACtB,oBAAoB,IAAI;AACxB,oBAAoB,MAAM;AAC1B,oBAAoB,OAAO,EAAE,OAAO;AACpC,iBAAiB,CAAC,CAAC,CAAC;AACpB,aAAa;AACb,YAAY,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC3C,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE;AAC5B,gBAAgB,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrC,gBAAgB,OAAO,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtG,aAAa;AACb,iBAAiB,IAAI,IAAI,CAAC,MAAM,EAAE;AAClC,gBAAgB,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrC,gBAAgB,OAAO,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAChH,aAAa;AACb,iBAAiB;AACjB,gBAAgB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AACxD,oBAAoB,IAAI,CAAC,QAAQ,GAAG;AACpC,wBAAwB,OAAO,EAAE,CAAC,KAAK,KAAK;AAC5C,4BAA4B,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjD,4BAA4B,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3C,yBAAyB;AACzB,wBAAwB,MAAM,EAAE,CAAC,GAAG,KAAK;AACzC,4BAA4B,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjD,4BAA4B,MAAM,CAAC,GAAG,CAAC,CAAC;AACxC,yBAAyB;AACzB,qBAAqB,CAAC;AACtB,iBAAiB,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;AACjD,aAAa;AACb,SAAS;AACT,QAAQ,MAAM,IAAI,CAAC,KAAK,EAAE;AAC1B,YAAY,IAAI,EAAE,CAAC;AACnB,YAAY,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC3C,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE;AAC5B,gBAAgB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;AACvC,gBAAgB,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrC,gBAAgB,MAAM,GAAG,CAAC;AAC1B,aAAa;AACb,iBAAiB,IAAI,IAAI,CAAC,MAAM,EAAE;AAClC,gBAAgB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AAChD,gBAAgB,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrC,gBAAgB,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC7C,aAAa;AACb,iBAAiB;AACjB,gBAAgB,IAAI,CAAC,MAAM,EAAE;AAC7B,oBAAoB,MAAM,GAAG,MAAM,aAAa,CAAC,MAAM,CAAC,CAAC;AACzD,oBAAoB,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC;AACxD,wBAAwB,MAAM,EAAE,KAAK;AACrC,wBAAwB,EAAE;AAC1B,wBAAwB,IAAI;AAC5B,wBAAwB,MAAM;AAC9B,wBAAwB,OAAO,EAAE,OAAO;AACxC,qBAAqB,CAAC,CAAC,CAAC;AACxB,oBAAoB,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;AACnD,wBAAwB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAChD,qBAAqB,CAAC,CAAC;AACvB,iBAAiB;AACjB,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,OAAO,MAAM,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACrG,gBAAgB,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC;AACpD,oBAAoB,MAAM,EAAE,KAAK;AACjC,oBAAoB,EAAE;AACtB,oBAAoB,IAAI,EAAE,CAAC,KAAK,CAAC;AACjC,oBAAoB,MAAM;AAC1B,oBAAoB,IAAI,EAAE,MAAM;AAChC,oBAAoB,OAAO,EAAE,OAAO;AACpC,iBAAiB,CAAC,CAAC,CAAC;AACpB,gBAAgB,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;AAChD,aAAa;AACb,SAAS;AACT,QAAQ,MAAM,MAAM,CAAC,KAAK,EAAE;AAC5B,YAAY,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC;AAChG,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,EAAE;AAClB,gBAAgB,IAAI,EAAE,CAAC,KAAK,CAAC;AAC7B,gBAAgB,MAAM;AACtB,gBAAgB,IAAI,EAAE,QAAQ;AAC9B,gBAAgB,OAAO,EAAE,OAAO;AAChC,aAAa,CAAC,CAAC,CAAC;AAChB,YAAY,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjC,YAAY,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AACzC,SAAS;AACT,QAAQ,MAAM,KAAK,CAAC,GAAG,EAAE;AACzB,YAAY,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC;AAChG,gBAAgB,MAAM,EAAE,KAAK;AAC7B,gBAAgB,EAAE;AAClB,gBAAgB,IAAI,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACrC,gBAAgB,MAAM;AACtB,gBAAgB,IAAI,EAAE,OAAO;AAC7B,gBAAgB,OAAO,EAAE,OAAO;AAChC,aAAa,CAAC,CAAC,CAAC;AAChB,YAAY,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjC,YAAY,MAAM,GAAG,CAAC;AACtB,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD,SAAS,cAAc,CAAC,UAAU,EAAE;AACpC,IAAI,IAAI,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC9C,QAAQ,IAAI,GAAG,GAAG,CAAC,CAAC;AACpB,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AAC1B,YAAY,KAAK,IAAI,CAAC,CAAC;AACvB,YAAY,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC/C,YAAY,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAClD,SAAS;AACT,aAAa;AACb,YAAY,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACzC,SAAS;AACT,QAAQ,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AACpD,QAAQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AAC9C,YAAY,OAAO,GAAG,SAAS,GAAG,OAAO,CAAC;AAC1C,SAAS;AACT,KAAK;AACL,IAAI,OAAO,OAAO,CAAC;AACnB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,MAAM,EAAE;AAC1B,IAAI,MAAM,KAAK,GAAG,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACjD,IAAI,IAAI,OAAO,CAAC;AAChB,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC5B,QAAQ,IAAI,OAAO,KAAK,CAAC,iBAAiB,KAAK,UAAU,EAAE;AAC3D,YAAY,MAAM,KAAK,GAAG,EAAE,CAAC;AAC7B,YAAY,KAAK,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAC3C,YAAY,OAAO,GAAG,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClD,SAAS;AACT,aAAa;AACb,YAAY,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;AACxC,YAAY,OAAO,GAAG,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClD,SAAS;AACT,KAAK;AACL,IAAI,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AAC1C,QAAQ,GAAG,EAAE,CAAC,CAAC,EAAE,IAAI,KAAK;AAC1B,YAAY,MAAM,GAAG,GAAG;AACxB;AACA,gBAAgB,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,KAAK;AACrC,oBAAoB,OAAO,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAClE,iBAAiB;AACjB,aAAa,CAAC;AACd,YAAY,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAS;AACT,KAAK,CAAC,CAAC;AACP,CAAC;AACD,CAAC,UAAU,QAAQ,EAAE;AACrB;AACA;AACA;AACA,IAAI,QAAQ,CAAC,UAAU,GAAG,EAAE,CAAC;AAC7B,CAAC,EAAE,QAAQ,KAAK,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;AAChC,iBAAe,QAAQ;;;;"}