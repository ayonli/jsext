{"version":3,"file":"fs.js","sources":["../fs.ts"],"sourcesContent":["/**\n * Universal file system APIs for Node.js, Bun, Deno, and the browser.\n *\n * In the browser, this module uses the Origin Private File System. The module\n * is experimental and may not be available in some browsers.\n * @module\n * @experimental\n */\nimport { abortable } from \"./async.ts\";\nimport { text } from \"./bytes.ts\";\nimport { isBrowserWindow, isDedicatedWorker, isDeno, isNodeLike, isSharedWorker } from \"./env.ts\";\nimport { getMIME } from \"./filetype.ts\";\nimport { basename, dirname, extname, join, sanitize, split } from \"./path.ts\";\nimport { toAsyncIterable } from \"./reader.ts\";\nimport _try from \"./try.ts\";\nasync function getDirHandle(path, options = {}) {\n    if (typeof location === \"object\" && typeof location.origin === \"string\") {\n        path = path.stripStart(location.origin);\n    }\n    const { create = false, recursive = false } = options;\n    const paths = split(path.stripStart(\"/\")).filter(p => p !== \".\");\n    const root = await navigator.storage.getDirectory();\n    let dir = root;\n    for (let i = 0; i < paths.length; i++) {\n        const _path = paths[i];\n        dir = await dir.getDirectoryHandle(_path, {\n            create: create && (recursive || (i === paths.length - 1)),\n        });\n    }\n    return dir;\n}\n/**\n * Returns the information of the given file or directory.\n */\nexport async function stat(path) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    path = sanitize(path);\n    if (isDeno) {\n        const stat = await Deno.stat(path);\n        return {\n            name: basename(path),\n            kind: stat.isDirectory\n                ? \"directory\"\n                : stat.isSymlink\n                    ? \"symlink\"\n                    : \"file\",\n            size: stat.size,\n            type: (_a = getMIME(extname(path))) !== null && _a !== void 0 ? _a : \"\",\n            mtime: (_b = stat.mtime) !== null && _b !== void 0 ? _b : null,\n            atime: (_c = stat.atime) !== null && _c !== void 0 ? _c : null,\n            birthtime: (_d = stat.birthtime) !== null && _d !== void 0 ? _d : null,\n            isBlockDevice: (_e = stat.isBlockDevice) !== null && _e !== void 0 ? _e : false,\n            isCharDevice: (_f = stat.isCharDevice) !== null && _f !== void 0 ? _f : false,\n            isFIFO: (_g = stat.isFile) !== null && _g !== void 0 ? _g : false,\n            isSocket: (_h = stat.isSocket) !== null && _h !== void 0 ? _h : false,\n        };\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        const stat = await fs.stat(path);\n        return {\n            name: basename(path),\n            kind: stat.isDirectory()\n                ? \"directory\"\n                : stat.isSymbolicLink()\n                    ? \"symlink\"\n                    : \"file\",\n            size: stat.size,\n            type: (_j = getMIME(extname(path))) !== null && _j !== void 0 ? _j : \"\",\n            mtime: (_k = stat.mtime) !== null && _k !== void 0 ? _k : null,\n            atime: (_l = stat.atime) !== null && _l !== void 0 ? _l : null,\n            birthtime: (_m = stat.birthtime) !== null && _m !== void 0 ? _m : null,\n            isBlockDevice: stat.isBlockDevice(),\n            isCharDevice: stat.isCharacterDevice(),\n            isFIFO: stat.isFIFO(),\n            isSocket: stat.isSocket(),\n        };\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        const parent = dirname(path);\n        const name = basename(path);\n        const dir = await getDirHandle(parent);\n        const [err, file] = await _try(dir.getFileHandle(name));\n        if (file) {\n            const info = await file.getFile();\n            return {\n                name,\n                kind: \"file\",\n                size: info.size,\n                type: (_p = (_o = info.type) !== null && _o !== void 0 ? _o : getMIME(extname(name))) !== null && _p !== void 0 ? _p : \"\",\n                mtime: new Date(info.lastModified),\n                atime: null,\n                birthtime: null,\n                isBlockDevice: false,\n                isCharDevice: false,\n                isFIFO: false,\n                isSocket: false,\n            };\n        }\n        else if (err.name === \"TypeMismatchError\") {\n            return {\n                name,\n                kind: \"directory\",\n                size: 0,\n                type: \"\",\n                mtime: null,\n                atime: null,\n                birthtime: null,\n                isBlockDevice: false,\n                isCharDevice: false,\n                isFIFO: false,\n                isSocket: false,\n            };\n        }\n        else {\n            throw err;\n        }\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Checks if the given path exists.\n */\nexport async function exists(path) {\n    try {\n        await stat(path);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * Creates a new directory with the given path.\n */\nexport async function mkdir(path, options = {}) {\n    var _a;\n    path = sanitize(path);\n    if (isDeno) {\n        await Deno.mkdir(path, options);\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        await fs.mkdir(path, options);\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        await getDirHandle(path, {\n            create: true,\n            recursive: (_a = options === null || options === void 0 ? void 0 : options.recursive) !== null && _a !== void 0 ? _a : false,\n        });\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Reads the directory of the given path and iterates its entries.\n */\nexport async function* readDir(path, options = {}) {\n    path = sanitize(path);\n    if (isDeno) {\n        yield* (async function* read(path, base) {\n            for await (const entry of Deno.readDir(path)) {\n                const _entry = {\n                    name: entry.name,\n                    kind: entry.isDirectory\n                        ? \"directory\"\n                        : entry.isSymlink\n                            ? \"symlink\"\n                            : \"file\",\n                    path: join(base, entry.name),\n                };\n                yield _entry;\n                if ((options === null || options === void 0 ? void 0 : options.recursive) && entry.isDirectory) {\n                    yield* read(join(path, entry.name), _entry.path);\n                }\n            }\n        })(path, \"\");\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        yield* (async function* read(path, base) {\n            const entries = await fs.readdir(path, { withFileTypes: true });\n            for (const entry of entries) {\n                const _entry = {\n                    name: entry.name,\n                    kind: entry.isDirectory()\n                        ? \"directory\"\n                        : entry.isSymbolicLink()\n                            ? \"symlink\"\n                            : \"file\",\n                    path: join(base, entry.name),\n                };\n                yield _entry;\n                if ((options === null || options === void 0 ? void 0 : options.recursive) && entry.isDirectory()) {\n                    yield* read(join(path, entry.name), _entry.path);\n                }\n            }\n        })(path, \"\");\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        const dir = await getDirHandle(path);\n        yield* (async function* read(dir, base) {\n            const entries = dir[\"entries\"]();\n            for await (const [_, entry] of entries) {\n                const _entry = {\n                    name: entry.name,\n                    kind: entry.kind,\n                    path: join(base, entry.name),\n                };\n                yield _entry;\n                if ((options === null || options === void 0 ? void 0 : options.recursive) && entry.kind === \"directory\") {\n                    yield* read(entry, _entry.path);\n                }\n            }\n        })(dir, \"\");\n    }\n}\n/**\n * Reads the content of the given file in bytes.\n */\nexport async function readFile(filename, options = {}) {\n    filename = sanitize(filename);\n    if (isDeno) {\n        return await Deno.readFile(filename, options);\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        return await fs.readFile(filename, options);\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        const path = dirname(filename);\n        const name = basename(filename);\n        const dir = await getDirHandle(path);\n        const handle = await dir.getFileHandle(name);\n        const file = await handle.getFile();\n        const arr = new Uint8Array(file.size);\n        let offset = 0;\n        let reader = toAsyncIterable(file.stream());\n        if (options.signal) {\n            reader = abortable(reader, options.signal);\n        }\n        for await (const chunk of reader) {\n            arr.set(chunk, offset);\n            offset += chunk.length;\n        }\n        return arr;\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Reads the content of the given file as text.\n */\nexport async function readFileAsText(filename, options = {}) {\n    filename = sanitize(filename);\n    if (isDeno) {\n        return await Deno.readTextFile(filename, options);\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        return await fs.readFile(filename, {\n            encoding: \"utf-8\",\n            signal: options.signal,\n        });\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        return text(await readFile(filename, options));\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Writes the given data to the file.\n */\nexport async function writeFile(filename, data, options = {}) {\n    var _a;\n    filename = sanitize(filename);\n    if (isDeno) {\n        if (typeof data === \"string\") {\n            return await Deno.writeTextFile(filename, data, options);\n        }\n        else {\n            return await Deno.writeFile(filename, data, options);\n        }\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        const { append, ...rest } = options;\n        return await fs.writeFile(filename, data, {\n            flag: (options === null || options === void 0 ? void 0 : options.append) ? \"a\" : \"w\",\n            ...rest,\n        });\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        const path = dirname(filename);\n        const name = basename(filename);\n        const dir = await getDirHandle(path);\n        const handle = await dir.getFileHandle(name, { create: true });\n        const writer = await handle.createWritable({\n            keepExistingData: (_a = options === null || options === void 0 ? void 0 : options.append) !== null && _a !== void 0 ? _a : false,\n        });\n        if (options.append) {\n            const file = await handle.getFile();\n            file.size && writer.seek(file.size);\n        }\n        if (options.signal) {\n            const { signal } = options;\n            if (signal.aborted) {\n                throw signal.reason;\n            }\n            else {\n                signal.addEventListener(\"abort\", () => {\n                    writer.abort(signal.reason);\n                });\n            }\n        }\n        await writer.write(data);\n        await writer.close();\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Removes the file or directory of the given path from the file system.\n */\nexport async function remove(path, options = {}) {\n    path = sanitize(path);\n    if (isDeno) {\n        await Deno.remove(path, options);\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        await fs.rm(path, options);\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        const parent = dirname(path);\n        const name = basename(path);\n        const dir = await getDirHandle(parent);\n        await dir.removeEntry(name, options);\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Renames the file or directory from the old path to the new path.\n */\nexport async function rename(oldPath, newPath) {\n    oldPath = sanitize(oldPath);\n    newPath = sanitize(newPath);\n    if (isDeno) {\n        await Deno.rename(oldPath, newPath);\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        await fs.rename(oldPath, newPath);\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        return await copyInBrowser(oldPath, newPath, { cut: true });\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Copies the file or directory from the old path to the new path.\n *\n * NOTE: If the old path is a file and the new path is a directory, the file\n * will be copied to the new directory with the same name.\n */\nexport async function copy(oldPath, newPath) {\n    oldPath = sanitize(oldPath);\n    newPath = sanitize(newPath);\n    if (isDeno) {\n        const oldStat = await Deno.stat(oldPath);\n        if (oldStat.isDirectory) {\n            const entries = readDir(oldPath, { recursive: true });\n            for await (const entry of entries) {\n                const _newPath = join(newPath, entry.name);\n                if (entry.kind === \"file\") {\n                    await Deno.copyFile(entry.path, _newPath);\n                }\n                else if (entry.kind === \"directory\") {\n                    await Deno.mkdir(_newPath);\n                }\n            }\n        }\n        else {\n            try {\n                const newStat = await Deno.stat(newPath);\n                if (newStat.isDirectory) {\n                    newPath = join(newPath, basename(oldPath));\n                }\n                await Deno.copyFile(oldPath, newPath);\n            }\n            catch (_a) {\n                await Deno.copyFile(oldPath, newPath);\n            }\n        }\n    }\n    else if (isNodeLike) {\n        const fs = await import(\"fs/promises\");\n        const oldStat = await fs.stat(oldPath);\n        if (oldStat.isDirectory()) {\n            const entries = readDir(oldPath, { recursive: true });\n            for await (const entry of entries) {\n                const _newPath = join(newPath, entry.name);\n                if (entry.kind === \"file\") {\n                    await fs.copyFile(entry.path, _newPath);\n                }\n                else if (entry.kind === \"directory\") {\n                    await fs.mkdir(_newPath);\n                }\n            }\n        }\n        else {\n            try {\n                const newStat = await fs.stat(newPath);\n                if (newStat.isDirectory()) {\n                    newPath = join(newPath, basename(oldPath));\n                }\n                await fs.copyFile(oldPath, newPath);\n            }\n            catch (_b) {\n                await fs.copyFile(oldPath, newPath);\n            }\n        }\n    }\n    else if (isBrowserWindow || isDedicatedWorker || isSharedWorker) {\n        return await copyInBrowser(oldPath, newPath);\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\nasync function copyInBrowser(oldPath, newPath, options = {}) {\n    const oldParent = dirname(oldPath);\n    const oldName = basename(oldPath);\n    let oldDir = await getDirHandle(oldParent);\n    const [oldErr, oldFile] = await _try(oldDir.getFileHandle(oldName));\n    if (oldFile) {\n        const newParent = dirname(newPath);\n        const newName = basename(newPath);\n        let newDir = await getDirHandle(newParent);\n        const [newErr, newFile] = await _try(newDir.getFileHandle(newName, {\n            create: true,\n        }));\n        if (newFile) {\n            const src = (await oldFile.getFile()).stream();\n            const dest = await newFile.createWritable();\n            await src.pipeTo(dest);\n            if (options.cut) {\n                await oldDir.removeEntry(oldName);\n            }\n        }\n        else if (newErr.name === \"TypeMismatchError\" && !options.cut) {\n            newDir = await newDir.getDirectoryHandle(newName);\n            const newFile = await newDir.getFileHandle(oldName, { create: true });\n            const src = (await oldFile.getFile()).stream();\n            const dest = await newFile.createWritable();\n            await src.pipeTo(dest);\n        }\n        else {\n            throw newErr;\n        }\n    }\n    else if (oldErr.name === \"TypeMismatchError\") {\n        const parent = oldDir;\n        oldDir = await oldDir.getDirectoryHandle(oldName);\n        const newDir = await getDirHandle(newPath, { create: true });\n        await (async function copyDir(oldDir, newDir) {\n            const entries = oldDir[\"entries\"]();\n            for await (const [_, entry] of entries) {\n                if (entry.kind === \"file\") {\n                    const oldFile = await entry.getFile();\n                    const newFile = await newDir.getFileHandle(entry.name, {\n                        create: true,\n                    });\n                    const reader = oldFile.stream();\n                    const writer = await newFile.createWritable();\n                    await reader.pipeTo(writer);\n                    if (options.cut) {\n                        await oldDir.removeEntry(entry.name);\n                    }\n                }\n                else {\n                    const newSubDir = await newDir.getDirectoryHandle(entry.name, {\n                        create: true,\n                    });\n                    await copyDir(entry, newSubDir);\n                    if (options.cut) {\n                        await oldDir.removeEntry(entry.name);\n                    }\n                }\n            }\n        })(oldDir, newDir);\n        if (options.cut) {\n            await parent.removeEntry(oldName);\n        }\n    }\n    else {\n        throw oldErr;\n    }\n}\n//# sourceMappingURL=fs.js.map"],"names":[],"mappings":"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"}