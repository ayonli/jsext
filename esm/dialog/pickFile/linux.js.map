{"version":3,"file":"linux.js","sources":["../../../dialog/pickFile/linux.ts"],"sourcesContent":["import { lines } from \"../../string.ts\";\nimport { join } from \"../../path.ts\";\nimport readAll from \"../../readAll.ts\";\nimport { readFile, run } from \"./util.ts\";\nimport { UTIMap } from \"./constants.ts\";\nfunction htmlAcceptToFileFilter(accept) {\n    const list = Object.values(UTIMap);\n    return accept.split(/\\s*,\\s*/).map(type => {\n        const _type = type.toLowerCase();\n        for (const types of list) {\n            if (types.includes(_type)) {\n                return types.filter(t => t.startsWith(\".\")).map(t => `*${t}`).join(\" \");\n            }\n        }\n        return type;\n    }).join(\" \");\n}\nexport async function linuxChooseOneFile(title = \"\", type = \"\") {\n    const { code, stdout, stderr } = await run(\"zenity\", [\n        \"--file-selection\",\n        \"--title\", title,\n        \"--file-filter\", htmlAcceptToFileFilter(type),\n    ]);\n    if (!code) {\n        const path = stdout.trim();\n        if (path) {\n            return await readFile(path);\n        }\n        else {\n            return null;\n        }\n    }\n    else {\n        throw new Error(stderr.trim());\n    }\n}\nexport async function linuxChooseMultipleFiles(title = \"\", type = \"\") {\n    const { code, stdout, stderr } = await run(\"zenity\", [\n        \"--file-selection\",\n        \"--title\", title,\n        \"--file-filter\", htmlAcceptToFileFilter(type),\n        \"--multiple\",\n        \"--separator\", \"\\n\",\n    ]);\n    if (!code) {\n        const paths = lines(stdout.trim());\n        return await Promise.all(paths.map(path => readFile(path)));\n    }\n    else {\n        throw new Error(stderr.trim());\n    }\n}\nexport async function linuxChooseFolder(title = \"\") {\n    const { code, stdout, stderr } = await run(\"zenity\", [\n        \"--file-selection\",\n        \"--title\", title,\n        \"--directory\",\n    ]);\n    if (!code) {\n        const dir = stdout.trim();\n        const folder = dir.split(\"/\").pop();\n        const paths = (await readAll(Deno.readDir(dir)))\n            .filter(item => item.isFile)\n            .map(item => join(dir, item.name));\n        return await Promise.all(paths.map(path => readFile(path, folder)));\n    }\n    else {\n        throw new Error(stderr.trim());\n    }\n}\n//# sourceMappingURL=linux.js.map"],"names":[],"mappings":"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"}