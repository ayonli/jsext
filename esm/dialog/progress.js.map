{"version":3,"file":"progress.js","sources":["../../dialog/progress.ts"],"sourcesContent":["import bytes from \"../bytes.ts\";\nimport { stripEnd } from \"../string.ts\";\nimport CancelButton from \"./browser/CancelButton.ts\";\nimport Dialog, { closeDialog } from \"./browser/Dialog.ts\";\nimport Footer from \"./browser/Footer.ts\";\nimport Progress from \"./browser/Progress.ts\";\nimport Text from \"./browser/Text.ts\";\nimport { CLR, LF } from \"./terminal/constants.ts\";\nimport { isCancelEvent, isNodeRepl, writeSync, } from \"./terminal/util.ts\";\nasync function handleDomProgress(message, fn, options) {\n    const { signal, abort, listenForAbort } = options;\n    const text = Text(message);\n    const { element: progressBar, setValue } = Progress();\n    const dialog = Dialog({ onCancel: abort }, text);\n    const set = (state) => {\n        if (signal.aborted) {\n            return;\n        }\n        if (state.message) {\n            text.textContent = state.message;\n        }\n        if (state.percent !== undefined) {\n            setValue(state.percent);\n        }\n    };\n    if (abort) {\n        dialog.appendChild(Footer(progressBar, CancelButton()));\n    }\n    else {\n        dialog.appendChild(progressBar);\n    }\n    document.body.appendChild(dialog);\n    let job = fn(set, signal);\n    if (listenForAbort) {\n        job = Promise.race([job, listenForAbort()]);\n    }\n    try {\n        return await job;\n    }\n    finally {\n        signal.aborted || closeDialog(dialog, \"OK\");\n    }\n}\nasync function handleTerminalProgress(stdin, stdout, message, fn, options) {\n    const { signal, abort, listenForAbort } = options;\n    writeSync(stdout, bytes(message));\n    let lastMessage = stripEnd(message, \"...\");\n    let lastPercent = undefined;\n    let waitingIndicator = message.endsWith(\"...\") ? \"...\" : \"\";\n    const waitingTimer = setInterval(() => {\n        if (waitingIndicator === \"...\") {\n            waitingIndicator = \".\";\n        }\n        else {\n            waitingIndicator += \".\";\n        }\n        writeSync(stdout, CLR);\n        writeSync(stdout, bytes(lastMessage + waitingIndicator));\n    }, 1000);\n    const set = (state) => {\n        if (signal.aborted) {\n            return;\n        }\n        writeSync(stdout, CLR);\n        if (state.message) {\n            lastMessage = state.message;\n        }\n        if (state.percent !== undefined) {\n            lastPercent = state.percent;\n        }\n        writeSync(stdout, bytes(lastMessage));\n        if (lastPercent !== undefined) {\n            const percentage = \" ... \" + lastPercent + \"%\";\n            writeSync(stdout, bytes(percentage));\n            clearInterval(waitingTimer);\n        }\n    };\n    const nodeReader = (buf) => {\n        if (isCancelEvent(buf)) {\n            abort === null || abort === void 0 ? void 0 : abort();\n        }\n    };\n    const denoReader = \"fd\" in stdin ? null : stdin.readable.getReader();\n    if (abort) {\n        if (\"fd\" in stdin) {\n            stdin.on(\"data\", nodeReader);\n        }\n        else {\n            (async () => {\n                while (true) {\n                    try {\n                        const { done, value } = await denoReader.read();\n                        if (done || isCancelEvent(value)) {\n                            signal.aborted || abort();\n                            break;\n                        }\n                    }\n                    catch (_a) {\n                        signal.aborted || abort();\n                        break;\n                    }\n                }\n            })();\n        }\n    }\n    let job = fn(set, signal);\n    if (listenForAbort) {\n        job = Promise.race([job, listenForAbort()]);\n    }\n    try {\n        return await job;\n    }\n    finally {\n        writeSync(stdout, LF);\n        clearInterval(waitingTimer);\n        if (\"fd\" in stdin) {\n            stdin.off(\"data\", nodeReader);\n        }\n        else {\n            denoReader === null || denoReader === void 0 ? void 0 : denoReader.releaseLock();\n        }\n    }\n}\nasync function handleDenoProgress(message, fn, options) {\n    const { stdin, stdout } = Deno;\n    if (!stdin.isTerminal) {\n        return null;\n    }\n    stdin.setRaw(true);\n    try {\n        return await handleTerminalProgress(stdin, stdout, message, fn, options);\n    }\n    finally {\n        stdin.setRaw(false);\n    }\n}\nasync function handleNodeProgress(message, fn, options) {\n    const { stdin, stdout } = process;\n    if (!stdout.isTTY) {\n        return null;\n    }\n    if (stdin.isPaused()) {\n        stdin.resume();\n    }\n    const rawMode = stdin.isRaw;\n    rawMode || stdin.setRawMode(true);\n    try {\n        return await handleTerminalProgress(stdin, stdout, message, fn, options);\n    }\n    finally {\n        stdin.setRawMode(rawMode);\n        if (!(await isNodeRepl())) {\n            stdin.pause();\n        }\n    }\n}\n/**\n * Displays a dialog with a progress bar indicating the ongoing state of the\n * `fn` function, and to wait until the job finishes or the user cancels the\n * dialog.\n *\n * @param onAbort If provided, the dialog will show a cancel button (or listen\n * for Escape in CLI) that allows the user to abort the task. This function can\n * either return a default/fallback result or throw an error to indicate the\n * cancellation.\n *\n * @example\n * ```ts\n * // default usage\n * import { progress } from \"@ayonli/jsext/dialog\";\n *\n * const result = await progress(\"Processing...\", async () => {\n *     // ... some long-running task\n *     return { ok: true };\n * });\n *\n * console.log(result); // { ok: true }\n * ```\n *\n * @example\n * ```ts\n * // update state\n * import { progress } from \"@ayonli/jsext/dialog\";\n *\n * const result = await progress(\"Processing...\", async (set) => {\n *     set({ percent: 0 });\n *     // ... some long-running task\n *     set({ percent: 50, message: \"Halfway there!\" });\n *     // ... some long-running task\n *     set({ percent: 100 });\n *\n *     return { ok: true };\n * });\n *\n * console.log(result); // { ok: true }\n * ```\n *\n * @example\n * ```ts\n * // abortable\n * import { progress } from \"@ayonli/jsext/dialog\";\n *\n * const result = await progress(\"Processing...\", async (set, signal) => {\n *     set({ percent: 0 });\n *\n *     if (!signal.aborted) {\n *         // ... some long-running task\n *         set({ percent: 50, message: \"Halfway there!\" });\n *     }\n *\n *     if (!signal.aborted) {\n *         // ... some long-running task\n *         set({ percent: 100 });\n *     }\n *\n *     return { ok: true };\n * }, () => {\n *     return { ok: false };\n * });\n *\n * console.log(result); // { ok: true } or { ok: false }\n * ```\n */\nexport default async function progress(message, fn, onAbort = undefined) {\n    const ctrl = new AbortController();\n    const signal = ctrl.signal;\n    let fallback = null;\n    const abort = !onAbort ? undefined : async () => {\n        try {\n            const result = await onAbort();\n            fallback = { value: result };\n            ctrl.abort();\n        }\n        catch (err) {\n            ctrl.abort(err);\n        }\n    };\n    const listenForAbort = !onAbort ? undefined : () => new Promise((resolve, reject) => {\n        signal.addEventListener(\"abort\", () => {\n            if (fallback) {\n                resolve(fallback.value);\n            }\n            else {\n                reject(signal.reason);\n            }\n        });\n    });\n    if (typeof document === \"object\") {\n        return await handleDomProgress(message, fn, { signal, abort, listenForAbort });\n    }\n    else if (typeof Deno === \"object\") {\n        return await handleDenoProgress(message, fn, { signal, abort, listenForAbort });\n    }\n    else {\n        return await handleNodeProgress(message, fn, { signal, abort, listenForAbort });\n    }\n}\n//# sourceMappingURL=progress.js.map"],"names":[],"mappings":"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"}