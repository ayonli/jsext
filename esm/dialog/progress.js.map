{"version":3,"file":"progress.js","sources":["../../dialog/progress.ts"],"sourcesContent":["import bytes from \"../bytes/index.ts\";\nimport { stripEnd } from \"../string/index.ts\";\nimport CancelButton from \"./components/CancelButton.ts\";\nimport Dialog, { closeDialog } from \"./components/Dialog.ts\";\nimport Footer from \"./components/Footer.ts\";\nimport Progress from \"./components/Progress.ts\";\nimport Text from \"./components/Text.ts\";\nimport { isNodeRepl } from \"./util.ts\";\nconst ESC = \"\\u001b\".charCodeAt(0); // Escape\nconst CLR = bytes(\"\\r\\u001b[K\"); // Clear the current line\nasync function handleDomProgress(message, fn, options) {\n    const { signal, abort, listenForAbort } = options;\n    const text = Text(message);\n    const { element: progressBar, setValue } = Progress();\n    const dialog = Dialog({ onCancel: abort }, text);\n    const set = (state) => {\n        if (signal.aborted) {\n            return;\n        }\n        if (state.message) {\n            text.textContent = state.message;\n        }\n        if (state.percent !== undefined) {\n            setValue(state.percent);\n        }\n    };\n    if (abort) {\n        dialog.appendChild(Footer(progressBar, CancelButton()));\n    }\n    else {\n        dialog.appendChild(progressBar);\n    }\n    document.body.appendChild(dialog);\n    let job = fn(set, signal);\n    if (listenForAbort) {\n        job = Promise.race([job, listenForAbort()]);\n    }\n    try {\n        return await job;\n    }\n    finally {\n        signal.aborted || closeDialog(dialog, \"OK\");\n    }\n}\nasync function handleDenoProgress(message, fn, options) {\n    const { signal, abort, listenForAbort } = options;\n    const { stdin, stdout } = Deno;\n    stdout.writeSync(bytes(message));\n    let lastMessage = stripEnd(message, \"...\");\n    let lastPercent = undefined;\n    let waitingIndicator = message.endsWith(\"...\") ? \"...\" : \"\";\n    const waitingTimer = setInterval(() => {\n        if (waitingIndicator === \"...\") {\n            waitingIndicator = \".\";\n        }\n        else {\n            waitingIndicator += \".\";\n        }\n        stdout.writeSync(CLR);\n        stdout.writeSync(bytes(lastMessage + waitingIndicator));\n    }, 1000);\n    const set = (state) => {\n        stdout.writeSync(CLR);\n        if (signal.aborted) {\n            return;\n        }\n        if (state.message) {\n            lastMessage = state.message;\n        }\n        if (state.percent !== undefined) {\n            lastPercent = state.percent;\n        }\n        stdout.writeSync(bytes(lastMessage));\n        if (lastPercent !== undefined) {\n            const percentage = \" ... \" + lastPercent + \"%\";\n            stdout.writeSync(bytes(percentage));\n            clearInterval(waitingTimer);\n        }\n    };\n    const keypressListener = new AbortController();\n    const finish = new Promise(resolve => {\n        keypressListener.signal.addEventListener(\"abort\", () => {\n            resolve(null);\n        });\n    });\n    if (abort) {\n        (async () => {\n            stdin.setRaw(true, { cbreak: true });\n            const c = new Uint8Array(1);\n            while (true) {\n                const n = await Promise.race([stdin.read(c), finish]);\n                if (n === null || n === 0) {\n                    break;\n                }\n                else if (c[0] === ESC) {\n                    abort();\n                    break;\n                }\n            }\n            stdin.setRaw(false);\n        })();\n    }\n    let job = fn(set, signal);\n    if (listenForAbort) {\n        job = Promise.race([job, listenForAbort()]);\n    }\n    try {\n        return await job;\n    }\n    finally {\n        clearInterval(waitingTimer);\n        keypressListener.abort();\n        stdout.writeSync(bytes(\"\\n\"));\n    }\n}\nasync function handleNodeProgress(message, fn, options) {\n    const { signal, abort, listenForAbort } = options;\n    const { stdin, stdout } = process;\n    const handleProgress = async () => {\n        let cursor = message.length;\n        stdout.write(message);\n        let waitingIndicator = message.endsWith(\"...\") ? \"...\" : \"\";\n        const waitingTimer = setInterval(() => {\n            if (waitingIndicator === \"...\") {\n                waitingIndicator = \".\";\n                cursor -= 2;\n                stdout.moveCursor(-2, 0);\n                stdout.clearLine(1);\n            }\n            else {\n                waitingIndicator += \".\";\n                cursor += 1;\n                stdout.write(\".\");\n            }\n        }, 1000);\n        let lastMessage = stripEnd(message, \"...\");\n        let lastPercent = undefined;\n        const set = (state) => {\n            if (signal.aborted) {\n                return;\n            }\n            stdout.moveCursor(-cursor, 0);\n            stdout.clearLine(1);\n            if (state.message) {\n                lastMessage = state.message;\n            }\n            if (state.percent !== undefined) {\n                lastPercent = state.percent;\n            }\n            cursor = lastMessage.length;\n            stdout.write(lastMessage);\n            if (lastPercent !== undefined) {\n                const percentage = \" ... \" + lastPercent + \"%\";\n                cursor += percentage.length;\n                stdout.write(percentage);\n                clearInterval(waitingTimer);\n            }\n        };\n        const keypressListener = (_, key) => {\n            if (key.name === \"escape\" || (key.name === \"c\" && key.ctrl)) {\n                abort === null || abort === void 0 ? void 0 : abort();\n            }\n        };\n        if (abort) {\n            stdin.on(\"keypress\", keypressListener);\n        }\n        let job = fn(set, signal);\n        if (listenForAbort) {\n            job = Promise.race([job, listenForAbort()]);\n        }\n        try {\n            return await job;\n        }\n        finally {\n            clearInterval(waitingTimer);\n            abort && stdin.off(\"keypress\", keypressListener);\n            stdout.write(\"\\n\");\n        }\n    };\n    if (await isNodeRepl()) {\n        return await handleProgress();\n    }\n    else {\n        const { createInterface } = await import(\"readline\");\n        // this will keep the program running\n        const rl = createInterface({ input: stdin, output: stdout });\n        const result = await handleProgress();\n        rl.close();\n        return result;\n    }\n}\n/**\n * Displays a dialog with a progress bar indicating the ongoing state of the\n * `fn` function, and to wait until the job finishes or the user cancels the\n * dialog.\n *\n * @param onAbort If provided, the dialog will show a cancel button (or listen\n * for Escape in CLI) that allows the user to abort the task. This function can\n * either return a default/fallback result or throw an error to indicate the\n * cancellation.\n *\n * @example\n * ```ts\n * // default usage\n * import { progress } from \"@ayonli/jsext/dialog\";\n *\n * const result = await progress(\"Processing...\", async () => {\n *     // ... some long-running task\n *     return { ok: true };\n * });\n *\n * console.log(result); // { ok: true }\n * ```\n *\n * @example\n * ```ts\n * // update state\n * import { progress } from \"@ayonli/jsext/dialog\";\n *\n * const result = await progress(\"Processing...\", async (set) => {\n *     set({ percent: 0 });\n *     // ... some long-running task\n *     set({ percent: 50, message: \"Halfway there!\" });\n *     // ... some long-running task\n *     set({ percent: 100 });\n *\n *     return { ok: true };\n * });\n *\n * console.log(result); // { ok: true }\n * ```\n *\n * @example\n * ```ts\n * // abortable\n * import { progress } from \"@ayonli/jsext/dialog\";\n *\n * const result = await progress(\"Processing...\", async (set, signal) => {\n *     set({ percent: 0 });\n *\n *     if (!signal.aborted) {\n *         // ... some long-running task\n *         set({ percent: 50, message: \"Halfway there!\" });\n *     }\n *\n *     if (!signal.aborted) {\n *         // ... some long-running task\n *         set({ percent: 100 });\n *     }\n *\n *     return { ok: true };\n * }, () => {\n *     return { ok: false };\n * });\n *\n * console.log(result); // { ok: true } or { ok: false }\n * ```\n */\nexport default async function progress(message, fn, onAbort = undefined) {\n    const ctrl = new AbortController();\n    const signal = ctrl.signal;\n    let fallback = null;\n    const abort = !onAbort ? undefined : async () => {\n        try {\n            const result = await onAbort();\n            fallback = { value: result };\n            ctrl.abort();\n        }\n        catch (err) {\n            ctrl.abort(err);\n        }\n    };\n    const listenForAbort = !onAbort ? undefined : () => new Promise((resolve, reject) => {\n        signal.addEventListener(\"abort\", () => {\n            if (fallback) {\n                resolve(fallback.value);\n            }\n            else {\n                reject(signal.reason);\n            }\n        });\n    });\n    if (typeof document === \"object\") {\n        return await handleDomProgress(message, fn, { signal, abort, listenForAbort });\n    }\n    else if (typeof Deno === \"object\") {\n        return await handleDenoProgress(message, fn, { signal, abort, listenForAbort });\n    }\n    else {\n        return await handleNodeProgress(message, fn, { signal, abort, listenForAbort });\n    }\n}\n//# sourceMappingURL=progress.js.map"],"names":[],"mappings":"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"}