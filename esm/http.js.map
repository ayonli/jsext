{"version":3,"file":"http.js","sources":["../http.ts"],"sourcesContent":["/**\n * Utility functions for handling HTTP related tasks, such as parsing headers.\n * @module\n * @experimental\n */\nimport { orderBy } from \"./array.ts\";\nimport bytes from \"./bytes.ts\";\nimport { isBun, isDeno, isNode } from \"./env.ts\";\nimport { createReadableStream, exists, readDir, readFile, stat } from \"./fs.ts\";\nimport { sha256 } from \"./hash.ts\";\nimport { ifMatch, ifNoneMatch, parseRange } from \"./http/util.ts\";\nimport { isMain } from \"./module.ts\";\nimport { as } from \"./object.ts\";\nimport { join, startsWith } from \"./path.ts\";\nimport { readAsArray } from \"./reader.ts\";\nimport { dedent, stripStart } from \"./string.ts\";\nexport * from \"./http/util.ts\";\n/**\n * Calculates the ETag for a given entity.\n *\n * @example\n * ```ts\n * import { stat } from \"@ayonli/jsext/fs\";\n * import { etag } from \"@ayonli/jsext/http\";\n *\n * const etag1 = await etag(\"Hello, World!\");\n *\n * const data = new Uint8Array([1, 2, 3, 4, 5]);\n * const etag2 = await etag(data);\n *\n * const info = await stat(\"file.txt\");\n * const etag3 = await etag(info);\n * ```\n */\nexport async function etag(data) {\n    var _a;\n    if (typeof data === \"string\" || data instanceof Uint8Array) {\n        if (!data.length) {\n            // a short circuit for zero length entities\n            return `0-47DEQpj8HBSa+/TImW+5JCeuQeR`;\n        }\n        if (typeof data === \"string\") {\n            data = bytes(data);\n        }\n        const hash = await sha256(data, \"base64\");\n        return `${data.length.toString(16)}-${hash.slice(0, 27)}`;\n    }\n    const mtime = (_a = data.mtime) !== null && _a !== void 0 ? _a : new Date();\n    const hash = await sha256(mtime.toISOString(), \"base64\");\n    return `${data.size.toString(16)}-${hash.slice(0, 27)}`;\n}\n/**\n * Returns a random port number that is available for listening.\n */\nexport async function randomPort(prefer = undefined) {\n    if (isDeno) {\n        try {\n            const listener = Deno.listen({ port: prefer !== null && prefer !== void 0 ? prefer : 0 });\n            const { port } = listener.addr;\n            listener.close();\n            return Promise.resolve(port);\n        }\n        catch (err) {\n            if (prefer) {\n                return randomPort(0);\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    else if (isBun) {\n        try {\n            const listener = Bun.listen({\n                hostname: \"0.0.0.0\",\n                port: prefer !== null && prefer !== void 0 ? prefer : 0,\n                socket: {\n                    data: () => { },\n                },\n            });\n            const { port } = listener;\n            listener.stop(true);\n            return Promise.resolve(port);\n        }\n        catch (err) {\n            if (prefer) {\n                return randomPort(0);\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    else if (isNode) {\n        const { createServer, connect } = await import(\"net\");\n        if (prefer) {\n            // In Node.js listening on a port used by another process may work,\n            // so we don't use `listen` method to check if the port is available.\n            // Instead, we use the `connect` method to check if the port can be\n            // reached, if so, the port is open and we don't use it.\n            const isOpen = await new Promise((resolve, reject) => {\n                const conn = connect(prefer);\n                conn.once(\"connect\", () => {\n                    conn.end();\n                    resolve(true);\n                }).once(\"error\", (err) => {\n                    if (err[\"code\"] === \"ECONNREFUSED\") {\n                        resolve(false);\n                    }\n                    else {\n                        reject(err);\n                    }\n                });\n            });\n            if (isOpen) {\n                return randomPort(0);\n            }\n            else {\n                return prefer;\n            }\n        }\n        else {\n            const server = createServer();\n            server.listen({ port: 0, exclusive: true });\n            const port = server.address().port;\n            return new Promise((resolve, reject) => {\n                server.close(err => err ? reject(err) : resolve(port));\n            });\n        }\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Creates a Node.js HTTP request listener with modern Web APIs.\n *\n * NOTE: This function requires Node.js v18.4.1 or above.\n *\n * @example\n * ```ts\n * import * as http from \"node:http\";\n * import { withWeb } from \"@ayonli/jsext/http\";\n *\n * const server = http.createServer(withWeb(async (req) => {\n *     return new Response(\"Hello, World!\");\n * }));\n *\n * server.listen(8000);\n * ```\n */\nexport function withWeb(listener) {\n    return async (nReq, nRes) => {\n        const req = toWebRequest(nReq);\n        const res = await listener(req);\n        if (res && !nRes.headersSent) {\n            if (res.status === 101) {\n                // When the status code is 101, it means the server is upgrading\n                // the connection to a different protocol, usually to WebSocket.\n                // In this case, the response shall be and may have already been\n                // written by the request socket. So we should not write the\n                // response again.\n                return;\n            }\n            toNodeResponse(res, nRes);\n        }\n    };\n}\n/**\n * Transforms a Node.js HTTP request to a modern `Request` object.\n */\nfunction toWebRequest(req) {\n    var _a, _b;\n    const protocol = req.socket[\"encrypted\"] || req.headers[\":scheme\"] === \"https\"\n        ? \"https\" : \"http\";\n    const host = (_a = req.headers[\":authority\"]) !== null && _a !== void 0 ? _a : req.headers[\"host\"];\n    const url = new URL((_b = req.url) !== null && _b !== void 0 ? _b : \"/\", `${protocol}://${host}`);\n    const headers = new Headers(Object.fromEntries(Object.entries(req.headers).filter(([key]) => {\n        return typeof key === \"string\" && !key.startsWith(\":\");\n    })));\n    if (req.headers[\":authority\"]) {\n        headers.set(\"Host\", req.headers[\":authority\"]);\n    }\n    const init = {\n        method: req.method,\n        headers,\n    };\n    const cache = headers.get(\"Cache-Control\");\n    const mode = headers.get(\"Sec-Fetch-Mode\");\n    const referrer = headers.get(\"Referer\");\n    if (cache === \"no-cache\") {\n        init.cache = \"no-cache\";\n    }\n    else if (cache === \"no-store\") {\n        init.cache = \"no-store\";\n    }\n    else if (cache === \"only-if-cached\" && mode === \"same-origin\") {\n        init.cache = \"only-if-cached\";\n    }\n    else {\n        init.cache = \"default\";\n    }\n    if (mode === \"no-cors\") {\n        init.mode = \"no-cors\";\n    }\n    else if (mode === \"same-origin\") {\n        init.mode = \"same-origin\";\n    }\n    else {\n        init.mode = \"cors\";\n    }\n    if (referrer) {\n        init.referrer = referrer;\n    }\n    if (req.method !== \"GET\" && req.method !== \"HEAD\" && req.method !== \"OPTIONS\") {\n        const { readable, writable } = new TransformStream();\n        const writer = writable.getWriter();\n        req.on(\"data\", (chunk) => {\n            writer.write(chunk);\n        }).once(\"error\", (err) => {\n            writer.abort(err);\n        }).once(\"end\", () => {\n            writer.close();\n        });\n        init.body = readable;\n        // @ts-ignore Node.js special\n        init.duplex = \"half\";\n    }\n    const request = new Request(url, init);\n    if (!req.headers[\":authority\"]) {\n        Object.assign(request, {\n            [Symbol.for(\"incomingMessage\")]: req,\n        });\n    }\n    return request;\n}\n/**\n * Pipes a modern `Response` object to a Node.js HTTP response.\n */\nfunction toNodeResponse(res, nodeRes) {\n    const { status, statusText, headers } = res;\n    for (const [key, value] of headers) {\n        // Use `setHeader` to set headers instead of passing them to `writeHead`,\n        // it seems in Deno, the headers are not written to the response if they\n        // are passed to `writeHead`.\n        nodeRes.setHeader(key, value);\n    }\n    nodeRes.writeHead(status, statusText);\n    if (!res.body) {\n        nodeRes.end();\n    }\n    else {\n        res.body.pipeTo(new WritableStream({\n            start(controller) {\n                nodeRes.once(\"close\", () => {\n                    controller.error();\n                }).once(\"error\", (err) => {\n                    controller.error(err);\n                });\n            },\n            write(chunk) {\n                nodeRes.write(chunk);\n            },\n            close() {\n                nodeRes.end();\n            },\n            abort(err) {\n                nodeRes.destroy(err);\n            },\n        }));\n    }\n}\n/**\n * Serves static files from a file system directory.\n *\n * @example\n * ```ts\n * import { serveStatic } from \"@ayonli/jsext/http\";\n *\n * export default {\n *     async fetch(req: Request) {\n *         const { pathname } = new URL(req.url);\n *\n *         if (pathname.startsWith(\"/assets\")) {\n *             return await serveStatic(req, {\n *                 fsDir: \"./public\",\n *                 urlPrefix: \"/assets\",\n *             });\n *         }\n *\n *         return new Response(\"Hello, World!\");\n *     }\n * };\n * ```\n */\nexport async function serveStatic(req, options = {}) {\n    var _a, _b, _c, _d, _e, _f;\n    const extraHeaders = (_a = options.headers) !== null && _a !== void 0 ? _a : {};\n    const dir = (_b = options.fsDir) !== null && _b !== void 0 ? _b : \".\";\n    const prefix = options.urlPrefix ? join(options.urlPrefix) : \"\";\n    const url = new URL(req.url);\n    if (prefix && !startsWith(url.pathname, prefix)) {\n        return new Response(\"Not Found\", {\n            status: 404,\n            statusText: \"Not Found\",\n            headers: extraHeaders,\n        });\n    }\n    const filename = join(dir, stripStart(url.pathname.slice(prefix.length), \"/\"));\n    let info;\n    try {\n        info = await stat(filename);\n    }\n    catch (err) {\n        if (((_c = as(err, Error)) === null || _c === void 0 ? void 0 : _c.name) === \"NotFoundError\") {\n            return new Response(`Not Found`, {\n                status: 404,\n                statusText: \"Not Found\",\n                headers: extraHeaders,\n            });\n        }\n        else if (((_d = as(err, Error)) === null || _d === void 0 ? void 0 : _d.name) === \"NotAllowedError\") {\n            return new Response(\"Forbidden\", {\n                status: 403,\n                statusText: \"Forbidden\",\n                headers: extraHeaders,\n            });\n        }\n        else {\n            return new Response(\"Internal Server Error\", {\n                status: 500,\n                statusText: \"Internal Server Error\",\n                headers: extraHeaders,\n            });\n        }\n    }\n    if (info.kind === \"directory\") {\n        if (!req.url.endsWith(\"/\")) {\n            return Response.redirect(req.url + \"/\", 301);\n        }\n        else {\n            if (await exists(join(filename, \"index.html\"))) {\n                return serveStatic(new Request(join(req.url, \"index.html\"), req), options);\n            }\n            else if (await exists(join(filename, \"index.htm\"))) {\n                return serveStatic(new Request(join(req.url, \"index.htm\"), req), options);\n            }\n            else if (!options.listDir) {\n                return new Response(\"Forbidden\", {\n                    status: 403,\n                    statusText: \"Forbidden\",\n                    headers: extraHeaders,\n                });\n            }\n            else {\n                const entries = await readAsArray(readDir(filename));\n                const list = [\n                    ...orderBy(entries.filter(e => e.kind === \"directory\"), e => e.name, \"asc\"),\n                    ...orderBy(entries.filter(e => e.kind === \"file\"), e => e.name, \"asc\"),\n                ];\n                const { pathname } = url;\n                if (pathname !== \"/\") {\n                    list.unshift({\n                        kind: \"directory\",\n                        name: \"..\",\n                        relativePath: \"..\",\n                    });\n                }\n                const listHtml = list.map((entry) => {\n                    const name = entry.kind === \"directory\" ? entry.name + \"/\" : entry.name;\n                    let url = join(pathname, entry.name);\n                    if (entry.kind === \"directory\" && url !== \"/\") {\n                        url += \"/\";\n                    }\n                    return dedent `\n                        <li>\n                            <a href=\"${url}\">${name}</a>\n                        </li>\n                        `;\n                });\n                return new Response(dedent `\n                <!DOCTYPE HTML>\n                <html lang=\"en\">\n                <head>\n                    <meta charset=\"utf-8\">\n                    <title>Directory listing for ${pathname}</title>\n                    <style>\n                    body {\n                        font-family: system-ui;\n                    }\n                    </style>\n                </head>\n                <body>\n                    <h1>Directory listing for ${pathname}</h1>\n                    <hr>\n                    <ul>\n                        ${listHtml.join(\"\")}\n                    </ul>\n                </body>\n                </html>\n                `, {\n                    status: 200,\n                    statusText: \"OK\",\n                    headers: {\n                        ...extraHeaders,\n                        \"Content-Type\": \"text/html; charset=utf-8\",\n                    },\n                });\n            }\n        }\n    }\n    else if (info.kind !== \"file\") {\n        return new Response(\"Forbidden\", {\n            status: 403,\n            statusText: \"Forbidden\",\n            headers: extraHeaders,\n        });\n    }\n    const rangeValue = req.headers.get(\"Range\");\n    let range;\n    if (rangeValue && info.size) {\n        try {\n            range = parseRange(rangeValue);\n        }\n        catch (_g) {\n            return new Response(\"Invalid Range header\", {\n                status: 416,\n                statusText: \"Range Not Satisfiable\",\n                headers: extraHeaders,\n            });\n        }\n    }\n    const mtime = (_e = info.mtime) !== null && _e !== void 0 ? _e : new Date();\n    const _etag = await etag(info);\n    const headers = new Headers({\n        ...extraHeaders,\n        \"Accept-Ranges\": \"bytes\",\n        \"Last-Modified\": mtime.toUTCString(),\n        \"Etag\": _etag,\n    });\n    const ifModifiedSinceValue = req.headers.get(\"If-Modified-Since\");\n    const ifNoneMatchValue = req.headers.get(\"If-None-Match\");\n    const ifMatchValue = req.headers.get(\"If-Match\");\n    let modified = true;\n    if (ifModifiedSinceValue) {\n        const date = new Date(ifModifiedSinceValue);\n        modified = Math.floor(mtime.valueOf() / 1000) > Math.floor(date.valueOf() / 1000);\n    }\n    else if (ifNoneMatchValue) {\n        modified = ifNoneMatch(ifNoneMatchValue, _etag);\n    }\n    if (!modified) {\n        return new Response(null, {\n            status: 304,\n            statusText: \"Not Modified\",\n            headers,\n        });\n    }\n    else if (ifMatchValue && range && !ifMatch(ifMatchValue, _etag)) {\n        return new Response(\"Precondition Failed\", {\n            status: 412,\n            statusText: \"Precondition Failed\",\n            headers,\n        });\n    }\n    if (/^text\\/|^application\\/(json|yaml|toml|xml|javascript)$/.test(info.type)) {\n        headers.set(\"Content-Type\", info.type + \"; charset=utf-8\");\n    }\n    else {\n        headers.set(\"Content-Type\", info.type || \"application/octet-stream\");\n    }\n    if (info.atime) {\n        headers.set(\"Date\", info.atime.toUTCString());\n    }\n    if (options.maxAge) {\n        headers.set(\"Cache-Control\", `public, max-age=${options.maxAge}`);\n    }\n    if (range) {\n        const { ranges, suffix: suffixLength } = range;\n        let start;\n        let end;\n        if (ranges.length) {\n            ({ start } = ranges[0]);\n            end = Math.min((_f = ranges[0].end) !== null && _f !== void 0 ? _f : info.size - 1, info.size - 1);\n        }\n        else {\n            start = Math.max(info.size - suffixLength, 0);\n            end = info.size - 1;\n        }\n        const data = await readFile(filename);\n        const slice = data.subarray(start, end + 1);\n        headers.set(\"Content-Range\", `bytes ${start}-${end}/${info.size}`);\n        headers.set(\"Content-Length\", String(end - start + 1));\n        return new Response(slice, {\n            status: 206,\n            statusText: \"Partial Content\",\n            headers,\n        });\n    }\n    else if (!info.size) {\n        headers.set(\"Content-Length\", \"0\");\n        return new Response(\"\", {\n            status: 200,\n            statusText: \"OK\",\n            headers,\n        });\n    }\n    else {\n        headers.set(\"Content-Length\", String(info.size));\n        return new Response(createReadableStream(filename), {\n            status: 200,\n            statusText: \"OK\",\n            headers,\n        });\n    }\n}\nif (isMain(import.meta)) {\n    if (isDeno) {\n        randomPort(8000).then((port) => {\n            Deno.serve({ port }, req => serveStatic(req, {\n                listDir: true,\n                headers: {\n                    \"Server\": navigator.userAgent,\n                },\n            }));\n        });\n    }\n    else if (isBun) {\n        randomPort(8000).then((port) => {\n            Bun.serve({\n                port,\n                fetch: (req) => serveStatic(req, {\n                    listDir: true,\n                    headers: {\n                        \"Server\": navigator.userAgent,\n                    },\n                }),\n            });\n            console.log(`Listening on http://localhost:${port}/`);\n        });\n    }\n    else if (isNode) {\n        import(\"node:http\").then(async ({ createServer }) => {\n            const server = createServer(withWeb(async (req) => {\n                return serveStatic(req, {\n                    listDir: true,\n                    headers: {\n                        \"Server\": `Node.js/${process.version}`,\n                    },\n                });\n            }));\n            const port = await randomPort(8000);\n            server.listen(port);\n            console.log(`Listening on http://localhost:${port}/`);\n        });\n    }\n}\n//# sourceMappingURL=http.js.map"],"names":[],"mappings":"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"}