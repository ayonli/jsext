{"version":3,"file":"util.js","sources":["../../fs/util.ts"],"sourcesContent":["import { orderBy, startsWith } from \"../array.ts\";\nimport { Exception } from \"../error.ts\";\nimport { getMIME } from \"../filetype.ts\";\nimport { omit } from \"../object.ts\";\nimport { basename, extname, isFileUrl, split, toFsPath } from \"../path.ts\";\nexport function ensureFsTarget(path) {\n    if (path instanceof URL) {\n        if (path.protocol !== \"file:\") {\n            throw new TypeError(\"Only file URLs are supported\");\n        }\n        else {\n            return toFsPath(path.href);\n        }\n    }\n    else if (typeof path === \"string\" && isFileUrl(path)) {\n        return toFsPath(path);\n    }\n    else {\n        return path;\n    }\n}\nfunction getErrorName(err) {\n    if (err.constructor === Error) {\n        return err.constructor.name;\n    }\n    else {\n        return err.name;\n    }\n}\n/**\n * Wraps a raw file system error to a predefined error by this module.\n *\n * @param type Used for `FileSystemHandle` operations.\n */\nexport function wrapFsError(err, type = undefined) {\n    if (err instanceof Error && !(err instanceof Exception) && !(err instanceof TypeError)) {\n        const errName = getErrorName(err);\n        const errCode = err.code;\n        if (errName === \"NotFoundError\"\n            || errName === \"NotFound\"\n            || errCode === \"ENOENT\"\n            || errCode === \"ENOTFOUND\") {\n            return new Exception(err.message, { name: \"NotFoundError\", code: 404, cause: err });\n        }\n        else if (errName === \"NotAllowedError\"\n            || errName === \"PermissionDenied\"\n            || errName === \"InvalidStateError\"\n            || errName === \"SecurityError\"\n            || errName === \"EACCES\"\n            || errCode === \"EPERM\"\n            || errCode === \"ERR_ACCESS_DENIED\") {\n            return new Exception(err.message, { name: \"NotAllowedError\", code: 403, cause: err });\n        }\n        else if (errName === \"AlreadyExists\"\n            || errCode === \"EEXIST\"\n            || errCode === \"ERR_FS_CP_EEXIST\") {\n            return new Exception(err.message, { name: \"AlreadyExistsError\", code: 409, cause: err });\n        }\n        else if ((errName === \"TypeMismatchError\" && type === \"file\")\n            || errName === \"IsADirectory\"\n            || errCode === \"EISDIR\"\n            || errCode === \"ERR_FS_EISDIR\") {\n            return new Exception(err.message, { name: \"IsDirectoryError\", code: 415, cause: err });\n        }\n        else if ((errName === \"TypeMismatchError\" && type === \"directory\")\n            || errName === \"NotADirectory\"\n            || errCode === \"ENOTDIR\") {\n            return new Exception(err.message, { name: \"NotDirectoryError\", code: 415, cause: err });\n        }\n        else if (errName === \"InvalidModificationError\"\n            || errName === \"NotSupported\"\n            || errCode === \"ENOTEMPTY\"\n            || errCode === \"ERR_FS_CP_EINVAL\"\n            || errCode === \"ERR_FS_CP_FIFO_PIPE\"\n            || errCode === \"ERR_FS_CP_DIR_TO_NON_DIR\"\n            || errCode === \"ERR_FS_CP_NON_DIR_TO_DIR\"\n            || errCode === \"ERR_FS_CP_SOCKET\"\n            || errCode === \"ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY\"\n            || errCode === \"ERR_FS_CP_UNKNOWN\"\n            || errCode === \"ERR_FS_INVALID_SYMLINK_TYPE\") {\n            return new Exception(err.message, { name: \"InvalidOperationError\", code: 405, cause: err });\n        }\n        else if (errName === \"NoModificationAllowedError\"\n            || errName === \"Busy\"\n            || errName === \"TimedOut\"\n            || errCode === \"ERR_DIR_CONCURRENT_OPERATION\") {\n            return new Exception(errName, { name: \"BusyError\", code: 409, cause: err });\n        }\n        else if (errName === \"Interrupted\" || errCode === \"ERR_DIR_CLOSED\") {\n            return new Exception(err.message, { name: \"InterruptedError\", code: 409, cause: err });\n        }\n        else if (errName === \"QuotaExceededError\"\n            || errCode === \"ERR_FS_FILE_TOO_LARGE\") {\n            return new Exception(err.message, { name: \"FileTooLargeError\", code: 413, cause: err });\n        }\n        else if (errName === \"FilesystemLoop\") {\n            return new Exception(err.message, { name: \"FilesystemLoopError\", code: 508, cause: err });\n        }\n        else {\n            return err;\n        }\n    }\n    else if (err instanceof Error) {\n        return err;\n    }\n    else if (typeof err === \"string\") {\n        return new Exception(err, { code: 500, cause: err });\n    }\n    else {\n        return new Exception(\"Unknown error\", { code: 500, cause: err });\n    }\n}\n/**\n * Wraps a raw file system operation so that when any error occurs, the error is\n * wrapped to a predefined error by this module.\n *\n * @param type Only used for `FileSystemHandle` operations.\n */\nexport function rawOp(op, type = undefined) {\n    return op.catch((err) => {\n        throw wrapFsError(err, type);\n    });\n}\nexport function fixDirEntry(entry) {\n    // for backward compatibility\n    Object.defineProperty(entry, \"path\", {\n        get() {\n            return entry.relativePath;\n        },\n    });\n    return entry;\n}\nexport function fixFileType(file) {\n    var _a;\n    if (!file.type) {\n        const ext = extname(file.name);\n        if (ext) {\n            Object.defineProperty(file, \"type\", {\n                value: (_a = getMIME(ext)) !== null && _a !== void 0 ? _a : \"\",\n                writable: false,\n                configurable: true,\n            });\n        }\n    }\n    return file;\n}\n/**\n * @param addPathProp `DirEntry.prop` is deprecated, this option is for backward\n * compatibility.\n */\nexport function makeTree(dir, entries, addPathProp = false) {\n    const list = entries.map(entry => ({\n        ...entry,\n        paths: split(entry.relativePath),\n    }));\n    const nodes = (function walk(list, store) {\n        // Order the entries first by kind, then by names alphabetically.\n        list = [\n            ...orderBy(list.filter(e => e.kind === \"directory\"), e => e.name, \"asc\"),\n            ...orderBy(list.filter(e => e.kind === \"file\"), e => e.name, \"asc\"),\n        ];\n        const nodes = [];\n        for (const entry of list) {\n            if (entry.kind === \"directory\") {\n                const paths = entry.paths;\n                const childEntries = store.filter(e => startsWith(e.paths, paths));\n                const directChildren = childEntries\n                    .filter(e => e.paths.length === paths.length + 1);\n                if (directChildren.length) {\n                    const indirectChildren = childEntries\n                        .filter(e => !directChildren.includes(e));\n                    const _entry = {\n                        ...omit(entry, [\"paths\"]),\n                        children: walk(directChildren, indirectChildren),\n                    };\n                    addPathProp && fixDirEntry(_entry);\n                    nodes.push(_entry);\n                }\n                else {\n                    let _entry = {\n                        ...omit(entry, [\"paths\"]),\n                        children: [],\n                    };\n                    addPathProp && fixDirEntry(_entry);\n                    nodes.push(_entry);\n                }\n            }\n            else {\n                const _entry = {\n                    ...omit(entry, [\"paths\"]),\n                };\n                addPathProp && fixDirEntry(_entry);\n                nodes.push(_entry);\n            }\n        }\n        return nodes;\n    })(list.filter(entry => entry.paths.length === 1), list.filter(entry => entry.paths.length > 1));\n    let rootName;\n    if (typeof dir === \"object\") {\n        rootName = dir.name || \"(root)\";\n    }\n    else if (dir) {\n        rootName = basename(dir);\n        if (!rootName || rootName === \".\") {\n            rootName = \"(root)\";\n        }\n    }\n    else {\n        rootName = \"(root)\";\n    }\n    const rooEntry = {\n        name: rootName,\n        kind: \"directory\",\n        relativePath: \"\",\n        children: nodes,\n    };\n    if (typeof dir === \"object\") {\n        rooEntry.handle = dir;\n    }\n    addPathProp && fixDirEntry(rooEntry);\n    return rooEntry;\n}\n//# sourceMappingURL=util.js.map"],"names":[],"mappings":"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"}