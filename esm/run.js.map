{"version":3,"file":"run.js","sources":["../run.ts"],"sourcesContent":["var _a;\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport chan from \"./chan.ts\";\nimport deprecate from \"./deprecate.ts\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nconst isNode = typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\n// The worker consumer queue is nothing but a callback list, once a worker is available, the runner\n// pop a consumer and run the callback, which will retry gaining the worker and retry the task.\nconst workerConsumerQueue = [];\nasync function run(script, args = undefined, options = undefined) {\n    var _a, _b;\n    let _script = \"\";\n    if (typeof script === \"function\") {\n        let str = script.toString();\n        let start = str.lastIndexOf(\"(\");\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += 1;\n            const end = str.indexOf(\")\", start);\n            _script = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _script = script;\n    }\n    if (isNode && !/\\.[cm]?(js|ts|)x?$/.test(_script)) {\n        if (typeof Bun === \"object\") {\n            _script += \".ts\";\n        }\n        else {\n            _script += \".js\";\n        }\n    }\n    const msg = {\n        type: \"ffi\",\n        script: _script,\n        baseUrl: \"\",\n        fn: (options === null || options === void 0 ? void 0 : options.fn) || \"default\",\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    if (typeof Deno === \"object\") {\n        msg.baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode) {\n        msg.baseUrl = \"file://\" + process.cwd() + \"/\";\n    }\n    else if (typeof location === \"object\") {\n        msg.baseUrl = location.href;\n    }\n    if (options === null || options === void 0 ? void 0 : options.workerEntry) {\n        deprecate(\"options.workerEntry\", run, \"set `run.workerEntry` instead\");\n    }\n    let entry = (options === null || options === void 0 ? void 0 : options.workerEntry) || run.workerEntry;\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let poolRecord;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(() => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        if (resolver) {\n            resolver.reject(err);\n        }\n        else {\n            error = err;\n        }\n        terminate();\n    }, options.timeout) : null;\n    const handleMessage = (msg) => {\n        var _a;\n        if (msg && typeof msg === \"object\" && typeof msg.type === \"string\") {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"error\") {\n                return handleError(msg.error);\n            }\n            else if (msg.type === \"return\") {\n                if (options === null || options === void 0 ? void 0 : options.keepAlive) {\n                    // Release before resolve.\n                    release === null || release === void 0 ? void 0 : release();\n                    if (workerConsumerQueue.length) {\n                        // Queued consumer now has chance to gain the worker.\n                        (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n                    }\n                }\n                else {\n                    terminate();\n                }\n                if (resolver) {\n                    resolver.resolve(msg.value);\n                }\n                else {\n                    result = { value: msg.value };\n                }\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (msg.type === \"yield\") {\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({ type: \"return\", value: msg.value });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.push(msg.value);\n                }\n            }\n        }\n    };\n    const handleError = (err) => {\n        timeout && clearTimeout(timeout);\n        if (resolver) {\n            resolver.reject(err);\n        }\n        else {\n            error = err;\n        }\n        if (channel) {\n            channel.close(err);\n        }\n    };\n    const handleExit = () => {\n        var _a;\n        timeout && clearTimeout(timeout);\n        if (poolRecord) {\n            // Clean the pool before resolve.\n            workerPool = workerPool.filter(record => record !== poolRecord);\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        if (resolver) {\n            resolver.resolve(void 0);\n        }\n        else if (!error && !result) {\n            result = { value: void 0 };\n        }\n        if (channel) {\n            channel.close();\n        }\n    };\n    if (isNode) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            const _dirname = path.dirname(_filename);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules (if it exists).\n                entry = \"./node_modules/@ayonli/jsext/bundle/worker.mjs\";\n            }\n            else if ([\n                path.join(\"jsext\", \"cjs\"),\n                path.join(\"jsext\", \"esm\"),\n                path.join(\"jsext\", \"bundle\")\n            ].some(path => _dirname.endsWith(path))) { // compiled\n                entry = path.join(path.dirname(_dirname), \"bundle\", \"worker.mjs\");\n            }\n            else {\n                entry = path.join(_dirname, \"worker.mjs\");\n            }\n        }\n        if ((options === null || options === void 0 ? void 0 : options.adapter) === \"child_process\") {\n            let worker;\n            let ok = true;\n            poolRecord = workerPool.find(item => {\n                return item.adapter === \"child_process\" && !item.busy;\n            });\n            if (poolRecord) {\n                worker = poolRecord.worker;\n                workerId = poolRecord.workerId;\n                poolRecord.busy = true;\n            }\n            else if (workerPool.length < run.maxWorkers) {\n                const { fork } = await import(\"child_process\");\n                const isPrior14 = parseInt(process.version.slice(1)) < 14;\n                worker = fork(entry, {\n                    stdio: \"inherit\",\n                    serialization: isPrior14 ? \"advanced\" : \"json\",\n                });\n                workerId = worker.pid;\n                ok = await new Promise((resolve) => {\n                    worker.once(\"exit\", () => {\n                        if (error) {\n                            // The child process took too long to start and cause timeout error.\n                            resolve(false);\n                        }\n                    });\n                    worker.once(\"message\", () => {\n                        worker.removeAllListeners(\"exit\");\n                        resolve(true);\n                    });\n                });\n                // Fill the worker pool regardless the current call should keep-alive or not,\n                // this will make sure that the total number of workers will not exceed the\n                // `run.maxWorkers`. If the the call doesn't keep-alive the worker, it will be\n                // cleaned after the call.\n                ok && workerPool.push(poolRecord = {\n                    workerId,\n                    worker,\n                    adapter: \"child_process\",\n                    busy: true,\n                });\n            }\n            else {\n                // Put the current call in the consumer queue if there are no workers available,\n                // once an existing call finishes, the queue will pop the its head consumer and\n                // retry.\n                return new Promise((resolve) => {\n                    workerConsumerQueue.push(resolve);\n                }).then(() => run(_script, args, options));\n            }\n            release = () => {\n                // Remove the event listener so that later calls will not mess up.\n                worker.off(\"message\", handleMessage);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (ok) {\n                worker.send(msg);\n                worker.on(\"message\", handleMessage);\n                worker.once(\"error\", handleError);\n                worker.once(\"exit\", handleExit);\n            }\n        }\n        else {\n            let worker;\n            let ok = true;\n            poolRecord = workerPool.find(item => {\n                return item.adapter === \"worker_threads\" && !item.busy;\n            });\n            if (poolRecord) {\n                worker = poolRecord.worker;\n                workerId = poolRecord.workerId;\n                poolRecord.busy = true;\n            }\n            else if (workerPool.length < run.maxWorkers) {\n                const { Worker } = await import(\"worker_threads\");\n                worker = new Worker(entry);\n                // `threadId` may not exist in Bun.\n                workerId = (_a = worker.threadId) !== null && _a !== void 0 ? _a : workerIdCounter.next().value;\n                ok = await new Promise((resolve) => {\n                    worker.once(\"exit\", () => {\n                        if (error) {\n                            // The child process took too long to start and cause timeout error.\n                            resolve(false);\n                        }\n                    });\n                    worker.once(\"online\", () => {\n                        worker.removeAllListeners(\"exit\");\n                        resolve(true);\n                    });\n                });\n                ok && workerPool.push(poolRecord = {\n                    workerId,\n                    worker,\n                    adapter: \"worker_threads\",\n                    busy: true,\n                });\n            }\n            else {\n                return new Promise((resolve) => {\n                    workerConsumerQueue.push(resolve);\n                }).then(() => run(_script, args, options));\n            }\n            release = () => {\n                worker.off(\"message\", handleMessage);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (ok) {\n                worker.postMessage(msg);\n                worker.on(\"message\", handleMessage);\n                worker.once(\"error\", handleError);\n                worker.once(\"messageerror\", handleError);\n                worker.once(\"exit\", handleExit);\n            }\n        }\n    }\n    else {\n        let worker;\n        poolRecord = workerPool.find(item => {\n            return item.adapter === \"worker_threads\" && !item.busy;\n        });\n        if (poolRecord) {\n            worker = poolRecord.worker;\n            workerId = poolRecord.workerId;\n            poolRecord.busy = true;\n        }\n        else if (workerPool.length < run.maxWorkers) {\n            let url;\n            if (typeof Deno === \"object\") {\n                // Deno can load the module regardless of MINE type.\n                if (entry) {\n                    url = entry;\n                }\n                else if (import.meta[\"main\"]) {\n                    // code is bundled, try the remote URL\n                    url = \"https://ayonli.github.io/jsext/bundle/worker-web.mjs\";\n                }\n                else {\n                    url = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker-web.mjs\"\n                    ].join(\"/\");\n                }\n            }\n            else {\n                const _url = entry || \"https://ayonli.github.io/jsext/bundle/worker-web.mjs\";\n                const res = await fetch(_url);\n                let blob;\n                if ((_b = res.headers.get(\"content-type\")) === null || _b === void 0 ? void 0 : _b.includes(\"/javascript\")) {\n                    blob = await res.blob();\n                }\n                else {\n                    const buf = await res.arrayBuffer();\n                    blob = new Blob([new Uint8Array(buf)], {\n                        type: \"application/javascript\",\n                    });\n                }\n                url = URL.createObjectURL(blob);\n            }\n            worker = new Worker(url, { type: \"module\" });\n            workerId = workerIdCounter.next().value;\n            workerPool.push(poolRecord = {\n                workerId,\n                worker,\n                adapter: \"worker_threads\",\n                busy: true,\n            });\n        }\n        else {\n            return new Promise((resolve) => {\n                workerConsumerQueue.push(resolve);\n            }).then(() => run(_script, args, options));\n        }\n        release = () => {\n            worker.onmessage = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = async () => {\n            await Promise.resolve(worker.terminate());\n            handleExit();\n        };\n        worker.postMessage(msg);\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => handleMessage(ev.error || new Error(ev.message));\n        worker.onmessageerror = () => {\n            handleError(new Error(\"unable to deserialize the message\"));\n        };\n    }\n    return {\n        workerId,\n        async abort() {\n            timeout && clearTimeout(timeout);\n            await terminate();\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n(function (run) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     */\n    run.maxWorkers = 16;\n})(run || (run = {}));\nexport default run;\n/**\n * Creates a remote module wrapper whose functions are run in another thread.\n *\n * This function uses `run()` under the hood, and the remote function must be async.\n *\n * @example\n * ```ts\n * const mod = link(() => import(\"./job-example.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * const mod = link(() => import(\"./job-example.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n */\nexport function link(mod, options = {}) {\n    return new Proxy(Object.create(null), {\n        get: (_, prop) => {\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    let job;\n                    let iter;\n                    return new ThenableAsyncGenerator({\n                        async next() {\n                            var _a;\n                            job !== null && job !== void 0 ? job : (job = await run(mod, args, {\n                                ...options,\n                                fn: prop,\n                                keepAlive: (_a = options.keepAlive) !== null && _a !== void 0 ? _a : true,\n                            }));\n                            iter !== null && iter !== void 0 ? iter : (iter = job.iterate()[Symbol.asyncIterator]());\n                            let { done = false, value } = await iter.next();\n                            if (done) {\n                                // HACK: this will set the internal result of ThenableAsyncGenerator\n                                // to the result of the job.\n                                value = await job.result();\n                            }\n                            return Promise.resolve({ done, value });\n                        },\n                        async then(onfulfilled, onrejected) {\n                            job !== null && job !== void 0 ? job : (job = await run(mod, args, {\n                                ...options,\n                                fn: prop,\n                            }));\n                            return job.result().then(onfulfilled, onrejected);\n                        },\n                    });\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n//# sourceMappingURL=run.js.map"],"names":[],"mappings":"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"}