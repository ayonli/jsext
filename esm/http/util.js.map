{"version":3,"file":"util.js","sources":["../../http/util.ts"],"sourcesContent":["/**\n * Utility functions for handling HTTP related tasks, such as parsing headers.\n * @module\n * @experimental\n */\n/**\n * Parses the `Accept`, `Accept-Encoding` and `Accept-Language` headers.\n *\n * @example\n * ```ts\n * import { parseAccepts } from \"@ayonli/jsext/http\";\n *\n * const accepts = parseAccepts(\"text/html,application/xhtml+xml;q=0.9\");\n * console.log(accepts);\n * // [\n * //     { value: \"text/html\", weight: 1 },\n * //     { value: \"application/xhtml+xml\", weight: 0.9 }\n * // ]\n *\n * const acceptEncodings = parseAccepts(\"gzip, deflate, br;q=0.8\");\n * console.log(acceptEncodings);\n * // [\n * //     { value: \"gzip\", weight: 1 },\n * //     { value: \"deflate\", weight: 1 },\n * //     { value: \"br\", weight: 0.8 }\n * // ]\n *\n * const acceptLanguages = parseAccepts(\"en-US,en;q=0.9\");\n * console.log(acceptLanguages);\n * // [\n * //     { value: \"en-US\", weight: 1 },\n * //     { value: \"en\", weight: 0.9 }\n * // ]\n * ```\n */\nexport function parseAccepts(str) {\n    return str.split(\",\").map((type) => {\n        const [value, weight] = type.split(\";q=\");\n        return {\n            type: value.trim(),\n            weight: weight ? parseFloat(weight) : 1,\n        };\n    }).sort((a, b) => b.weight - a.weight);\n}\n/**\n * Parses the `Content-Type` header.\n *\n * @example\n * ```ts\n * import { parseContentType } from \"@ayonli/jsext/http\";\n *\n * const type = parseContentType(\"text/html; charset=utf-8\");\n * console.log(type);\n * // { type: \"text/html\", charset: \"utf-8\" }\n *\n * const type2 = parseContentType(\"multipart/form-data; boundary=----WebKitFormBoundaryzjK4sVZ2QeZvz5zB\");\n * console.log(type2);\n * // { type: \"multipart/form-data\", boundary: \"----WebKitFormBoundaryzjK4sVZ2QeZvz5zB\" }\n * ```\n */\nexport function parseContentType(str) {\n    const [type, ...params] = str.split(\";\").map((part) => part.trim());\n    if (!(type === null || type === void 0 ? void 0 : type.includes(\"/\"))) {\n        throw new TypeError(\"Invalid Content-Type header\");\n    }\n    const parsed = { type: type };\n    for (const param of params) {\n        if (param) {\n            const [key, value] = param.split(\"=\");\n            if (key === \"charset\") {\n                parsed.charset = value !== null && value !== void 0 ? value : \"\";\n            }\n            else if (key === \"boundary\") {\n                parsed.boundary = value !== null && value !== void 0 ? value : \"\";\n            }\n        }\n    }\n    return parsed;\n}\n/**\n * Parses the `Set-Cookie` header.\n *\n * @example\n * ```ts\n * import { parseCookie } from \"@ayonli/jsext/http\";\n *\n * const cookie = parseCookie(\"foo=bar; Domain=example.com; Path=/; Expires=Wed, 09 Jun 2021 10:18:14 GMT; HttpOnly; Secure; SameSite=Strict\");\n * console.log(cookie);\n * // {\n * //     name: \"foo\",\n * //     value: \"bar\",\n * //     domain: \"example.com\",\n * //     path: \"/\",\n * //     expires: Wed Jun 09 2021 10:18:14 GMT+0000 (Coordinated Universal Time),\n * //     httpOnly: true,\n * //     secure: true,\n * //     sameSite: \"Strict\"\n * // }\n * ```\n */\nexport function parseCookie(str) {\n    const [nameValue, ...params] = str.split(\";\").map((part) => part.trim());\n    if (!nameValue || !nameValue.includes(\"=\")) {\n        throw new TypeError(\"Invalid Set-Cookie header\");\n    }\n    const [name, value] = nameValue.split(\"=\");\n    const cookie = { name: name, value: value };\n    for (const param of params) {\n        if (param) {\n            const [key, value = \"\"] = param.split(\"=\");\n            if (key === \"Domain\") {\n                cookie.domain = value;\n            }\n            else if (key === \"Expires\") {\n                cookie.expires = new Date(value);\n            }\n            else if (key === \"Max-Age\") {\n                cookie.maxAge = parseInt(value);\n            }\n            else if (key === \"HttpOnly\") {\n                cookie.httpOnly = true;\n            }\n            else if (key === \"Secure\") {\n                cookie.secure = true;\n            }\n            else if (key === \"Path\") {\n                cookie.path = value;\n            }\n            else if (key === \"SameSite\") {\n                cookie.sameSite = value;\n            }\n        }\n    }\n    return cookie;\n}\n/**\n * Converts a {@link Cookie} object to a string.\n *\n * @example\n * ```ts\n * import { stringifyCookie } from \"@ayonli/jsext/http\";\n *\n * const cookie = stringifyCookie({\n *     name: \"foo\",\n *     value: \"bar\",\n *     domain: \"example.com\",\n *     path: \"/\",\n *     expires: new Date(\"2021-06-09T10:18:14Z\"),\n *     httpOnly: true,\n *     secure: true,\n *     sameSite: \"Strict\"\n * });\n * console.log(cookie);\n * // foo=bar; Domain=example.com; Path=/; Expires=Wed, 09 Jun 2021 10:18:14 GMT; HttpOnly; Secure; SameSite=Strict\n */\nexport function stringifyCookie(cookie) {\n    let str = `${cookie.name}=${cookie.value}`;\n    if (cookie.domain)\n        str += `; Domain=${cookie.domain}`;\n    if (cookie.path)\n        str += `; Path=${cookie.path}`;\n    if (cookie.expires)\n        str += `; Expires=${cookie.expires.toUTCString()}`;\n    if (cookie.maxAge)\n        str += `; Max-Age=${cookie.maxAge}`;\n    if (cookie.httpOnly)\n        str += \"; HttpOnly\";\n    if (cookie.secure)\n        str += \"; Secure\";\n    if (cookie.sameSite)\n        str += `; SameSite=${cookie.sameSite}`;\n    return str;\n}\n/**\n * Parses the `Range` header.\n *\n * @example\n * ```ts\n * import { parseRange } from \"@ayonli/jsext/http\";\n *\n * const range = parseRange(\"bytes=0-499\");\n * console.log(range);\n * // { unit: \"bytes\", ranges: [{ start: 0, end: 499 }] }\n *\n * const range2 = parseRange(\"bytes=0-499,1000-1499\");\n * console.log(range2);\n * // { unit: \"bytes\", ranges: [{ start: 0, end: 499 }, { start: 1000, end: 1499 }] }\n *\n * const range3 = parseRange(\"bytes=2000-\");\n * console.log(range3);\n * // { unit: \"bytes\", ranges: [{ start: 2000 }] }\n *\n * const range4 = parseRange(\"bytes=-500\");\n * console.log(range4);\n * // { unit: \"bytes\", ranges: [], suffix: 500 }\n * ```\n */\nexport function parseRange(str) {\n    if (!str.includes(\"=\")) {\n        throw new TypeError(\"Invalid Range header\");\n    }\n    const [unit, ranges] = str.split(\"=\").map((part) => part.trim());\n    const parsed = { unit: unit, ranges: [] };\n    for (const range of ranges.split(\",\")) {\n        if (!range || !range.includes(\"-\"))\n            continue;\n        const [start, end] = range.split(\"-\").map((part) => part.trim());\n        if (!start && !end) {\n            continue;\n        }\n        else if (!start) {\n            parsed.suffix = parseInt(end);\n        }\n        else if (!end) {\n            parsed.ranges.push({ start: parseInt(start) });\n        }\n        else {\n            parsed.ranges.push({ start: parseInt(start), end: parseInt(end) });\n        }\n    }\n    if ((!parsed.ranges.length && !parsed.suffix) ||\n        parsed.ranges.some((range) => range.start < 0 || (range.end && range.end <= range.start))) {\n        throw new TypeError(\"Invalid Range header\");\n    }\n    return parsed;\n}\n/**\n * Checks if the value from the `If-Match` header matches the given ETag.\n *\n * NOTE: Weak tags cannot be matched and will return `false`.\n *\n * @example\n * ```ts\n * import { etag, ifMatch } from \"@ayonli/jsext/http\";\n *\n * const _etag = await etag(\"Hello, World!\");\n * const match = ifMatch(\"d-3/1gIbsr1bCvZ2KQgJ7DpTGR3YH\", _etag);\n * console.log(match); // true\n * ```\n */\nexport function ifMatch(value, etag) {\n    // Weak tags cannot be matched and return false.\n    if (!value || etag.startsWith(\"W/\")) {\n        return false;\n    }\n    if (value.trim() === \"*\") {\n        return true;\n    }\n    const tags = value.split(/\\s*,\\s*/);\n    return tags.includes(etag);\n}\n/**\n * Checks if the value from the `If-None-Match` header matches the given ETag.\n *\n * @example\n * ```ts\n * import { etag, ifNoneMatch } from \"@ayonli/jsext/http\";\n *\n * const _etag = await etag(\"Hello, World!\");\n * const match = ifNoneMatch(\"d-3/1gIbsr1bCvZ2KQgJ7DpTGR3YH\", _etag);\n * console.log(match); // false\n * ```\n */\nexport function ifNoneMatch(value, etag) {\n    if (!value) {\n        return true;\n    }\n    if (value.trim() === \"*\") {\n        return false;\n    }\n    const tags = value.split(/\\s*,\\s*/).map((tag) => tag.startsWith(\"W/\") ? tag.slice(2) : tag);\n    return !tags.includes(etag);\n}\n/**\n * Parses the `Authorization` header with the `Basic` scheme.\n *\n * @example\n * ```ts\n * import { parseBasicAuth } from \"@ayonli/jsext/http\";\n *\n * const auth = parseBasicAuth(\"Basic cm9vdDpwYSQkdzByZA==\");\n * console.log(auth);\n * // { username: \"root\", password: \"pa$$w0rd\" }\n * ```\n */\nexport function parseBasicAuth(str) {\n    const parts = str.split(\" \");\n    const scheme = parts[0].toLowerCase();\n    const credentials = parts.slice(1).join(\" \");\n    if (!scheme || !credentials) {\n        throw new TypeError(\"Invalid Authorization header\");\n    }\n    else if (scheme !== \"basic\") {\n        throw new TypeError(\"Authorization scheme is not 'Basic'\");\n    }\n    else {\n        const [username, password] = atob(credentials).split(\":\");\n        return { username: username, password: password };\n    }\n}\n/**\n * Performs basic authentication verification for the request. When passed, this\n * function returns nothing (`undefined`), otherwise it returns a `Response`\n * with status `401 Unauthorized`, which should be responded to the client.\n *\n * @example\n * ```ts\n * import { verifyBasicAuth, type BasicAuthorization } from \"@ayonli/jsext/http\";\n *\n * const users = new Map([\n *    [\"root\", \"pa$$w0rd\"]\n * ]);\n *\n * async function verify(auth: BasicAuthorization) {\n *     const password = users.get(auth.username);\n *     return !!password && password === auth.password;\n * }\n *\n * export default {\n *     async fetch(req) {\n *         const res = await verifyBasicAuth(req, verify);\n *\n *         if (res) {\n *             return res;\n *         }\n *\n *         // continue with the request\n *     },\n * };\n * ```\n */\nexport async function verifyBasicAuth(req, verify) {\n    const auth = req.headers.get(\"Authorization\");\n    if (auth === null || auth === void 0 ? void 0 : auth.startsWith(\"Basic \")) {\n        try {\n            const credentials = parseBasicAuth(auth);\n            const ok = await verify(credentials);\n            if (ok) {\n                return;\n            }\n        }\n        catch (_a) { }\n    }\n    const { host } = new URL(req.url);\n    return new Response(\"Unauthorized\", {\n        status: 401,\n        headers: {\n            \"WWW-Authenticate\": `Basic realm=\"${host}\"`,\n        },\n    });\n}\n//# sourceMappingURL=util.js.map"],"names":[],"mappings":"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"}