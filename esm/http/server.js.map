{"version":3,"file":"server.js","sources":["../../http/server.ts"],"sourcesContent":["var _a, _b, _c, _d, _e;\nimport runtime from \"../runtime.ts\";\nimport { until } from \"../async.ts\";\nconst _hostname = Symbol.for(\"hostname\");\nconst _port = Symbol.for(\"port\");\nconst _http = Symbol.for(\"http\");\nconst _ws = Symbol.for(\"ws\");\nconst _handler = Symbol.for(\"handler\");\nconst _controller = Symbol.for(\"controller\");\n/**\n * A unified HTTP server interface.\n */\nexport class Server {\n    constructor(impl, options = {}) {\n        var _f;\n        this[_a] = \"\";\n        this[_b] = 0;\n        this[_c] = null;\n        this[_d] = null;\n        this[_e] = null;\n        this.type = (_f = options.type) !== null && _f !== void 0 ? _f : \"classic\";\n        this[_http] = impl().then(({ http, ws, hostname, port, fetch, controller }) => {\n            this[_ws] = ws;\n            this[_hostname] = hostname;\n            this[_port] = port;\n            this[_handler] = fetch;\n            this[_controller] = controller;\n            return http;\n        });\n        const _this = this;\n        const { identity } = runtime();\n        if (identity === \"cloudflare-worker\") {\n            if (this.type === \"module\") {\n                this.fetch = async (req, bindings, ctx) => {\n                    var _f;\n                    if (!_this[_handler]) {\n                        return new Response(\"Service Unavailable\", {\n                            status: 503,\n                            statusText: \"Service Unavailable\",\n                        });\n                    }\n                    const { EventEndpoint } = await import(\"../sse.ts\");\n                    const ws = _this[_ws];\n                    return _this[_handler](req, {\n                        remoteAddress: null,\n                        createEventEndpoint: () => {\n                            const events = new EventEndpoint(req);\n                            return { events, response: events.response };\n                        },\n                        upgradeWebSocket: () => ws.upgrade(req),\n                        waitUntil: (_f = ctx.waitUntil) === null || _f === void 0 ? void 0 : _f.bind(ctx),\n                        bindings,\n                    });\n                };\n            }\n            else { // classic\n                // @ts-ignore\n                addEventListener(\"fetch\", (event) => {\n                    if (!_this[_handler]) {\n                        event.respondWith(new Response(\"Service Unavailable\", {\n                            status: 503,\n                            statusText: \"Service Unavailable\",\n                        }));\n                        return;\n                    }\n                    const handle = _this[_handler];\n                    const { request: req } = event;\n                    const res = import(\"../sse.ts\").then(({ EventEndpoint }) => {\n                        const ws = _this[_ws];\n                        return handle(req, {\n                            remoteAddress: null,\n                            createEventEndpoint: () => {\n                                const events = new EventEndpoint(req);\n                                return { events, response: events.response };\n                            },\n                            upgradeWebSocket: () => ws.upgrade(req),\n                            waitUntil: event.waitUntil.bind(event),\n                        });\n                    });\n                    event.respondWith(res);\n                });\n            }\n        }\n        else if (identity === \"deno\") {\n            if (this.type === \"classic\") {\n                delete this.fetch;\n            }\n            else {\n                this.fetch = async (req) => {\n                    if (!_this[_handler]) {\n                        return new Response(\"Service Unavailable\", {\n                            status: 503,\n                            statusText: \"Service Unavailable\",\n                        });\n                    }\n                    const { EventEndpoint } = await import(\"../sse.ts\");\n                    const ws = _this[_ws];\n                    return _this[_handler](req, {\n                        remoteAddress: null,\n                        createEventEndpoint: () => {\n                            const events = new EventEndpoint(req);\n                            return { events, response: events.response };\n                        },\n                        upgradeWebSocket: () => ws.upgrade(req),\n                    });\n                };\n            }\n        }\n    }\n    /**\n     * The hostname of which the server is listening on, only available after\n     * the server is ready.\n     */\n    get hostname() {\n        return this[_hostname] || \"localhost\";\n    }\n    /**\n     * The port of which the server is listening on, only available after the\n     * server is ready.\n     */\n    get port() {\n        if (this[_port]) {\n            return this[_port];\n        }\n        else if (runtime().identity === \"cloudflare-worker\") {\n            return 8787;\n        }\n        else if (runtime().identity === \"deno\") {\n            return 8000;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * A promise that resolves when the server is ready to accept connections.\n     */\n    get ready() {\n        return this[_http].then(() => this);\n    }\n    /**\n     * Closes the server and stops it from accepting new connections. By default,\n     * this function will wait until all active connections to close before\n     * shutting down the server. However, we can force the server to close all\n     * active connections and shutdown immediately by setting the `force`\n     * parameter to `true`.\n     *\n     * NOTE: In Node.js, the `force` parameter is only available for HTTP\n     * servers, it has no effect on HTTP2 servers.\n     */\n    async close(force = false) {\n        const server = await this[_http];\n        if (!server)\n            return;\n        if (typeof server.stop === \"function\") {\n            const _server = server;\n            _server.stop(force);\n            if (!force) {\n                await until(() => !_server.pendingRequests && !_server.pendingWebSockets);\n            }\n        }\n        else if (typeof server.shutdown === \"function\") {\n            const _server = server;\n            if (force && this[_controller]) {\n                this[_controller].abort();\n            }\n            else {\n                _server.shutdown();\n            }\n            await _server.finished;\n        }\n        else if (typeof server.close === \"function\") {\n            const _server = server;\n            await new Promise((resolve, reject) => {\n                _server.close((err) => err ? reject(err) : resolve());\n                if (force && \"closeAllConnections\" in _server) {\n                    _server.closeAllConnections();\n                }\n            });\n        }\n    }\n    /**\n     * Opposite of `unref()`, calling `ref()` on a previously `unref`ed server\n     * will _not_ let the program exit if it's the only server left (the default\n     * behavior). If the server is `ref`ed calling `ref()` again will have no\n     * effect.\n     */\n    ref() {\n        this[_http].then(server => { var _f; return (_f = server === null || server === void 0 ? void 0 : server.ref) === null || _f === void 0 ? void 0 : _f.call(server); });\n    }\n    /**\n     * Calling `unref()` on a server will allow the program to exit if this is\n     * the only active server in the event system. If the server is already\n     * `unref`ed calling`unref()` again will have no effect.\n     */\n    unref() {\n        this[_http].then(server => { var _f; return (_f = server === null || server === void 0 ? void 0 : server.unref) === null || _f === void 0 ? void 0 : _f.call(server); });\n    }\n}\n_a = _hostname, _b = _port, _c = _ws, _d = _handler, _e = _controller;\n//# sourceMappingURL=server.js.map"],"names":[],"mappings":"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"}