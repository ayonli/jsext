{"version":3,"file":"base.js","sources":["../../ws/base.ts"],"sourcesContent":["import { asyncTask } from \"../async.ts\";\nimport chan from \"../chan.ts\";\nimport { fromErrorEvent } from \"../error.ts\";\nconst _source = Symbol.for(\"source\");\nconst _readyTask = Symbol.for(\"readyTask\");\n/**\n * This class represents a WebSocket connection on the server side.\n * Normally we don't create instances of this class directly, but rather use\n * the {@link WebSocketServer} to handle WebSocket connections, which will\n * create the instance for us.\n *\n * **Events:**\n *\n * - `error` - Dispatched when an error occurs, such as network failure. After\n *   this event is dispatched, the connection will be closed and the `close`\n *   event will be dispatched.\n * - `close` - Dispatched when the connection is closed. If the connection is\n *   closed due to some error, the `error` event will be dispatched before this\n *   event, and the close event will have the `wasClean` set to `false`, and the\n *   `reason` property contains the error message, if any.\n * - `message` - Dispatched when a message is received.\n *\n * There is no `open` event, because when an connection instance is created, the\n * connection may already be open. However, there is a `ready` promise that can\n * be used to ensure that the connection is ready before sending messages.\n */\nexport class WebSocketConnection extends EventTarget {\n    constructor(source) {\n        super();\n        this[_source] = source;\n        this[_readyTask] = asyncTask();\n        if (source.readyState === 1) {\n            this[_readyTask].resolve();\n        }\n        else if (typeof source.addEventListener === \"function\") {\n            source.addEventListener(\"open\", () => {\n                this[_readyTask].resolve();\n            });\n        }\n        else {\n            source.onopen = () => {\n                this[_readyTask].resolve();\n            };\n        }\n    }\n    /**\n     * A promise that resolves when the connection is ready to send and receive\n     * messages.\n     */\n    get ready() {\n        return this[_readyTask].then(() => this);\n    }\n    /**\n     * The current state of the WebSocket connection.\n     */\n    get readyState() {\n        return this[_source].readyState;\n    }\n    /**\n     * Sends data to the WebSocket client.\n     */\n    send(data) {\n        this[_source].send(data);\n    }\n    /**\n     * Closes the WebSocket connection.\n     */\n    close(code, reason) {\n        this[_source].close(code, reason);\n    }\n    addEventListener(event, listener, options) {\n        return super.addEventListener(event, listener, options);\n    }\n    async *[Symbol.asyncIterator]() {\n        const channel = chan(Infinity);\n        this.addEventListener(\"message\", ev => {\n            channel.send(ev.data);\n        });\n        this.addEventListener(\"close\", ev => {\n            ev.wasClean && channel.close();\n        });\n        this.addEventListener(\"error\", ev => {\n            channel.close(fromErrorEvent(ev));\n        });\n        for await (const data of channel) {\n            yield data;\n        }\n    }\n}\n//# sourceMappingURL=base.js.map"],"names":[],"mappings":"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"}