{"version":3,"file":"cli.js","sources":["../cli.ts"],"sourcesContent":["/**\n * Useful utility functions for interacting with the terminal.\n *\n * NOTE: this module is not intended to be used in the browser.\n * @module\n */\nimport { text } from \"./bytes.ts\";\nimport { interop } from \"./module.ts\";\nimport { PowerShellCommands } from \"./cli/constants.ts\";\nexport const PopularPlatforms = [\n    \"android\",\n    \"darwin\",\n    \"freebsd\",\n    \"linux\",\n    \"windows\",\n];\n/**\n * Returns a string identifying the operating system platform in which the\n * program is running.\n */\nexport function platform() {\n    if (typeof Deno === \"object\") {\n        if (PopularPlatforms.includes(Deno.build.os)) {\n            return Deno.build.os;\n        }\n        else {\n            return \"others\";\n        }\n    }\n    else if (typeof process === \"object\" && typeof process.platform === \"string\") {\n        if (process.platform === \"win32\") {\n            return \"windows\";\n        }\n        else if (PopularPlatforms.includes(process.platform)) {\n            return process.platform;\n        }\n        else {\n            return \"others\";\n        }\n    }\n    else if (typeof navigator === \"object\" && typeof navigator.userAgent === \"string\") {\n        if (navigator.userAgent.includes(\"Android\")) {\n            return \"android\";\n        }\n        else if (navigator.userAgent.includes(\"Macintosh\")) {\n            return \"darwin\";\n        }\n        else if (navigator.userAgent.includes(\"Windows\")) {\n            return \"windows\";\n        }\n        else if (navigator.userAgent.includes(\"Linux\")) {\n            return \"linux\";\n        }\n        else {\n            return \"others\";\n        }\n    }\n    else {\n        return \"others\";\n    }\n}\n/** Checks if the program is running in Windows Subsystem for Linux. */\nexport function isWSL() {\n    if (platform() !== \"linux\")\n        return false;\n    if (typeof Deno === \"object\") {\n        return Deno.osRelease().includes(\"microsoft-standard-WSL\");\n    }\n    else if (typeof process === \"object\" && typeof process.env === \"object\") {\n        return !!process.env[\"WSL_INTEROP\"];\n    }\n    return false;\n}\n/** Checks if the program is running in a TypeScript runtime. */\nexport function isTsRuntime() {\n    var _a;\n    if (typeof Deno === \"object\" || typeof Bun === \"object\") {\n        return true;\n    }\n    else if (typeof process !== \"object\") {\n        return false;\n    }\n    return process.execArgv.some(arg => /\\b(tsx|ts-node|vite|swc-node|tsimp)\\b/.test(arg))\n        || /\\.tsx?$/.test((_a = process.argv[1]) !== null && _a !== void 0 ? _a : \"\");\n}\nfunction parseValue(arg) {\n    let value = arg.trim();\n    if (value === \"true\") {\n        value = true;\n    }\n    else if (value === \"false\") {\n        value = false;\n    }\n    else if (/^\\d+(\\.\\d+)?$/.test(value)) {\n        value = Number(value);\n    }\n    return value;\n}\nfunction parseKeyValue(arg) {\n    let index = arg.indexOf(\"=\");\n    if (index === -1) {\n        return [arg, undefined];\n    }\n    else {\n        const key = arg.slice(0, index);\n        const value = arg.slice(index + 1);\n        return [key, parseValue(value)];\n    }\n}\n/**\n * Parses the given CLI arguments into an object.\n *\n * @example\n * ```ts\n * import { parseArgs } from \"@ayonli/jsext/cli\";\n *\n * const args = parseArgs([\n *     \"Bob\",\n *     \"--age\", \"30\",\n *     \"--married\",\n *     \"--wife=Alice\",\n *     \"--children\", \"Mia\",\n *     \"--children\", \"Ava\",\n *     \"-p\"\n * ], {\n *     shorthands: { \"p\": \"has-parents\" }\n * });\n *\n * console.log(args);\n * // {\n * //     _: \"Bob\",\n * //     age: 30,\n * //     married: true,\n * //     wife: \"Alice\",\n * //     children: [\"Mia\", \"Ava\"],\n * //     \"has-parents\": true\n * // }\n * ```\n */\nexport function parseArgs(args, options = {}) {\n    var _a;\n    const { shorthands = {} } = options;\n    const data = {};\n    let key = null;\n    const set = (key, value) => {\n        if (Array.isArray(data[key])) {\n            data[key].push(value);\n        }\n        else if (key in data) {\n            data[key] = [data[key], value];\n        }\n        else {\n            data[key] = value;\n        }\n    };\n    for (const arg of args) {\n        if (arg.startsWith(\"--\")) {\n            if (key) {\n                set(key, true);\n                key = null;\n            }\n            const [_key, value] = parseKeyValue(arg.slice(2));\n            if (value !== undefined) {\n                set(_key, value);\n            }\n            else {\n                key = arg.slice(2);\n            }\n        }\n        else if (arg.startsWith(\"-\")) {\n            if (key) {\n                set(key, true);\n                key = null;\n            }\n            const char = arg.slice(1);\n            key = (_a = shorthands[char]) !== null && _a !== void 0 ? _a : char;\n        }\n        else {\n            const value = parseValue(arg);\n            if (key) {\n                set(key, value);\n                key = null;\n            }\n            else {\n                set(\"_\", value);\n            }\n        }\n    }\n    if (key) {\n        set(key, true);\n    }\n    return data;\n}\n/**\n * Quotes a string to be used as a single argument to a shell command.\n */\nexport function quote(arg) {\n    if ((/[\"'\\s]/).test(arg)) {\n        if (platform() === \"windows\") {\n            return `\"` + arg.replace(/([\"\\\\$])/g, '\\\\$1') + `\"`;\n        }\n        else {\n            return `\"` + arg.replace(/([\"\\\\$`!])/g, '\\\\$1') + `\"`;\n        }\n    }\n    return String(arg).replace(/([A-Za-z]:)?([#!\"$&'()*,:;<=>?@[\\\\\\]^`{|}])/g, '$1\\\\$2');\n}\n/**\n * Executes a command in the terminal and returns the exit code and outputs.\n */\nexport async function run(cmd, args) {\n    var _a;\n    const isWindows = platform() === \"windows\";\n    const isWslPs = isWSL() && cmd.endsWith(\"powershell.exe\");\n    if (typeof Deno === \"object\") {\n        const { Buffer } = await import(\"node:buffer\");\n        // @ts-ignore\n        const { decode } = await interop(import(\"npm:iconv-lite\"), false);\n        const _cmd = isWindows && PowerShellCommands.includes(cmd)\n            ? new Deno.Command(\"powershell\", { args: [\"-c\", cmd, ...args.map(quote)] })\n            : new Deno.Command(cmd, { args });\n        const { code, stdout, stderr } = await _cmd.output();\n        return {\n            code,\n            stdout: isWindows || isWslPs ? decode(Buffer.from(stdout), \"cp936\") : text(stdout),\n            stderr: isWindows || isWslPs ? decode(Buffer.from(stderr), \"cp936\") : text(stderr),\n        };\n    }\n    else if (typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node)) {\n        const { spawn } = await import(\"child_process\");\n        const { decode } = await interop(import(\"iconv-lite\"), false);\n        const child = isWindows && PowerShellCommands.includes(cmd)\n            ? spawn(\"powershell\", [\"-c\", cmd, ...args.map(quote)])\n            : spawn(cmd, args);\n        const stdout = [];\n        const stderr = [];\n        child.stdout.on(\"data\", chunk => {\n            if (isWindows || isWslPs) {\n                stdout.push(decode(chunk, \"cp936\"));\n            }\n            else {\n                stdout.push(String(chunk));\n            }\n        });\n        child.stderr.on(\"data\", chunk => {\n            if (isWindows || isWslPs) {\n                stderr.push(decode(chunk, \"cp936\"));\n            }\n            else {\n                stderr.push(String(chunk));\n            }\n        });\n        const code = await new Promise((resolve, reject) => {\n            child.once(\"exit\", (code, signal) => {\n                if (code === null && signal) {\n                    resolve(1);\n                }\n                else {\n                    resolve(code !== null && code !== void 0 ? code : 0);\n                }\n            }).once(\"error\", reject);\n        });\n        return {\n            code,\n            stdout: stdout.join(\"\"),\n            stderr: stderr.join(\"\"),\n        };\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\n/**\n * Returns the path of the given command if it exists in the system,\n * otherwise returns `null`.\n */\nexport async function which(cmd) {\n    if (platform() === \"windows\") {\n        const { code, stdout } = await run(\"powershell\", [\n            \"-Command\",\n            `Get-Command -Name ${cmd} | Select-Object -ExpandProperty Source`\n        ]);\n        return code ? null : stdout.trim();\n    }\n    else {\n        const { code, stdout } = await run(\"which\", [cmd]);\n        return code ? null : stdout.trim();\n    }\n}\n/**\n * Runs PowerShell with the supplied arguments. This function can be called\n * within Windows Subsystem for Linux to directly interact with PowerShell.\n */\nexport async function powershell(...args) {\n    let command = \"powershell\";\n    if (isWSL()) {\n        command = \"/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/powershell.exe\";\n    }\n    return await run(command, [\n        \"-c\",\n        ...args\n    ]);\n}\n//# sourceMappingURL=cli.js.map"],"names":[],"mappings":"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"}