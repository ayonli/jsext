{"version":3,"file":"hash.js","sources":["../../workerd/hash.ts"],"sourcesContent":["import { text } from \"../bytes.ts\";\nimport { toArrayBuffer, sha1, sha256, sha512 } from \"../hash/web.ts\";\nexport { sha1, sha256, sha512 };\nexport async function md5(data, encoding = undefined) {\n    let buffer = await toArrayBuffer(data);\n    const hash = await crypto.subtle.digest(\"MD5\", buffer);\n    if (encoding === \"hex\") {\n        return text(new Uint8Array(hash), \"hex\");\n    }\n    else if (encoding === \"base64\") {\n        return text(new Uint8Array(hash), \"base64\");\n    }\n    else {\n        return hash;\n    }\n}\n//# sourceMappingURL=hash.js.map"],"names":[],"mappings":";;;;AAGO,eAAe,GAAG,CAAC,IAAI,EAAE,QAAQ,GAAG,SAAS,EAAE;AACtD,IAAI,IAAI,MAAM,GAAG,MAAM,aAAa,CAAC,IAAI,CAAC,CAAC;AAC3C,IAAI,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC3D,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;AAC5B,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AACjD,KAAK;AACL,SAAS,IAAI,QAAQ,KAAK,QAAQ,EAAE;AACpC,QAAQ,OAAO,IAAI,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpD,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;;;;"}