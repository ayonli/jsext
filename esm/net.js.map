{"version":3,"file":"net.js","sources":["../net.ts"],"sourcesContent":["/**\n * Functions for working with the network, such as connecting to a TCP server,\n * binding a UDP socket, etc.\n *\n * This module is designed to provide a unified interface to work with network\n * in Node.js, Deno, Bun (and Cloudflare Workers for limited support), based on\n * modern Web APIs. It does not work in the browser.\n *\n * NOTE: This module depends on the Web Streams API, in Node.js, it requires\n * Node.js v18.0 or above.\n * @module\n * @experimental\n */\nimport { asyncTask } from \"./async.ts\";\nimport { isBun, isDeno, isNode, isNodeLike } from \"./env.ts\";\nimport { throwUnsupportedRuntimeError } from \"./error.ts\";\nimport { TcpSocketStream, UdpSocket, UdpSocketStream, UnixSocketStream, } from \"./net/types.ts\";\nimport { getInternetIp } from \"./net/util.ts\";\nimport chan from \"./chan.ts\";\nexport { getInternetIp };\n/**\n * Returns the IP address of the current machine.\n *\n * NOTE: This function may return the IP address of the local network or the\n * public IP address, depending on the environment and network configuration.\n * If the public IP address is intended, use {@link getInternetIp} instead.\n */\nexport async function getMyIp() {\n    if (isNodeLike) {\n        const { createSocket } = await import(\"node:dgram\");\n        const socket = createSocket(\"udp4\");\n        return new Promise((resolve) => {\n            socket.connect(53, \"8.8.8.8\", () => {\n                const addr = socket.address();\n                socket.close();\n                resolve(addr.address);\n            });\n        });\n    }\n    else if (isDeno) {\n        const conn = await Deno.connect({\n            hostname: \"8.8.8.8\",\n            port: 53,\n        });\n        const addr = conn.localAddr;\n        conn.close();\n        return addr.hostname;\n    }\n    else if (typeof fetch === \"function\") {\n        try {\n            return await getInternetIp();\n        }\n        catch (_a) {\n            // ignore\n        }\n    }\n    throwUnsupportedRuntimeError();\n}\n/**\n * Returns a random port number that is available for listening.\n *\n * NOTE: This function is not available in the browser and worker runtimes such\n * as Cloudflare Workers.\n *\n * @param prefer The preferred port number to return if it is available,\n * otherwise a random port is returned.\n *\n * @param hostname The hostname to bind the port to. Default is \"0.0.0.0\", only\n * used when `prefer` is set and not `0`.\n */\nexport async function randomPort(prefer = undefined, hostname = undefined) {\n    hostname || (hostname = \"0.0.0.0\");\n    if (isDeno) {\n        try {\n            const listener = Deno.listen({\n                hostname,\n                port: prefer !== null && prefer !== void 0 ? prefer : 0,\n            });\n            const { port } = listener.addr;\n            listener.close();\n            return Promise.resolve(port);\n        }\n        catch (err) {\n            if (prefer) {\n                return randomPort(0);\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    else if (isBun) {\n        try {\n            const listener = Bun.listen({\n                hostname,\n                port: prefer !== null && prefer !== void 0 ? prefer : 0,\n                socket: {\n                    data: () => { },\n                },\n            });\n            const { port } = listener;\n            listener.stop(true);\n            return Promise.resolve(port);\n        }\n        catch (err) {\n            if (prefer) {\n                return randomPort(0);\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    else if (isNode) {\n        const { createServer, connect } = await import(\"node:net\");\n        if (prefer) {\n            // In Node.js listening on a port used by another process may work,\n            // so we don't use `listen` method to check if the port is available.\n            // Instead, we use the `connect` method to check if the port can be\n            // reached, if so, the port is open and we don't use it.\n            const isOpen = await new Promise((resolve, reject) => {\n                const conn = connect(prefer, hostname === \"0.0.0.0\" ? \"localhost\" : hostname);\n                conn.once(\"connect\", () => {\n                    conn.end();\n                    resolve(true);\n                }).once(\"error\", (err) => {\n                    if (err[\"code\"] === \"ECONNREFUSED\") {\n                        resolve(false);\n                    }\n                    else {\n                        reject(err);\n                    }\n                });\n            });\n            if (isOpen) {\n                return randomPort(0);\n            }\n            else {\n                return prefer;\n            }\n        }\n        else {\n            const server = createServer();\n            server.listen({ port: 0, exclusive: true });\n            const port = server.address().port;\n            return new Promise((resolve, reject) => {\n                server.close(err => err ? reject(err) : resolve(port));\n            });\n        }\n    }\n    else {\n        throwUnsupportedRuntimeError();\n    }\n}\nexport function connect(options) {\n    if (options.transport === \"udp\") {\n        return connectUdp(options);\n    }\n    else if (options.transport === \"unix\" || \"path\" in options) {\n        return connectUnix(options);\n    }\n    else {\n        return connectTcp(options);\n    }\n}\nasync function connectTcp(options) {\n    var _a;\n    const { tls = false, ..._options } = options;\n    if (isNode) {\n        const { createConnection } = await import(\"node:net\");\n        const { connect } = await import(\"node:tls\");\n        const _socket = tls ? connect({\n            ..._options,\n            rejectUnauthorized: false,\n        }) : createConnection({\n            host: options.hostname,\n            port: options.port,\n            localPort: 0,\n        });\n        const props = await nodeToSocket(_socket);\n        return new TcpSocketStream({\n            localAddress: {\n                hostname: _socket.localAddress || \"localhost\",\n                port: (_a = _socket.localPort) !== null && _a !== void 0 ? _a : 0,\n            },\n            remoteAddress: {\n                hostname: _socket.remoteAddress,\n                port: _socket.remotePort,\n            },\n            ...props,\n            setKeepAlive: _socket.setKeepAlive.bind(_socket),\n            setNoDelay: _socket.setNoDelay.bind(_socket),\n        });\n    }\n    else if (isDeno) {\n        const _socket = tls\n            ? await Deno.connectTls(_options)\n            : await Deno.connect(_options);\n        const { localAddr, remoteAddr } = _socket;\n        return new TcpSocketStream({\n            localAddress: {\n                hostname: localAddr.hostname,\n                port: localAddr.port,\n            },\n            remoteAddress: {\n                hostname: remoteAddr.hostname,\n                port: remoteAddr.port,\n            },\n            ...denoToSocket(_socket),\n            setKeepAlive: (keepAlive) => {\n                if (\"setKeepAlive\" in _socket) {\n                    _socket.setKeepAlive(keepAlive);\n                }\n            },\n            setNoDelay: (noDelay) => {\n                if (\"setNoDelay\" in _socket) {\n                    _socket.setNoDelay(noDelay);\n                }\n            },\n        });\n    }\n    else if (isBun) {\n        const ready = asyncTask();\n        const closed = asyncTask();\n        let readCtrl = null;\n        let writeCtrl = null;\n        const closeStreams = () => {\n            try {\n                _socket.terminate();\n            }\n            catch (_a) { }\n            try {\n                readCtrl === null || readCtrl === void 0 ? void 0 : readCtrl.close();\n            }\n            catch (_b) { }\n            try {\n                writeCtrl === null || writeCtrl === void 0 ? void 0 : writeCtrl.error(new TypeError(\"The stream is closed.\"));\n            }\n            catch (_c) { }\n        };\n        const readable = new ReadableStream({\n            start(controller) {\n                readCtrl = controller;\n            },\n            cancel(reason) {\n                reason ? closed.reject(reason) : closed.resolve();\n                closeStreams();\n            },\n        });\n        const writable = new WritableStream({\n            start(controller) {\n                writeCtrl = controller;\n            },\n            write(chunk) {\n                _socket.write(chunk);\n            },\n            close() {\n                writeCtrl.error(new TypeError(\"The stream is closed.\"));\n                _socket.shutdown();\n            },\n        });\n        const _socket = await Bun.connect({\n            ..._options,\n            tls,\n            socket: {\n                binaryType: \"uint8array\",\n                open() {\n                    ready.resolve();\n                },\n                data(_socket, data) {\n                    readCtrl.enqueue(data);\n                },\n                error(_socket, error) {\n                    try {\n                        readCtrl.error(error);\n                    }\n                    catch (_a) { }\n                    try {\n                        writeCtrl.error(error);\n                    }\n                    catch (_b) { }\n                    closed.reject(error);\n                },\n                close() {\n                    closeStreams();\n                    closed.resolve();\n                },\n            }\n        });\n        await ready;\n        return new TcpSocketStream({\n            localAddress: {\n                hostname: \"localhost\",\n                port: _socket.localPort,\n            },\n            remoteAddress: {\n                hostname: _socket.remoteAddress,\n                port: options.port,\n            },\n            readable,\n            writable,\n            closed,\n            close: closeStreams,\n            ref: () => _socket.ref(),\n            unref: () => _socket.unref(),\n            setKeepAlive: (keepAlive) => {\n                if (\"setKeepAlive\" in _socket) {\n                    _socket.setKeepAlive(keepAlive);\n                }\n            },\n            setNoDelay: (noDelay) => {\n                if (\"setNoDelay\" in _socket) {\n                    _socket.setNoDelay(noDelay);\n                }\n            },\n        });\n    }\n    else {\n        throwUnsupportedRuntimeError();\n    }\n}\nasync function connectUnix(options) {\n    const { path } = options;\n    if (isNode) {\n        const { createConnection } = await import(\"node:net\");\n        const _socket = createConnection({ path });\n        const props = await nodeToSocket(_socket);\n        return new UnixSocketStream(props);\n    }\n    else if (isDeno) {\n        const _socket = await Deno.connect({ transport: \"unix\", path });\n        return new UnixSocketStream(denoToSocket(_socket));\n    }\n    else if (isBun) {\n        const ready = asyncTask();\n        const closed = asyncTask();\n        let readCtrl = null;\n        let writeCtrl = null;\n        const closeStreams = () => {\n            try {\n                _socket.terminate();\n            }\n            catch (_a) { }\n            try {\n                readCtrl === null || readCtrl === void 0 ? void 0 : readCtrl.close();\n            }\n            catch (_b) { }\n            try {\n                writeCtrl === null || writeCtrl === void 0 ? void 0 : writeCtrl.error(new TypeError(\"The stream is closed.\"));\n            }\n            catch (_c) { }\n        };\n        const readable = new ReadableStream({\n            start(controller) {\n                readCtrl = controller;\n            },\n            cancel(reason) {\n                reason ? closed.reject(reason) : closed.resolve();\n                closeStreams();\n            },\n        });\n        const writable = new WritableStream({\n            start(controller) {\n                writeCtrl = controller;\n            },\n            write(chunk) {\n                _socket.write(chunk);\n            },\n            close() {\n                _socket.shutdown();\n            },\n        });\n        const _socket = await Bun.connect({\n            unix: path,\n            socket: {\n                binaryType: \"uint8array\",\n                open() {\n                    ready.resolve();\n                },\n                data(_socket, data) {\n                    readCtrl.enqueue(data);\n                },\n                error(_socket, error) {\n                    try {\n                        readCtrl.error(error);\n                    }\n                    catch (_a) { }\n                    try {\n                        writeCtrl.error(error);\n                    }\n                    catch (_b) { }\n                    closed.reject(error);\n                },\n                close() {\n                    closeStreams();\n                    closed.resolve();\n                },\n            }\n        });\n        await ready;\n        return new UnixSocketStream({\n            readable,\n            writable,\n            closed,\n            close: closeStreams,\n            ref: () => _socket.ref(),\n            unref: () => _socket.unref(),\n        });\n    }\n    else {\n        throwUnsupportedRuntimeError();\n    }\n}\nasync function nodeToSocket(socket) {\n    const ready = asyncTask();\n    const closed = asyncTask();\n    let readCtrl = null;\n    let writeCtrl = null;\n    const closeStreams = () => {\n        try {\n            socket.destroyed || socket.destroy();\n        }\n        catch (_a) { }\n        try {\n            readCtrl === null || readCtrl === void 0 ? void 0 : readCtrl.close();\n        }\n        catch (_b) { }\n        try {\n            writeCtrl === null || writeCtrl === void 0 ? void 0 : writeCtrl.error(new TypeError(\"The stream is closed.\"));\n        }\n        catch (_c) { }\n    };\n    const readable = new ReadableStream({\n        start(controller) {\n            readCtrl = controller;\n        },\n        cancel(reason) {\n            reason ? closed.reject(reason) : closed.resolve();\n            closeStreams();\n        },\n    });\n    const writable = new WritableStream({\n        start(controller) {\n            writeCtrl = controller;\n        },\n        write(chunk) {\n            return new Promise((resolve, reject) => {\n                socket.write(chunk, err => {\n                    err ? reject(err) : resolve();\n                });\n            });\n        },\n        close() {\n            return new Promise(resolve => {\n                socket.end(resolve);\n            });\n        },\n    });\n    socket.once(\"connect\", () => {\n        ready.resolve();\n    }).on(\"data\", (data) => {\n        readCtrl.enqueue(new Uint8Array(data.buffer, data.byteOffset, data.byteLength));\n    }).once(\"error\", (error) => {\n        try {\n            readCtrl.error(error);\n        }\n        catch (_a) { }\n        try {\n            writeCtrl.error(error);\n        }\n        catch (_b) { }\n        closed.reject(error);\n        ready.reject(error);\n    }).once(\"close\", (hasError) => {\n        if (!hasError) {\n            closeStreams();\n            closed.resolve();\n        }\n    });\n    await ready;\n    return {\n        readable,\n        writable,\n        closed,\n        close: () => void socket.destroy(),\n        ref: () => void socket.ref(),\n        unref: () => void socket.unref(),\n    };\n}\nfunction denoToSocket(socket) {\n    const closed = asyncTask();\n    let closeCalled = false;\n    let readCtrl = null;\n    let writeCtrl = null;\n    const closeStreams = () => {\n        try {\n            socket.close();\n        }\n        catch (_a) { }\n        try {\n            readCtrl === null || readCtrl === void 0 ? void 0 : readCtrl.close();\n        }\n        catch (_b) { }\n        try {\n            writeCtrl === null || writeCtrl === void 0 ? void 0 : writeCtrl.error(new TypeError(\"The stream is closed.\"));\n        }\n        catch (_c) { }\n    };\n    return {\n        readable: new ReadableStream({\n            start(controller) {\n                readCtrl = controller;\n            },\n            async pull(readCtrl) {\n                try {\n                    while (true) {\n                        const value = new Uint8Array(4096);\n                        const n = await socket.read(value);\n                        if (n === null) {\n                            closeStreams();\n                            closed.resolve();\n                            break;\n                        }\n                        readCtrl.enqueue(value.subarray(0, n));\n                    }\n                }\n                catch (err) {\n                    try {\n                        socket.close();\n                    }\n                    catch (_a) { }\n                    try {\n                        readCtrl.error(err);\n                    }\n                    catch (_b) { }\n                    try {\n                        writeCtrl === null || writeCtrl === void 0 ? void 0 : writeCtrl.error(err);\n                    }\n                    catch (_c) { }\n                    closeCalled ? closed.resolve() : closed.reject(err);\n                }\n            },\n            cancel(reason) {\n                reason ? closed.reject(reason) : closed.resolve();\n                closeStreams();\n            },\n        }),\n        writable: new WritableStream({\n            start(controller) {\n                writeCtrl = controller;\n            },\n            async write(chunk) {\n                await socket.write(chunk);\n            },\n            close() {\n                return socket.closeWrite();\n            },\n        }),\n        closed,\n        close: () => {\n            closeCalled = true;\n            closeStreams();\n        },\n        ref: socket.ref.bind(socket),\n        unref: socket.unref.bind(socket),\n    };\n}\nasync function connectUdp(remoteAddress) {\n    const socket = await udpSocket();\n    return socket.connect(remoteAddress);\n}\n/**\n * This function provides a unified interface to bind a UDP socket in Node.js,\n * Deno and Bun, based on modern Web APIs.\n *\n * NOTE: This function depends on the Web Streams API, in Node.js, it requires\n * Node.js v18.0 or above.\n *\n * @example\n * ```ts\n * import { udpSocket } from \"@ayonli/jsext/net\";\n *\n * const socket = await udpSocket({ port: 8080 });\n *\n * for await (const [data, addr] of socket) {\n *     console.log(`Received ${data.byteLength} bytes from ${addr.hostname}:${addr.port}`);\n * }\n * ```\n */\nexport async function udpSocket(localAddress = {}) {\n    // if (isDeno) {\n    //     const _socket = Deno.listenDatagram({\n    //         hostname: localAddress.hostname ?? \"0.0.0.0\",\n    //         port: localAddress.port ?? 0,\n    //         transport: \"udp\",\n    //     });\n    //     const addr = _socket.addr as Deno.NetAddr;\n    //     const closed = asyncTask<void>();\n    var _a;\n    //     return new UdpSocket({\n    //         localAddress: constructNetAddress({\n    //             hostname: addr.hostname,\n    //             port: addr.port,\n    //         }),\n    //         closed,\n    //         close: _socket.close.bind(_socket),\n    //         ref: () => void 0,\n    //         unref: () => void 0,\n    //         receive: async () => {\n    //             try {\n    //                 const [data, addr] = await _socket.receive();\n    //                 return [data, {\n    //                     hostname: (addr as Deno.NetAddr).hostname,\n    //                     port: (addr as Deno.NetAddr).port,\n    //                 }];\n    //             } catch (err) {\n    //                 closed.reject(err);\n    //                 try { _socket.close(); } catch { }\n    //                 throw err;\n    //             }\n    //         },\n    //         send: (data, remoteAddress) => {\n    //             return _socket.send(data, { transport: \"udp\", ...remoteAddress });\n    //         },\n    //         connect: (remoteAddress) => {\n    //             void remoteAddress;\n    //             throw new Error(\"Deno does not support UDP connection at the moment\");\n    //         },\n    //     });\n    // } else if (isNodeLike) {\n    if (isDeno || isNodeLike) {\n        const { createSocket } = await import(\"node:dgram\");\n        const _socket = createSocket(((_a = localAddress.hostname) === null || _a === void 0 ? void 0 : _a.includes(\":\")) ? \"udp6\" : \"udp4\");\n        let isConnected = false;\n        let isClosed = false;\n        const closed = asyncTask();\n        const channel = chan(Infinity);\n        await new Promise(resolve => {\n            _socket.bind(localAddress.port, localAddress.hostname, resolve);\n        });\n        _socket.on(\"message\", (data, rinfo) => {\n            channel.send([\n                new Uint8Array(data.buffer, data.byteOffset, data.byteLength),\n                {\n                    hostname: rinfo.address,\n                    port: rinfo.port,\n                }\n            ]).catch(() => { });\n        }).once(\"error\", err => {\n            channel.close(err);\n            closed.reject(err);\n        }).once(\"close\", () => {\n            isClosed = true;\n            channel.close();\n            closed.resolve();\n        });\n        const localAddr = _socket.address();\n        const props = {\n            localAddress: {\n                hostname: localAddr.address,\n                port: localAddr.port,\n            },\n            closed,\n            close: () => void _socket.close(),\n            ref: _socket.ref.bind(_socket),\n            unref: _socket.unref.bind(_socket),\n        };\n        const checkState = () => {\n            if (isConnected) {\n                throw new TypeError(\"The socket is connected.\");\n            }\n            else if (isClosed) {\n                throw new TypeError(\"The socket is closed.\");\n            }\n        };\n        return new UdpSocket({\n            ...props,\n            joinMulticast: _socket.addMembership.bind(_socket),\n            leaveMulticast: _socket.dropMembership.bind(_socket),\n            setBroadcast: _socket.setBroadcast.bind(_socket),\n            setMulticastLoopback: _socket.setMulticastLoopback.bind(_socket),\n            setMulticastTTL: _socket.setMulticastTTL.bind(_socket),\n            setTTL: _socket.setTTL.bind(_socket),\n            receive: async () => {\n                checkState();\n                const msg = await channel.recv();\n                if (msg) {\n                    return msg;\n                }\n                else {\n                    throw new TypeError(\"The socket is closed.\");\n                }\n            },\n            send: async (data, remoteAddress) => {\n                checkState();\n                return new Promise((resolve, reject) => {\n                    _socket.send(data, remoteAddress.port, remoteAddress.hostname, (err, n) => {\n                        err ? reject(err) : resolve(n);\n                    });\n                });\n            },\n            connect: (remoteAddress) => {\n                return new Promise(resolve => {\n                    isConnected = true;\n                    _socket.connect(remoteAddress.port, remoteAddress.hostname, () => {\n                        const localAddr = _socket.address();\n                        const remoteAddr = _socket.remoteAddress();\n                        let readCtrl = null;\n                        let writeCtrl = null;\n                        const closeStreams = () => {\n                            channel.close();\n                            try {\n                                _socket.close();\n                            }\n                            catch (_a) { }\n                            try {\n                                readCtrl === null || readCtrl === void 0 ? void 0 : readCtrl.close();\n                            }\n                            catch (_b) { }\n                            try {\n                                writeCtrl === null || writeCtrl === void 0 ? void 0 : writeCtrl.error(new TypeError(\"The stream is closed.\"));\n                            }\n                            catch (_c) { }\n                        };\n                        resolve(new UdpSocketStream({\n                            ...props,\n                            localAddress: {\n                                hostname: localAddr.address,\n                                port: localAddr.port,\n                            },\n                            remoteAddress: {\n                                hostname: remoteAddr.address,\n                                port: remoteAddr.port,\n                            },\n                            readable: new ReadableStream({\n                                start(controller) {\n                                    readCtrl = controller;\n                                },\n                                async pull(readCtrl) {\n                                    try {\n                                        while (true) {\n                                            const msg = await channel.recv();\n                                            if (msg === undefined) {\n                                                closeStreams();\n                                                closed.resolve();\n                                                break;\n                                            }\n                                            readCtrl.enqueue(msg[0]);\n                                        }\n                                    }\n                                    catch (err) {\n                                        channel.close(err);\n                                        try {\n                                            _socket.close();\n                                        }\n                                        catch (_a) { }\n                                        try {\n                                            readCtrl.error(err);\n                                        }\n                                        catch (_b) { }\n                                        try {\n                                            writeCtrl === null || writeCtrl === void 0 ? void 0 : writeCtrl.error(err);\n                                        }\n                                        catch (_c) { }\n                                        isClosed ? closed.resolve() : closed.reject(err);\n                                    }\n                                },\n                                cancel(reason) {\n                                    reason ? closed.reject(reason) : closed.resolve();\n                                    closeStreams();\n                                },\n                            }),\n                            writable: new WritableStream({\n                                start(controller) {\n                                    writeCtrl = controller;\n                                },\n                                write(chunk) {\n                                    return new Promise((resolve, reject) => {\n                                        _socket.send(chunk, err => {\n                                            err ? reject(err) : resolve();\n                                        });\n                                    });\n                                },\n                            }),\n                        }));\n                    });\n                });\n            },\n        });\n    }\n    else {\n        throwUnsupportedRuntimeError();\n    }\n}\n//# sourceMappingURL=net.js.map"],"names":[],"mappings":"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"}