{"version":3,"file":"net.js","sources":["../net.ts"],"sourcesContent":["import { asyncTask } from \"./async.ts\";\nimport { isBun, isDeno, isNode } from \"./env.ts\";\nimport { TcpSocket, UnixSocket } from \"./net/types.ts\";\nimport { constructNetAddress } from \"./net/util.ts\";\n/**\n * Returns a random port number that is available for listening.\n *\n * NOTE: This function is not available in the browser and worker runtimes such\n * as Cloudflare Workers.\n *\n * @param prefer The preferred port number to return if it is available,\n * otherwise a random port is returned.\n *\n * @param hostname The hostname to bind the port to. Default is \"0.0.0.0\", only\n * used when `prefer` is set and not `0`.\n */\nexport async function randomPort(prefer = undefined, hostname = undefined) {\n    hostname || (hostname = \"0.0.0.0\");\n    if (isDeno) {\n        try {\n            const listener = Deno.listen({\n                hostname,\n                port: prefer !== null && prefer !== void 0 ? prefer : 0,\n            });\n            const { port } = listener.addr;\n            listener.close();\n            return Promise.resolve(port);\n        }\n        catch (err) {\n            if (prefer) {\n                return randomPort(0);\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    else if (isBun) {\n        try {\n            const listener = Bun.listen({\n                hostname,\n                port: prefer !== null && prefer !== void 0 ? prefer : 0,\n                socket: {\n                    data: () => { },\n                },\n            });\n            const { port } = listener;\n            listener.stop(true);\n            return Promise.resolve(port);\n        }\n        catch (err) {\n            if (prefer) {\n                return randomPort(0);\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    else if (isNode) {\n        const { createServer, connect } = await import(\"node:net\");\n        if (prefer) {\n            // In Node.js listening on a port used by another process may work,\n            // so we don't use `listen` method to check if the port is available.\n            // Instead, we use the `connect` method to check if the port can be\n            // reached, if so, the port is open and we don't use it.\n            const isOpen = await new Promise((resolve, reject) => {\n                const conn = connect(prefer, hostname === \"0.0.0.0\" ? \"localhost\" : hostname);\n                conn.once(\"connect\", () => {\n                    conn.end();\n                    resolve(true);\n                }).once(\"error\", (err) => {\n                    if (err[\"code\"] === \"ECONNREFUSED\") {\n                        resolve(false);\n                    }\n                    else {\n                        reject(err);\n                    }\n                });\n            });\n            if (isOpen) {\n                return randomPort(0);\n            }\n            else {\n                return prefer;\n            }\n        }\n        else {\n            const server = createServer();\n            server.listen({ port: 0, exclusive: true });\n            const port = server.address().port;\n            return new Promise((resolve, reject) => {\n                server.close(err => err ? reject(err) : resolve(port));\n            });\n        }\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\nexport function connect(options) {\n    if (\"path\" in options) {\n        return connectUnix(options);\n    }\n    else {\n        return connectTcp(options);\n    }\n}\nasync function connectTcp(options) {\n    var _a;\n    const { tls = false, ..._options } = options;\n    if (isDeno) {\n        const _socket = tls\n            ? await Deno.connectTls(_options)\n            : await Deno.connect(_options);\n        const localAddr = _socket.localAddr;\n        const remoteAddr = _socket.remoteAddr;\n        return new TcpSocket({\n            localAddress: constructNetAddress({\n                hostname: localAddr.hostname,\n                port: localAddr.port,\n            }),\n            remoteAddress: constructNetAddress({\n                hostname: remoteAddr.hostname,\n                port: remoteAddr.port,\n            }),\n            ...denoToSocket(_socket),\n            setKeepAlive: (keepAlive) => {\n                if (\"setKeepAlive\" in _socket) {\n                    _socket.setKeepAlive(keepAlive);\n                }\n            },\n            setNoDelay: (noDelay) => {\n                if (\"setNoDelay\" in _socket) {\n                    _socket.setNoDelay(noDelay);\n                }\n            },\n        });\n    }\n    else if (isBun) {\n        const ready = asyncTask();\n        const closed = asyncTask();\n        let readCtrl = null;\n        let writeCtrl = null;\n        const readable = new ReadableStream({\n            start(controller) {\n                readCtrl = controller;\n            },\n            cancel(reason) {\n                reason ? closed.reject(reason) : closed.resolve();\n                _socket.end();\n            },\n        });\n        const writable = new WritableStream({\n            start(controller) {\n                writeCtrl = controller;\n            },\n            write(chunk) {\n                _socket.write(chunk);\n            },\n            close() {\n                _socket.shutdown();\n            },\n        });\n        const _socket = await Bun.connect({\n            ..._options,\n            tls,\n            socket: {\n                binaryType: \"uint8array\",\n                open() {\n                    ready.resolve();\n                },\n                data(_socket, data) {\n                    readCtrl.enqueue(data);\n                },\n                error(_socket, error) {\n                    try {\n                        readCtrl.error(error);\n                    }\n                    catch (_a) { }\n                    try {\n                        writeCtrl.error(error);\n                    }\n                    catch (_b) { }\n                    closed.reject(error);\n                },\n                close() {\n                    try {\n                        readCtrl.close();\n                    }\n                    catch (_a) { }\n                    try {\n                        writeCtrl.error();\n                    }\n                    catch (_b) { }\n                    closed.resolve();\n                },\n            }\n        });\n        await ready;\n        return new TcpSocket({\n            localAddress: constructNetAddress({\n                hostname: \"localhost\",\n                port: _socket.localPort,\n            }),\n            remoteAddress: constructNetAddress({\n                hostname: _socket.remoteAddress,\n                port: options.port,\n            }),\n            readable,\n            writable,\n            closed,\n            close: async () => {\n                _socket.end();\n                await closed;\n            },\n            ref: () => _socket.ref(),\n            unref: () => _socket.unref(),\n            setKeepAlive: _socket.setKeepAlive.bind(_socket),\n            setNoDelay: _socket.setNoDelay.bind(_socket),\n        });\n    }\n    else if (isNode) {\n        const { createConnection } = await import(\"node:net\");\n        const { connect } = await import(\"node:tls\");\n        const _socket = tls ? connect({\n            ..._options,\n            rejectUnauthorized: false,\n        }) : createConnection({\n            host: options.hostname,\n            port: options.port,\n            localPort: 0,\n        });\n        const props = await nodeToSocket(_socket);\n        const socket = new TcpSocket({\n            localAddress: constructNetAddress({\n                hostname: _socket.localAddress || \"localhost\",\n                port: (_a = _socket.localPort) !== null && _a !== void 0 ? _a : 0,\n            }),\n            remoteAddress: constructNetAddress({\n                hostname: _socket.remoteAddress,\n                port: _socket.remotePort,\n            }),\n            ...props,\n            setKeepAlive: _socket.setKeepAlive.bind(_socket),\n            setNoDelay: _socket.setNoDelay.bind(_socket),\n        });\n        return socket;\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\nasync function connectUnix(options) {\n    const { path } = options;\n    if (isDeno) {\n        const _socket = await Deno.connect({ transport: \"unix\", path });\n        const localAddr = _socket.localAddr;\n        const remoteAddr = _socket.remoteAddr;\n        return new UnixSocket({\n            localAddress: {\n                path: localAddr.path,\n            },\n            remoteAddress: {\n                path: remoteAddr.path,\n            },\n            ...denoToSocket(_socket),\n        });\n    }\n    else if (isBun) {\n        const ready = asyncTask();\n        const closed = asyncTask();\n        let readCtrl = null;\n        let writeCtrl = null;\n        const readable = new ReadableStream({\n            start(controller) {\n                readCtrl = controller;\n            },\n            cancel(reason) {\n                reason ? closed.reject(reason) : closed.resolve();\n                _socket.end();\n            },\n        });\n        const writable = new WritableStream({\n            start(controller) {\n                writeCtrl = controller;\n            },\n            write(chunk) {\n                _socket.write(chunk);\n            },\n            close() {\n                _socket.shutdown();\n            },\n        });\n        const _socket = await Bun.connect({\n            unix: path,\n            socket: {\n                binaryType: \"uint8array\",\n                open() {\n                    ready.resolve();\n                },\n                data(_socket, data) {\n                    readCtrl.enqueue(data);\n                },\n                error(_socket, error) {\n                    try {\n                        readCtrl.error(error);\n                    }\n                    catch (_a) { }\n                    try {\n                        writeCtrl.error(error);\n                    }\n                    catch (_b) { }\n                    closed.reject(error);\n                },\n                close() {\n                    try {\n                        readCtrl.close();\n                    }\n                    catch (_a) { }\n                    try {\n                        writeCtrl.error();\n                    }\n                    catch (_b) { }\n                    closed.resolve();\n                },\n            }\n        });\n        await ready;\n        return new UnixSocket({\n            localAddress: {\n                path: _socket.remoteAddress,\n            },\n            remoteAddress: {\n                path: _socket.remoteAddress,\n            },\n            readable,\n            writable,\n            closed,\n            close: async () => {\n                _socket.end();\n                await closed;\n            },\n            ref: () => _socket.ref(),\n            unref: () => _socket.unref(),\n        });\n    }\n    else if (isNode) {\n        const { createConnection } = await import(\"node:net\");\n        const _socket = createConnection({ path });\n        const props = await nodeToSocket(_socket);\n        const socket = new UnixSocket({\n            localAddress: {\n                path: _socket.localAddress,\n            },\n            remoteAddress: {\n                path: _socket.remoteAddress,\n            },\n            ...props,\n        });\n        return socket;\n    }\n    else {\n        throw new Error(\"Unsupported runtime\");\n    }\n}\nfunction denoToSocket(socket) {\n    const closed = asyncTask();\n    let closeCalled = false;\n    return {\n        readable: new ReadableStream({\n            async pull(controller) {\n                try {\n                    while (true) {\n                        const value = new Uint8Array(4096);\n                        const n = await socket.read(value);\n                        if (n === null) {\n                            try {\n                                controller.close();\n                            }\n                            catch (_a) { }\n                            closed.resolve();\n                            break;\n                        }\n                        controller.enqueue(value.subarray(0, n));\n                    }\n                }\n                catch (err) {\n                    try {\n                        controller.error(err);\n                    }\n                    catch (_b) { }\n                    closeCalled ? closed.resolve() : closed.reject(err);\n                }\n            },\n            cancel(reason) {\n                reason ? closed.reject(reason) : closed.resolve();\n                socket.close();\n            },\n        }),\n        writable: new WritableStream({\n            async write(chunk) {\n                await socket.write(chunk);\n            },\n            close() {\n                return socket.closeWrite();\n            },\n        }),\n        closed,\n        close: async () => {\n            closeCalled = true;\n            socket.close();\n            await closed;\n        },\n        ref: socket.ref.bind(socket),\n        unref: socket.unref.bind(socket),\n    };\n}\nasync function nodeToSocket(_socket) {\n    const ready = asyncTask();\n    const closed = asyncTask();\n    let readCtrl = null;\n    let writeCtrl = null;\n    const readable = new ReadableStream({\n        start(controller) {\n            readCtrl = controller;\n        },\n        cancel(reason) {\n            _socket.destroy(reason);\n        },\n    });\n    const writable = new WritableStream({\n        start(controller) {\n            writeCtrl = controller;\n        },\n        write(chunk) {\n            return new Promise((resolve, reject) => {\n                _socket.write(chunk, err => {\n                    err ? reject(err) : resolve();\n                });\n            });\n        },\n        close() {\n            return new Promise(resolve => {\n                _socket.end(resolve);\n            });\n        },\n    });\n    _socket.once(\"connect\", () => {\n        ready.resolve();\n    }).on(\"data\", data => {\n        readCtrl.enqueue(new Uint8Array(data.buffer, data.byteOffset, data.byteLength));\n    }).once(\"error\", (error) => {\n        try {\n            readCtrl.error(error);\n        }\n        catch (_a) { }\n        try {\n            writeCtrl.error(error);\n        }\n        catch (_b) { }\n        closed.reject(error);\n        ready.reject(error);\n    }).once(\"close\", (hasError) => {\n        if (!hasError) {\n            try {\n                readCtrl.close();\n            }\n            catch (_a) { }\n            try {\n                writeCtrl.error();\n            }\n            catch (_b) { }\n            closed.resolve();\n        }\n    });\n    await ready;\n    return {\n        readable,\n        writable,\n        closed,\n        close: async () => {\n            _socket.destroy();\n            await closed;\n        },\n        ref: () => _socket.ref(),\n        unref: () => _socket.unref(),\n    };\n}\n//# sourceMappingURL=net.js.map"],"names":[],"mappings":"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"}