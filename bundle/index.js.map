{"version":3,"file":"index.js","sources":["../array/base.ts","../string/index.ts","../number/index.ts","../object/index.ts","../class.ts","../array/index.ts","../math/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../uint8array/index.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../error/augment.ts","../json/index.ts","../external/check-iterable/index.mjs","../json/augment.ts","../external/thenable-generator/index.ts","../util.ts","../try.ts","../wrap.ts","../throttle.ts","../debounce.ts","../parallel/constants.ts","../chan.ts","../queue.ts","../lock.ts","../parallel/utils/module.ts","../parallel/utils/channel.ts","../parallel/utils/threads.ts","../parallel.ts","../run.ts","../deprecate.ts","../index.ts","../func.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array-like object. */\nexport function count(arr, item) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === item) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array-like object.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array-like object into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array-like object into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n//# sourceMappingURL=base.js.map","/**\n * Functions for dealing with strings.\n * @module\n */\nimport { chunk as _chunk } from \"../array/base.ts\";\nconst encoder = new TextEncoder();\nconst _chars = chars;\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a == b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/**\n * Returns a random string restricted by `length` (character-wise).\n *\n * @param chars Default value: `0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`.\n */\nexport function random(length, chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") {\n    const arr = _chars(chars);\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * arr.length);\n        str += arr[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Returns the bytes of the given string. */\nexport function bytes(str) {\n    return encoder.encode(str);\n}\n/** Returns the characters of the string (emojis are supported). */\nexport function chars(str) {\n    if (typeof (Intl === null || Intl === void 0 ? void 0 : Intl.Segmenter) === \"function\") {\n        return Array.from(new Intl.Segmenter().segment(str))\n            .map((x) => x.segment);\n    }\n    else {\n        return Array.from(str);\n    }\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches].map(sub => sub.split(\"_\")).flat() : [];\n}\n/** Splits the string into lines by `\\n` or `\\r\\n`. */\nexport function lines(str) {\n    return str.split(/\\r?\\n/);\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst _trim = String.prototype.trim;\nconst _trimEnd = String.prototype.trimEnd;\nconst _trimStart = String.prototype.trimStart;\n/** Removes leading and trailing spaces or custom characters of the string. */\nexport function trim(str, chars = \"\") {\n    if (!chars) {\n        return _trim.call(str);\n    }\n    else {\n        return trimEnd(trimStart(str, chars), chars);\n    }\n}\n/** Removes trailing spaces or custom characters of the string. */\nexport function trimEnd(str, chars = \"\") {\n    if (!chars) {\n        return _trimEnd.call(str);\n    }\n    else {\n        let i = str.length;\n        while (i-- && chars.indexOf(str[i]) !== -1) { }\n        return str.substring(0, i + 1);\n    }\n}\n/** Removes leading spaces or custom characters of the string. */\nexport function trimStart(str, chars = \"\") {\n    if (!chars) {\n        return _trimStart.call(str);\n    }\n    else {\n        let i = 0;\n        do { } while (chars.indexOf(str[i]) !== -1 && ++i);\n        return str.substring(i);\n    }\n}\n/** Removes the given suffix of the string if present. */\nexport function stripEnd(str, suffix) {\n    if (str.endsWith(suffix)) {\n        return str.slice(0, -suffix.length);\n    }\n    return str;\n}\n/** Removes the given prefix of the string if present. */\nexport function stripStart(str, prefix) {\n    if (str.startsWith(prefix)) {\n        return str.slice(prefix.length);\n    }\n    return str;\n}\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return bytes(str).byteLength;\n}\n/** Checks if all characters in this string are within the ASCII range. */\nexport function isAscii(str, printableOnly = false) {\n    return printableOnly ? /^[-~]+$/.test(str) : /^[\\x00-\\x7E]+$/.test(str);\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for dealing with numbers.\n * @module\n */\n/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n *\n * @remarks `NaN` is not considered numeric.\n *\n * @param strict Only returns `true` when the value is of type `number`.\n */\nexport function isNumeric(value, strict = false) {\n    const type = typeof value;\n    if (strict) {\n        return type === \"number\" && !Number.isNaN(value);\n    }\n    else if (type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"number\") {\n        return !Number.isNaN(value);\n    }\n    else if (type === \"string\" && value) {\n        try {\n            BigInt(value);\n            return true;\n        }\n        catch (_a) {\n            return !Number.isNaN(Number(value));\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for dealing with objects.\n * @module\n */\nimport { isClass } from \"../class.ts\";\n/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"stack\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns a string representation or the constructor of the value's type.\n *\n * @remarks This function returns `\"class\"` for ES6 classes.\n * @remarks This function returns `\"null\"` for `null`.\n * @remarks This function returns `Object` for `Object.create(null)`.\n */\nexport function typeOf(value) {\n    var _a, _b;\n    if (value === undefined) {\n        return \"undefined\";\n    }\n    else if (value === null) {\n        return \"null\";\n    }\n    const type = typeof value;\n    if (type === \"function\") {\n        return isClass(value) ? \"class\" : \"function\";\n    }\n    else if (type === \"object\") {\n        return (_b = (_a = Object.getPrototypeOf(value)) === null || _a === void 0 ? void 0 : _a.constructor) !== null && _b !== void 0 ? _b : Object;\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n/**\n * Returns `true` is the given value is a plain object, that is, an object created by\n * the `Object` constructor or one with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value) {\n    if (typeof value !== \"object\" || value === null)\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === null || proto.constructor === Object;\n}\n/**\n * Creates an object base on the original object but without any invalid values\n * (except for `null`), and trims the value if it's a string.\n *\n * @remarks This function only operates on plain objects and arrays.\n */\nexport function sanitize(obj, deep = false, options = {}) {\n    const { removeNulls, removeEmptyStrings, removeEmptyObjects, removeArrayItems } = options;\n    return (function process(target, depth) {\n        if (typeof target === \"string\") {\n            return target.trim();\n        }\n        else if (Array.isArray(target)) {\n            const arr = !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n            if (removeArrayItems) {\n                return arr.filter(value => {\n                    if (value === null) {\n                        return !removeNulls;\n                    }\n                    else if (value === \"\") {\n                        return !removeEmptyStrings;\n                    }\n                    else if (isValid(value)) {\n                        if (typeof value !== \"object\") {\n                            return true;\n                        }\n                        else if (Array.isArray(value)) {\n                            return value.length > 0 || !removeEmptyObjects;\n                        }\n                        else if (isPlainObject(value)) {\n                            return Reflect.ownKeys(value).length > 0 || !removeEmptyObjects;\n                        }\n                        else {\n                            return true;\n                        }\n                    }\n                    else {\n                        return false;\n                    }\n                });\n            }\n            else {\n                return arr;\n            }\n        }\n        else if (isPlainObject(target)) {\n            return !depth || deep ? Reflect.ownKeys(target).reduce((result, key) => {\n                const value = process(target[key], depth + 1);\n                if (value === null) {\n                    if (!removeNulls) {\n                        result[key] = value;\n                    }\n                }\n                else if (value === \"\") {\n                    if (!removeEmptyStrings) {\n                        result[key] = value;\n                    }\n                }\n                else if (isValid(value)) {\n                    if (typeof value !== \"object\") {\n                        result[key] = value;\n                    }\n                    else if (Array.isArray(value)) {\n                        if (value.length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else if (isPlainObject(value)) {\n                        if (Reflect.ownKeys(value).length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else {\n                        result[key] = value;\n                    }\n                }\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Creates an object with sorted keys (in ascending order) of the original object.\n *\n * @remarks Symbol keys are not sorted and remain their original order.\n * @remarks This function only operates on plain objects and arrays.\n */\nexport function sortKeys(obj, deep = false) {\n    return (function process(target, depth) {\n        if (isPlainObject(target)) {\n            return !depth || deep ? [\n                ...Object.getOwnPropertyNames(target).sort(),\n                ...Object.getOwnPropertySymbols(target)\n            ].reduce((result, key) => {\n                result[key] = process(target[key], depth + 1);\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else if (Array.isArray(target)) {\n            return !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Create an object with flatted keys of the original object, the children\n * nodes' properties will be transformed to a string-represented path.\n *\n * @remarks This function only operates on plain objects and arrays.\n *\n * @param depth Default value: `1`.\n * @example\n * ```ts\n * const obj = flatKeys({ foo: { bar: \"hello\", baz: \"world\" } });\n * console.log(obj);\n * // { \"foo.bar\": \"hello\", \"foo.baz\": \"world\" }\n * ```\n */\nexport function flatKeys(obj, depth = 1, options = {}) {\n    var _a;\n    const maxDepth = depth;\n    const carrier = obj.constructor ? {} : Object.create(null);\n    const flatArrayIndices = (_a = options === null || options === void 0 ? void 0 : options.flatArrayIndices) !== null && _a !== void 0 ? _a : false;\n    if (!isPlainObject(obj) && (!Array.isArray(obj) || !flatArrayIndices)) {\n        return obj;\n    }\n    (function process(target, path, depth) {\n        if (depth === maxDepth) {\n            carrier[path] = target;\n        }\n        else if (Array.isArray(target) && depth) {\n            if (!flatArrayIndices) {\n                carrier[path] = target;\n            }\n            else {\n                target.forEach((value, i) => {\n                    process(value, path ? `${path}.${i}` : String(i), path ? depth + 1 : depth);\n                });\n            }\n        }\n        else if (isPlainObject(target) || (Array.isArray(target) && !depth)) {\n            Reflect.ownKeys(target).forEach(key => {\n                const value = target[key];\n                if (typeof key === \"symbol\") {\n                    if (depth === 0) { // only allow top-level symbol properties\n                        carrier[key] = value;\n                    }\n                }\n                else {\n                    process(value, path ? `${path}.${key}` : key, path ? depth + 1 : depth);\n                }\n            });\n        }\n        else {\n            carrier[path] = target;\n        }\n    })(obj, \"\", 0);\n    return carrier;\n}\n//# sourceMappingURL=index.js.map","/**\n * This module includes functions for dealing with classes.\n * @module\n */\nimport { hasOwn } from \"./object/index.ts\";\n/**\n * Checks if a value is a class/constructor.\n *\n * @example\n * ```ts\n * import { isClass } from \"@ayonli/jsext/class\";\n *\n * console.assert(isClass(class Foo { }));\n * console.assert(!isClass(function foo() { }));\n * ```\n */\nexport function isClass(value) {\n    if (typeof value !== \"function\")\n        return false;\n    if ([String, Number, Boolean, BigInt, Symbol].includes(value)) {\n        return false;\n    }\n    // async function or arrow function\n    if (value.prototype === undefined)\n        return false;\n    // generator function or malformed inheritance\n    if (value.prototype.constructor !== value)\n        return false;\n    const str = value.toString();\n    // ES6 class\n    if (str.slice(0, 5) == \"class\")\n        return true;\n    const name0 = value.name[0];\n    if (name0 && name0 >= \"A\" && name0 <= \"Z\" && str.includes(\"[native code]\"))\n        return true;\n    return false;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * import { isSubclassOf } from \"@ayonli/jsext/class\";\n *\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport function mixin(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n//# sourceMappingURL=class.js.map","/**\n * Functions for dealing with arrays.\n * @module\n */\nimport { isSubclassOf } from \"../class.ts\";\nimport { random as rand } from \"../number/index.ts\";\nimport { count as _count, equals as _equals, split as _split, chunk as _chunk, } from \"./base.ts\";\n/** Returns the first element of the array, or `undefined` if the array is empty. */\nexport function first(arr) {\n    return arr[0];\n}\n/** Returns the last element of the array, or `undefined` if the array is empty. */\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n/** Returns a random element of the array, or `undefined` if the array is empty. */\nexport function random(arr, remove = false) {\n    if (!arr.length) {\n        return undefined;\n    }\n    else if (arr.length === 1) {\n        if (remove) {\n            return arr.splice(0, 1)[0];\n        }\n        else {\n            return arr[0];\n        }\n    }\n    const i = rand(0, arr.length - 1);\n    if (remove) {\n        return arr.splice(i, 1)[0];\n    }\n    else {\n        return arr[i];\n    }\n}\n/** Counts the occurrence of the element in the array. */\nexport function count(arr, item) {\n    return _count(arr, item);\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Returns a subset of the array that contains only unique items filtered by the\n * given callback function.\n */\nexport function uniqBy(arr, fn) {\n    const map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        const key = fn(item, i);\n        map.has(key) || map.set(key, item);\n    }\n    return [...map.values()];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    if (typeof key === \"function\") {\n        return orderBy(items.map((item, i) => ({\n            key: key(item, i),\n            value: item,\n        })), \"key\", order).map(({ value }) => value);\n    }\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const groups = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\nexport function keyBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const map = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            map.set(key, item);\n        }\n        return map;\n    }\n    else {\n        const record = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            record[key] = item;\n        }\n        return record;\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for mathematical calculations.\n * @module\n */\n/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import { compare, random, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, bytes as _bytes, chars as _chars, words as _words, lines as _lines, trim as _trim, trimEnd as _trimEnd, trimStart as _trimStart, stripEnd as _stripEnd, stripStart as _stripStart, byteLength as _byteLength, isAscii as _isAscii, } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.bytes = function bytes() {\n    return _bytes(String(this));\n};\nString.prototype.chars = function chars() {\n    return _chars(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.lines = function lines() {\n    return _lines(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.trim = function trim(chars = \"\") {\n    return _trim(String(this), chars);\n};\nString.prototype.trimEnd = function trimEnd(chars = \"\") {\n    return _trimEnd(String(this), chars);\n};\nString.prototype.trimStart = function trimStart(chars = \"\") {\n    return _trimStart(String(this), chars);\n};\nString.prototype.stripEnd = function stripEnd(suffix) {\n    return _stripEnd(String(this), suffix);\n};\nString.prototype.stripStart = function stripStart(prefix) {\n    return _stripStart(String(this), prefix);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\nString.prototype.isAscii = function isAscii(printableOnly = false) {\n    return _isAscii(String(this), printableOnly);\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { first as _first, last as _last, chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, keyBy as _keyBy, orderBy as _orderBy, random as _random, shuffle as _shuffle, split as _split, uniq as _uniq, uniqBy as _uniqBy, } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return _first(this);\n};\nArray.prototype.last = function last() {\n    return _last(this);\n};\nArray.prototype.random = function random(remove = false) {\n    return _random(this, remove);\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.uniqBy = function uniqBy(fn) {\n    return _uniqBy(this, fn);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function groupBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\nArray.prototype.keyBy = function keyBy(fn, type = Object) {\n    return _keyBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk, concat, copy } from \"./index.ts\";\nUint8Array.copy = copy;\nUint8Array.concat = concat;\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","/**\n * Functions for dealing with `Uint8Array`s.\n * @module\n */\nimport { equals as _equals, split as _split, chunk as _chunk } from \"../array/base.ts\";\nimport { sum } from \"../math/index.ts\";\n/** Copies bytes from `src` array to `dest` and returns the number of bytes copied. */\nexport function copy(src, dest) {\n    if (src.length > dest.length) {\n        src = src.subarray(0, dest.length);\n    }\n    dest.set(src);\n    return src.length;\n}\n/** Like `Buffer.concat` but for pure `Uint8Array`. */\nexport function concat(...arrays) {\n    const length = sum(...arrays.map(arr => arr.length));\n    const ctor = arrays[0].constructor;\n    const result = new ctor(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compares this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, typeOf, isValid, isPlainObject, sanitize, sortKeys, flatKeys, } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.typeOf = typeOf;\nObject.isValid = isValid;\nObject.isPlainObject = isPlainObject;\nObject.sanitize = sanitize;\nObject.sortKeys = sortKeys;\nObject.flatKeys = flatKeys;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/**\n * Functions for promise/async context handling.\n * @module\n */\n/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test passes. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        super.set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = super.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return super.has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return super.delete(id);\n    }\n    *entries() {\n        for (const { key, value } of super.values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of super.values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of super.values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        super.forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else if (typeof options === \"string\") {\n            Object.defineProperty(this, \"name\", {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: options,\n            });\n        }\n        else {\n            if (options.name) {\n                Object.defineProperty(this, \"name\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.name,\n                });\n            }\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","/**\n * Functions for converting errors to/from other types of objects.\n * @module\n */\nimport { isPlainObject, omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    if (!(err instanceof Error) && err[\"name\"] && err[\"message\"]) { // Error-like\n        err = fromObject(err, Error);\n    }\n    const obj = {\n        \"@@type\": err.constructor.name,\n        ...omit(err, [\"toString\", \"toJSON\", \"__callSiteEvals\"]),\n    };\n    if (obj[\"@@type\"] === \"AggregateError\" && Array.isArray(obj[\"errors\"])) {\n        obj[\"errors\"] = obj[\"errors\"].map(item => {\n            return item instanceof Error ? toObject(item) : item;\n        });\n    }\n    return obj;\n}\nexport function fromObject(obj, ctor = undefined) {\n    var _a, _b;\n    // @ts-ignore\n    if (!(obj === null || obj === void 0 ? void 0 : obj.name)) {\n        return null;\n    }\n    // @ts-ignore\n    ctor || (ctor = (globalThis[obj[\"@@type\"] || obj.name] || globalThis[obj.name]));\n    if (!ctor) {\n        if (obj[\"@@type\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    let err;\n    if (ctor.name === \"DOMException\" && typeof DOMException === \"function\") {\n        err = new ctor((_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\", obj[\"name\"]);\n    }\n    else {\n        err = Object.create(ctor.prototype, {\n            message: {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: (_b = obj[\"message\"]) !== null && _b !== void 0 ? _b : \"\",\n            },\n        });\n    }\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\n        \"@@type\",\n        \"name\",\n        \"message\",\n        \"stack\",\n        \"cause\"\n    ].includes(key));\n    otherKeys.forEach(key => {\n        var _a;\n        // @ts-ignore\n        (_a = err[key]) !== null && _a !== void 0 ? _a : (err[key] = obj[key]);\n    });\n    // @ts-ignore\n    if (isAggregateError(err) && Array.isArray(err[\"errors\"])) {\n        err[\"errors\"] = err[\"errors\"].map(item => {\n            return isPlainObject(item) ? fromObject(item) : item;\n        });\n    }\n    return err;\n}\n/** Creates an `ErrorEvent` instance based on the given error. */\nexport function toErrorEvent(err, type = \"error\") {\n    let filename = \"\";\n    let lineno = 0;\n    let colno = 0;\n    if (err.stack) {\n        const lines = err.stack.split(\"\\n\").map(line => line.trim());\n        let callSite = lines.find(line => line.startsWith(\"at \"));\n        if (callSite) {\n            callSite = callSite.slice(3);\n        }\n        else if (callSite = lines.find(line => line.includes(\"@\") && line.length > 1)) {\n            callSite = callSite.slice(callSite.indexOf(\"@\") + 1);\n        }\n        if (callSite) {\n            let start = callSite.lastIndexOf(\"(\");\n            let end = 0;\n            if (start !== -1) {\n                start += 1;\n                end = callSite.indexOf(\")\", start);\n                callSite = callSite.slice(start, end);\n            }\n            const matches = callSite.match(/:(\\d+):(\\d+)$/);\n            if (matches) {\n                filename = callSite.slice(0, matches.index);\n                lineno = parseInt(matches[1]);\n                colno = parseInt(matches[2]);\n            }\n        }\n    }\n    return new ErrorEvent(type, {\n        error: err,\n        message: err.message,\n        filename,\n        lineno,\n        colno,\n    });\n}\nconst isFirefoxOrSafari = typeof navigator === \"object\" && /Firefox|Safari/.test(navigator.userAgent);\n/** Creates an error instance based on the given `ErrorEvent` instance. */\nexport function fromErrorEvent(event) {\n    if (event.error instanceof Error) {\n        return event.error;\n    }\n    let err;\n    let shouldPatchStack = false;\n    if (event.error\n        && typeof event.error === \"object\"\n        && event.error[\"name\"]\n        && event.error[\"message\"]) { // Error-like\n        err = fromObject(event.error, Error);\n        shouldPatchStack = !err.stack;\n    }\n    else if (event.message) {\n        err = new Error(event.message);\n        shouldPatchStack = true;\n    }\n    else {\n        return null;\n    }\n    if (shouldPatchStack) {\n        let stack = \"\";\n        if (event.filename) {\n            if (isFirefoxOrSafari) {\n                stack = \"@\" + event.filename;\n            }\n            else {\n                stack = `Error: ${event.message}\\n    at ${event.filename}`;\n            }\n            if (event.lineno) {\n                stack += \":\" + event.lineno;\n            }\n            if (event.colno) {\n                stack += \":\" + event.colno;\n            }\n        }\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: stack,\n        });\n    }\n    return err;\n}\n/** @inner */\nexport function isDOMException(value) {\n    return ((typeof DOMException === \"function\") && (value instanceof DOMException))\n        || (value instanceof Error && value.constructor.name === \"DOMException\"); // Node.js v16-\n}\n/** @inner */\nexport function isAggregateError(value) {\n    // @ts-ignore\n    return (typeof AggregateError === \"function\" && value instanceof AggregateError)\n        || (value instanceof Error && value.constructor.name === \"AggregateError\");\n}\n//# sourceMappingURL=index.js.map","import { Exception, toErrorEvent, fromObject, toObject, fromErrorEvent } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.toErrorEvent = toErrorEvent;\nError.fromErrorEvent = fromErrorEvent;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","/**\n * Functions for parsing JSONs to specific structures.\n * @module\n */\nimport { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nconst typeRegistry = new Map();\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    return as(data, type);\n}\nexport function as(data, type) {\n    if (data === null || data === undefined) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (data.type === \"Buffer\" && Array.isArray(data.data)) { // Node.js Buffer\n            if (typeof Buffer === \"function\" && type === Buffer) {\n                try {\n                    return Buffer.from(data.data);\n                }\n                catch (_d) {\n                    return null;\n                }\n            }\n            else if (typeof type.prototype[Symbol.iterator] === \"function\"\n                && typeof type[\"from\"] === \"function\") {\n                try {\n                    // Convert Node.js Buffer to TypedArray.\n                    return type.from(data.data);\n                }\n                catch (_e) {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        const keys = Object.getOwnPropertyNames(data);\n        const values = Object.values(data);\n        if (keys.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            values.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") {\n            // Assert the data is a TypedArray.\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            const err = fromObject(data);\n            if (err) {\n                // Support @JSON.type() decorator in Error constructors.\n                const typeRecords = typeRegistry.get(type.prototype);\n                if (typeRecords) {\n                    for (const key of Reflect.ownKeys(data)) {\n                        const ctor = typeRecords[key];\n                        if (ctor) {\n                            err[key] = as(data[key], ctor);\n                        }\n                    }\n                }\n            }\n            return err;\n        }\n        else {\n            const ins = Object.create(type.prototype);\n            const typeRecords = typeRegistry.get(type.prototype);\n            if (typeRecords) {\n                for (const key of Reflect.ownKeys(data)) {\n                    const ctor = typeRecords[key];\n                    ins[key] = ctor ? as(data[key], ctor) : data[key];\n                }\n            }\n            else {\n                Object.assign(ins, data);\n            }\n            return ins;\n        }\n    }\n    else {\n        return null;\n    }\n}\n/**\n * A decorator to instruct that the target property in the class is of a specific type.\n *\n * When parsing JSON via {@link parseAs}, this property is guaranteed to be of the given type.\n *\n * @remarks This decorator only supports TypeScript's `experimentalDecorators`.\n *\n * @example\n * ```ts\n * class Example {\n *     \\@type(Date)\n *     date: Date;\n * }\n * ```\n */\nexport function type(ctor) {\n    return (proto, prop) => {\n        const record = typeRegistry.get(proto);\n        if (record) {\n            record[prop] = ctor;\n        }\n        else {\n            typeRegistry.set(proto, { [prop]: ctor });\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    // @ts-ignore\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @param {any} obj\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @param {any} obj\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @param {any} obj\n * @returns {obj is { [x: string | symbol]: any; next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n * @param {any} obj\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @param {any} obj\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @param {any} obj\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @param {any} obj\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * @param {any} obj \n */\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { as, parseAs, type } from \"./index.ts\";\nJSON.parseAs = parseAs;\nJSON.as = as;\nJSON.type = type;\n//# sourceMappingURL=augment.js.map","if (!Symbol.asyncIterator) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol(\"Symbol.asyncIterator\")\n    });\n}\nexport const source = Symbol(\"GeneratorSource\");\nexport const status = Symbol(\"GeneratorStatus\");\nexport const result = Symbol(\"GeneratorResult\");\nexport class Thenable {\n    constructor(_source) {\n        this[source] = _source;\n        this[status] = \"suspended\";\n        this[result] = void 0;\n    }\n    then(onfulfilled, onrejected) {\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve(this[result]);\n        }\n        else if (this[status] === \"erred\") {\n            res = Promise.reject(this[source]);\n        }\n        else if (typeof this[source].then === \"function\") {\n            res = Promise.resolve(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = processIterator(this[source]);\n        }\n        else {\n            res = Promise.resolve(this[source]);\n        }\n        this[status] = \"closed\";\n        return res\n            .then(value => (this[result] = value))\n            .then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return Promise.resolve(this).then(null, onrejected);\n    }\n}\nexport class ThenableGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = { value: void 0, done: true };\n        }\n        else if (this[status] === \"erred\") {\n            return this.throw(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = this[source].next(value);\n        }\n        else {\n            res = { value: this[source], done: true };\n        }\n        if (res.done === true) {\n            this[status] = \"closed\";\n            this[result] = res.value;\n        }\n        return res;\n    }\n    return(value) {\n        this[status] = \"closed\";\n        this[result] = value;\n        if (this[source] && typeof this[source].return === \"function\") {\n            return this[source].return(value);\n        }\n        else {\n            return { value, done: true };\n        }\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return this[source].throw(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    ;\n}\nexport class ThenableAsyncGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve({ value: void 0, done: true });\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = Promise.resolve(this[source].next(value));\n        }\n        else {\n            res = Promise.resolve(this[source]).then(value => {\n                return { value, done: true };\n            });\n        }\n        return res.then(res => {\n            if (res.done === true) {\n                this[status] = \"closed\";\n                this[result] = res.value;\n            }\n            return res;\n        });\n    }\n    return(value) {\n        this[status] = \"closed\";\n        // The input value may be a promise-like object, using Promise.resolve()\n        // to guarantee the value is resolved.\n        return Promise.resolve(value).then(value => {\n            this[result] = value;\n            if (this[source] && typeof this[source].return === \"function\") {\n                return Promise.resolve(this[source].return(value));\n            }\n            else {\n                return Promise.resolve({ value, done: true });\n            }\n        });\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return Promise.resolve(this[source].throw(err));\n        }\n        else {\n            return Promise.reject(err);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport const ThenableGeneratorFunction = (function (fn) {\n    if (!(this instanceof ThenableGeneratorFunction)) {\n        return new ThenableGeneratorFunction(fn);\n    }\n    function anonymous(...args) {\n        try {\n            const source = fn.apply(this, args);\n            if (typeof source.then === \"function\" || isAsyncGenerator(source)) {\n                return new ThenableAsyncGenerator(source);\n            }\n            else {\n                return new ThenableGenerator(source);\n            }\n        }\n        catch (err) {\n            return Object.assign(new ThenableGenerator(err), {\n                [status]: \"erred\"\n            });\n        }\n    }\n    // HACK, let the returning function be an instance of\n    // ThenableGeneratorFunction.\n    anonymous.prototype = ThenableGeneratorFunction;\n    anonymous.__proto__ = this;\n    return anonymous;\n});\nThenableGeneratorFunction.create = function create(fn) {\n    return new ThenableGeneratorFunction(fn);\n};\nObject.setPrototypeOf(ThenableGeneratorFunction, Function);\nObject.setPrototypeOf(ThenableGeneratorFunction.prototype, Function.prototype);\nexport const create = ThenableGeneratorFunction.create;\nexport default create;\nfunction isAsyncGenerator(obj) {\n    return obj !== null\n        && typeof obj === \"object\"\n        && typeof obj.next === \"function\"\n        && typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\"\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\nfunction processIterator(iterator) {\n    return new Promise((resolve, reject) => {\n        function fulfilled(value) {\n            try {\n                step(iterator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            var _a;\n            try {\n                step((_a = iterator.throw) === null || _a === void 0 ? void 0 : _a.call(iterator, value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(item) {\n            Promise.resolve(item).then(result => {\n                result.done ? resolve(result.value) : new Promise(resolve => {\n                    resolve(result.value);\n                }).then(fulfilled, rejected);\n            });\n        }\n        step(iterator.next());\n    });\n}\n//# sourceMappingURL=index.js.map","export function isFunction(val) {\n    return typeof val === \"function\";\n}\n//# sourceMappingURL=util.js.map","/**\n * Calls a function safely and return errors when captured.\n * @module\n */\n// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport { isFunction } from \"./util.ts\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (returns instanceof ThenableAsyncGenerator) {\n        // special case\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\n//# sourceMappingURL=try.js.map","/**\n * Wraps a function for decorator pattern but keep its signature.\n * @module\n */\n/**\n * Wraps a function inside another function and returns a new function that\n * copies the original function's name and other properties.\n *\n * @example\n * ```ts\n * import wrap from \"@ayonli/jsext/wrap\";\n *\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","/**\n * Throttles function calls for frequent access.\n * @module\n */\nconst Cache = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = Promise.resolve(returns).finally(() => {\n                    cache.result = { value: cache.pending };\n                    cache.pending = undefined;\n                    cache.expires = Date.now() + duration;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (key === null || key === undefined || key === \"\") {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = Cache.get(key);\n        if (!cache) {\n            cache = { for: key };\n            Cache.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","/**\n * Debounces function calls for frequent access.\n * @module\n */\nconst registry = new Map();\nexport default function debounce(handler, options, reducer = undefined) {\n    const delay = typeof options === \"number\" ? options : options.delay;\n    const key = typeof options === \"number\" ? null : options.for;\n    const hasKey = key !== null && key !== undefined && key !== \"\";\n    let _cache = hasKey ? registry.get(key) : undefined;\n    if (!_cache) {\n        _cache = {\n            for: key,\n            tasks: [],\n            data: undefined,\n            timer: undefined,\n        };\n        if (hasKey) {\n            registry.set(key, _cache);\n        }\n    }\n    const cache = _cache;\n    return async function (data) {\n        if (typeof reducer === \"function\" && cache.data !== undefined) {\n            cache.data = reducer(cache.data, data);\n        }\n        else {\n            cache.data = data;\n        }\n        cache.timer && clearTimeout(cache.timer);\n        cache.timer = setTimeout(() => {\n            // Move tasks and cached data to new variables, so during the middle\n            // of handler running, new calls won't affect the running process.\n            const _tasks = cache.tasks;\n            const _data = cache.data;\n            cache.tasks = [];\n            cache.data = undefined;\n            if (hasKey) {\n                registry.delete(key);\n            }\n            const resolve = (result) => {\n                _tasks.forEach(({ resolve }) => resolve(result));\n            };\n            const reject = (err) => {\n                _tasks.forEach(({ reject }) => reject(err));\n            };\n            try {\n                const res = handler.call(this, _data);\n                if (typeof (res === null || res === void 0 ? void 0 : res.then) === \"function\") {\n                    res.then(resolve, reject);\n                }\n                else {\n                    resolve(res);\n                }\n            }\n            catch (err) {\n                reject(err);\n            }\n        }, delay);\n        return await new Promise((resolve, reject) => {\n            cache.tasks.push({ resolve, reject });\n        });\n    };\n}\n//# sourceMappingURL=debounce.js.map","var _a;\nexport const id = Symbol.for(\"id\");\nexport const isDeno = typeof Deno === \"object\";\nexport const isBun = typeof Bun === \"object\";\nexport const isNode = !isDeno && !isBun\n    && typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nexport const isNodePrior14 = isNode && parseInt(process.version.slice(1)) < 14;\nexport const IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\n// In Node.js, `process.argv` contains `--worker-thread` when the current thread is used as\n// a worker.\nconst isNodeWorkerThread = isNode && process.argv.includes(\"--worker-thread\");\nexport const isMainThread = !isNodeWorkerThread\n    && (isBun ? Bun.isMainThread : typeof WorkerGlobalScope === \"undefined\");\n//# sourceMappingURL=constants.js.map","/**\n * A channel implementation that transfers data across routines, even across\n * multiple threads, inspired by Golang.\n * @module\n */\nvar _a;\nimport { sequence } from \"./number/index.ts\";\nimport { id } from \"./parallel/constants.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst idGenerator = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\n/**\n * A channel implementation that transfers data across routines, even across\n * multiple threads, inspired by Golang.\n */\nexport class Channel {\n    constructor(capacity = 0) {\n        this[_a] = idGenerator.next().value;\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.error = null;\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a\n     *  receiver is available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed\n     *        to the buffer.\n     *      - Otherwise, this function will block until there is new space for\n     *        the data in the buffer.\n     */\n    send(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block\n     * until new data is available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error\n     *   immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    recv() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will\n            // be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = null;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the\n     * receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no\n     * longer used, it will be automatically released by the GC. However, if\n     * the channel is used in a `for await...of...` loop, closing the channel\n     * will allow the loop to break automatically.\n     *\n     * Moreover, if the channel is used between parallel threads, it will no\n     * longer be able to release automatically, must explicitly call this\n     * function in order to release for GC.\n     */\n    close(err = null) {\n        if (this.state !== 1) {\n            // prevent duplicated call\n            return;\n        }\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [(_a = id, Symbol.asyncIterator)]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const queueSize = channel.producers.length;\n                const value = await channel.recv();\n                return {\n                    value: value,\n                    done: channel.state === 0 && !bufSize && !queueSize,\n                };\n            }\n        };\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n    /** @deprecated This method is deprecated in favor of the `send()` method. */\n    push(data) {\n        return this.send(data);\n    }\n    /** @deprecated This method is deprecated in favor of the `recv()` method. */\n    pop() {\n        return this.recv();\n    }\n}\n/**\n * Inspired by Golang, cerates a {@link Channel} that can be used to transfer\n * data across routines.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a\n * non-buffered channel, the sender and receiver must be present at the same\n * time (theoretically), otherwise, the channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered\n * channel, data will be queued in the buffer first and then consumed by the\n * receiver in FIFO order. Once the buffer size reaches the capacity limit, no\n * more data will be sent unless there is new space available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to\n * never block and behave like a message queue.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will\n * always be delivered, even if there is no receiver at the moment.\n *\n * Also, unlike Golang, `await channel.recv()` does not prevent the program from\n * exiting.\n *\n * Channels can be used to send and receive streaming data between main thread\n * and worker threads wrapped by `parallel()`, but once used that way,\n * `channel.close()` must be explicitly called in order to release the channel\n * for garbage collection.\n *\n * @example\n * ```ts\n * // non-buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.send(123);\n * })();\n *\n * const num = await channel.recv();\n * console.log(num); // 123\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * // buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>(3);\n *\n * await channel.send(123);\n * await channel.send(456);\n * await channel.send(789);\n *\n * const num1 = await channel.recv();\n * const num2 = await channel.recv();\n * const num3 = await channel.recv();\n *\n * console.log(num1); // 123\n * console.log(num2); // 456\n * console.log(num3); // 789\n * ```\n *\n * @example\n * ```ts\n * // iterable\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of sequence(1, 5)) {\n *         await channel.send(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","/**\n * This module provides a mechanism to handle tasks sequentially and prevent\n * concurrency conflicts.\n * @module\n */\nimport chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.send(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents\n * concurrency conflicts, it returns a {@link Queue} instance that we can push\n * data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once\n * reached, the push operation will block until there is new space available.\n * By default, this option is not set and use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * import queue from \"@ayonli/jsext/queue\";\n *\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","/**\n * A mutual exclusion mechanism for concurrent operations and protecting shared\n * data.\n * @module\n */\nvar _a;\nimport BiMap from \"./collections/BiMap.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst _queue = Symbol.for(\"queue\");\nconst _value = Symbol.for(\"value\");\nconst _mutex = Symbol.for(\"mutex\");\nconst _unlocked = Symbol.for(\"unlocked\");\n/**\n * Mutual Exclusion prevents multiple coroutines from accessing the same shared\n * resource simultaneously.\n *\n * @remarks\n * Currently, the Mutex instance can not be used across multiple threads, but is\n * considering adding support for `parallel` threads.\n *\n * @example\n * ```ts\n * import { Mutex } from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n * import { random } from \"@ayonli/jsext/number\";\n * import { sleep } from \"@ayonli/jsext/promise\";\n *\n * const mutex = new Mutex(1);\n *\n * const concurrentOperation = func(async (defer) => {\n *     const shared = await mutex.lock();\n *     defer(() => shared.unlock()); // don't forget to unlock\n *\n *     const value1 = shared.value;\n *\n *     await otherAsyncOperations();\n *\n *     shared.value += 1\n *     const value2 = shared.value;\n *\n *     // Without mutex lock, the shared value may have been modified by other\n *     // calls during `await otherAsyncOperation()`, and the following\n *     // assertion will fail.\n *     console.assert(value1 + 1 === value2);\n * });\n *\n * async function otherAsyncOperations() {\n *     await sleep(100 * random(1, 10));\n * }\n *\n * await Promise.all([\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n * ]);\n * ```\n */\nexport class Mutex {\n    /**\n     * @param value The data associated to the mutex instance.\n     */\n    constructor(value) {\n        this[_a] = [];\n        this[_value] = value;\n    }\n    /**\n     * Acquires the lock of the mutex, optionally for modifying the shared\n     * resource.\n     */\n    async lock() {\n        await new Promise(resolve => {\n            if (this[_queue].length) {\n                this[_queue].push(resolve);\n            }\n            else {\n                this[_queue].push(resolve);\n                resolve();\n            }\n        });\n        const lock = Object.create(Mutex.Lock.prototype);\n        lock[_mutex] = this;\n        return lock;\n    }\n}\n_a = _queue;\n(function (Mutex) {\n    var _b;\n    class Lock {\n        constructor(mutex) {\n            this[_b] = false;\n            this[_mutex] = mutex;\n        }\n        /** Accesses the data associated to the mutex instance. */\n        get value() {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            return this[_mutex][_value];\n        }\n        set value(v) {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            this[_mutex][_value] = v;\n        }\n        /** Releases the current lock of the mutex. */\n        unlock() {\n            this[_unlocked] = true;\n            const queue = this[_mutex][_queue];\n            queue.shift();\n            const next = queue[0];\n            if (next) {\n                next();\n            }\n            else if (registry.hasValue(this[_mutex])) {\n                registry.deleteValue(this[_mutex]);\n            }\n        }\n        [(_b = _unlocked, Symbol.dispose)]() {\n            this.unlock();\n        }\n    }\n    Mutex.Lock = Lock;\n})(Mutex || (Mutex = {}));\nconst registry = new BiMap();\n/**\n * Acquires a mutex lock for the given key in order to perform concurrent\n * operations and prevent conflicts.\n *\n * If the key is currently being locked by other coroutines, this function will\n * block until the lock becomes available again.\n *\n * @example\n * ```ts\n * import lock from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n *\n * const key = \"lock_key\";\n *\n * export const concurrentOperation = func(async (defer) => {\n *     const ctx = await lock(key);\n *     defer(() => ctx.unlock()); // don't forget to unlock\n *\n *     // This block will never be run if there are other coroutines holding\n *     // the lock.\n *     //\n *     // Other coroutines trying to lock the same key will also never be run\n *     // before `unlock()`.\n * });\n * ```\n */\nexport default async function lock(key) {\n    let mutex = registry.get(key);\n    if (!mutex) {\n        registry.set(key, mutex = new Mutex(void 0));\n    }\n    return await mutex.lock();\n}\n//# sourceMappingURL=lock.js.map","import { IsPath, isBun, isDeno, isNode } from \"../constants.ts\";\nimport { trim } from \"../../string/index.ts\";\nconst moduleCache = new Map();\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let offset = \"import(\".length;\n        let start = str.lastIndexOf(\"import(\");\n        if (start === -1) {\n            offset = \"require(\".length;\n            start = str.lastIndexOf(\"require(\");\n        }\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += offset;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if ((isNode || isBun) && IsPath.test(_id)) {\n        if (!/\\.[cm]?(js|ts|)x?$/.test(_id)) { // if omitted suffix, add suffix\n            _id += isBun ? \".ts\" : \".js\";\n        }\n        else if (isNode) { // replace .ts/.mts/.cts to .js/.mjs/.cjs in Node.js\n            if (_id.endsWith(\".ts\")) {\n                _id = _id.slice(0, -3) + \".js\";\n            }\n            else if (_id.endsWith(\".mts\")) {\n                _id = _id.slice(0, -4) + \".mjs\";\n            }\n            else if (_id.endsWith(\".cts\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".cjs\";\n            }\n            else if (_id.endsWith(\".tsx\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".js\";\n            }\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport async function resolveModule(modId, baseUrl = undefined) {\n    let module;\n    if (isNode || isBun) {\n        const { fileURLToPath } = await import(\"url\");\n        const path = baseUrl ? fileURLToPath(new URL(modId, baseUrl).href) : modId;\n        module = await import(path);\n    }\n    else {\n        const url = new URL(modId, baseUrl).href;\n        module = moduleCache.get(url);\n        if (!module) {\n            if (isDeno) {\n                module = await import(url);\n                moduleCache.set(url, module);\n            }\n            else {\n                try {\n                    module = await import(url);\n                    moduleCache.set(url, module);\n                }\n                catch (err) {\n                    if (String(err).includes(\"Failed\")) {\n                        // The content-type of the response isn't application/javascript, try to\n                        // download it and load it with object URL.\n                        const res = await fetch(url);\n                        const buf = await res.arrayBuffer();\n                        const blob = new Blob([new Uint8Array(buf)], {\n                            type: \"application/javascript\",\n                        });\n                        const _url = URL.createObjectURL(blob);\n                        module = await import(_url);\n                        moduleCache.set(url, module);\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n        }\n    }\n    if (typeof module[\"default\"] === \"object\" && typeof module[\"default\"].default !== \"undefined\") {\n        module = module[\"default\"]; // CommonJS module with exports.default\n    }\n    return module;\n}\n//# sourceMappingURL=module.js.map","import { Channel } from \"../../chan.ts\";\nimport { id, isMainThread } from \"../constants.ts\";\nconst channelStore = new Map();\nexport function isChannelMessage(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"send\", \"close\"].includes(msg.type)\n        && typeof msg.channelId === \"number\";\n}\nexport async function handleChannelMessage(msg) {\n    const record = channelStore.get(msg.channelId);\n    if (!record)\n        return;\n    if (msg.type === \"send\") {\n        await record.raw.send(msg.value);\n    }\n    else if (msg.type === \"close\") {\n        const { value: err, channelId } = msg;\n        record.raw.close(err);\n        channelStore.delete(channelId);\n        if (isMainThread && record.writers.length > 1) {\n            // distribute the channel close event to all threads\n            record.writers.forEach(write => {\n                write(\"close\", err, channelId);\n            });\n        }\n    }\n}\nfunction wireChannel(channel, channelWrite) {\n    const channelId = channel[id];\n    if (!channelStore.has(channelId)) {\n        const send = channel.send.bind(channel);\n        const close = channel.close.bind(channel);\n        channelStore.set(channelId, {\n            channel,\n            raw: { send, close },\n            writers: [channelWrite],\n            counter: 0,\n        });\n        Object.defineProperties(channel, {\n            send: {\n                configurable: true,\n                writable: true,\n                value: async (data) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        const channel = record.channel;\n                        if (channel[\"state\"] !== 1) {\n                            throw new Error(\"the channel is closed\");\n                        }\n                        const write = record.writers[record.counter++ % record.writers.length];\n                        await Promise.resolve(write(\"send\", data, channelId));\n                    }\n                },\n            },\n            close: {\n                configurable: true,\n                writable: true,\n                value: (err = null) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        channelStore.delete(channelId);\n                        const channel = record.channel;\n                        record.writers.forEach(write => {\n                            write(\"close\", err, channelId);\n                        });\n                        // recover to the original methods\n                        Object.defineProperties(channel, {\n                            send: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.send,\n                            },\n                            close: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.close,\n                            },\n                        });\n                        channel.close(err);\n                    }\n                },\n            },\n        });\n    }\n    else {\n        const record = channelStore.get(channelId);\n        record.writers.push(channelWrite);\n    }\n}\nexport function wrapChannel(channel, channelWrite) {\n    wireChannel(channel, channelWrite);\n    return { \"@@type\": \"Channel\", \"@@id\": channel[id], \"capacity\": channel.capacity };\n}\nexport function unwrapChannel(obj, channelWrite) {\n    var _a, _b;\n    const channelId = obj[\"@@id\"];\n    let channel = (_a = channelStore.get(channelId)) === null || _a === void 0 ? void 0 : _a.channel;\n    if (!channel) {\n        channel = Object.assign(Object.create(Channel.prototype), {\n            [id]: channelId,\n            capacity: (_b = obj.capacity) !== null && _b !== void 0 ? _b : 0,\n            buffer: [],\n            producers: [],\n            consumers: [],\n            error: null,\n            state: 1,\n        });\n    }\n    wireChannel(channel, channelWrite);\n    return channel;\n}\n//# sourceMappingURL=channel.js.map","import { Channel } from \"../../chan.ts\";\nimport { isBun, isDeno, isNode, isNodePrior14 } from \"../constants.ts\";\nimport { handleChannelMessage, isChannelMessage, wrapChannel } from \"./channel.ts\";\nimport { isPlainObject } from \"../../object/index.ts\";\nimport { sequence } from \"../../number/index.ts\";\nimport { fromErrorEvent, fromObject, isAggregateError, isDOMException, toObject, } from \"../../error/index.ts\";\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\nlet gcTimer;\nexport const remoteTasks = new Map();\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function isCallResponse(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options) {\n    var _a;\n    let { adapter = \"worker_threads\", parallel } = options;\n    let entry = parallel.workerEntry;\n    if (isNode || isBun) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules\n                // (hope it exists).\n                if (isBun) {\n                    if (_filename.endsWith(\".ts\")) {\n                        entry = \"./node_modules/@ayonli/jsext/worker.ts\";\n                    }\n                    else {\n                        entry = \"./node_modules/@ayonli/jsext/bundle/worker.mjs\";\n                    }\n                }\n                else {\n                    entry = \"./node_modules/@ayonli/jsext/bundle/worker-node.mjs\";\n                }\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if (_dirname.endsWith(path.join(\"jsext\", \"bundle\"))) {\n                    // The application imports the bundled version of this module\n                    _dirname = path.dirname(_dirname);\n                }\n                else if ([\n                    path.join(\"jsext\", \"cjs\", \"parallel\", \"utils\"),\n                    path.join(\"jsext\", \"esm\", \"parallel\", \"utils\"),\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this module\n                    _dirname = path.resolve(_dirname, \"../../..\");\n                }\n                else {\n                    _dirname = path.resolve(_dirname, \"../..\");\n                }\n                if (isBun) {\n                    if (_filename.endsWith(\".ts\")) {\n                        entry = path.join(_dirname, \"worker.ts\");\n                    }\n                    else {\n                        entry = path.join(_dirname, \"bundle\", \"worker.mjs\");\n                    }\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker-node.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isNodePrior14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        if (isDeno) {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    if (import.meta.url.includes(\"jsr.io\")) {\n                        entry = \"jsr:@ayonli/jsext/worker.ts\";\n                    }\n                    else {\n                        entry = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n                    }\n                }\n                else {\n                    if (import.meta.url.includes(\"jsr.io\")) {\n                        entry = \"jsr:@ayonli/jsext/worker.ts\";\n                    }\n                    else {\n                        const paths = import.meta.url.split(\"/\").slice(0, -1);\n                        let _dirname = paths.join(\"/\");\n                        if (_dirname.endsWith(\"/jsext/bundle\")) {\n                            _dirname = paths.slice(0, -1).join(\"/\");\n                        }\n                        else if (_dirname.endsWith(\"/jsext/cjs/parallel/utils\")\n                            || _dirname.endsWith(\"/jsext/esm/parallel/utils\")) {\n                            _dirname = paths.slice(0, -3).join(\"/\");\n                        }\n                        else {\n                            _dirname = paths.slice(0, -2).join(\"/\");\n                        }\n                        entry = _dirname + \"/worker.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can\n            // bypass CORS security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nexport async function acquireWorker(taskId, parallel) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker({ parallel })).worker;\n                const handleMessage = (msg) => {\n                    var _a, _b, _c, _d;\n                    if (isChannelMessage(msg)) {\n                        handleChannelMessage(msg);\n                    }\n                    else if (isCallResponse(msg) && msg.taskId) {\n                        const task = remoteTasks.get(msg.taskId);\n                        if (!task)\n                            return;\n                        if (msg.type === \"return\" || msg.type === \"error\") {\n                            if (msg.type === \"error\") {\n                                const err = isPlainObject(msg.error)\n                                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                                    : msg.error;\n                                if (err instanceof Error &&\n                                    (err.message.includes(\"not be cloned\")\n                                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                                    )) {\n                                    Object.defineProperty(err, \"stack\", {\n                                        configurable: true,\n                                        enumerable: false,\n                                        writable: true,\n                                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                            + `at ${task.fn} (${task.module})`,\n                                    });\n                                }\n                                if (task.resolver) {\n                                    task.resolver.reject(err);\n                                    if (task.channel) {\n                                        task.channel.close();\n                                    }\n                                }\n                                else if (task.channel) {\n                                    task.channel.close(err);\n                                }\n                                else {\n                                    task.error = err;\n                                }\n                            }\n                            else {\n                                const value = unwrapReturnValue(msg.value);\n                                if (task.resolver) {\n                                    task.resolver.resolve(value);\n                                }\n                                else {\n                                    task.result = { value };\n                                }\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            poolRecord.tasks.delete(msg.taskId);\n                            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                                // Allow the main thread to exit if the event\n                                // loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        else if (msg.type === \"yield\") {\n                            const value = unwrapReturnValue(msg.value);\n                            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.send({ value, done: msg.done });\n                            if (msg.done) {\n                                // The final message of yield event is the\n                                // return value.\n                                handleMessage({\n                                    type: \"return\",\n                                    value,\n                                    taskId: msg.taskId,\n                                });\n                            }\n                        }\n                        else if (msg.type === \"gen\") {\n                            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n                        }\n                    }\n                };\n                const handleClose = (err) => {\n                    for (const taskId of poolRecord.tasks) {\n                        poolRecord.tasks.delete(taskId);\n                        const task = remoteTasks.get(taskId);\n                        if (task) {\n                            if (task.resolver) {\n                                task.resolver.reject(err);\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            else if (task.channel) {\n                                task.channel.close(err);\n                            }\n                            else {\n                                task.error = err;\n                            }\n                        }\n                    }\n                    workerPool = workerPool.filter(item => item !== poolRecord);\n                };\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to\n                            // the channel in the worker thread when the thread\n                            // is terminated. This situation often occurs when\n                            // using `run()` to call function and the `result()`\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if ((arg instanceof Exception)\n            || isDOMException(arg)\n            || isAggregateError(arg)) {\n            return toObject(arg);\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n                else if ((value instanceof Exception)\n                    || isDOMException(value)\n                    || isAggregateError(value)) {\n                    arg[key] = toObject(value);\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            arg = arg.map(item => {\n                if (item instanceof ArrayBuffer) {\n                    transferable.push(item);\n                    return item;\n                }\n                else if ((item instanceof Exception)\n                    || isDOMException(item)\n                    || isAggregateError(item)) {\n                    return toObject(item);\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nexport function unwrapReturnValue(value) {\n    if (isPlainObject(value) && (value[\"@@type\"] === \"Exception\" ||\n        value[\"@@type\"] === \"DOMException\" ||\n        value[\"@@type\"] === \"AggregateError\")) {\n        return fromObject(value);\n    }\n    return value;\n}\n//# sourceMappingURL=threads.js.map","/**\n * This module provides JavaScript the ability to run functions in parallel\n * threads and take advantage of multi-core CPUs, inspired by Golang.\n * @module\n */\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { isBun, isDeno, isNode, IsPath, isMainThread } from \"./parallel/constants.ts\";\nimport { resolveModule, sanitizeModuleId } from \"./parallel/utils/module.ts\";\nimport { acquireWorker, remoteTasks, wrapArgs } from \"./parallel/utils/threads.ts\";\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nasync function safeRemoteCall(worker, req, transferable, taskId) {\n    try {\n        worker.postMessage(req, transferable);\n    }\n    catch (err) {\n        remoteTasks.delete(taskId);\n        if (typeof worker[\"unref\"] === \"function\") {\n            worker.unref();\n        }\n        throw err;\n    }\n}\nfunction createRemoteCall(module, fn, args) {\n    const taskId = taskIdCounter.next().value;\n    remoteTasks.set(taskId, { module, fn });\n    let getWorker = acquireWorker(taskId, parallel);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then(async (worker) => {\n        await safeRemoteCall(worker, {\n            type: \"call\",\n            module,\n            fn,\n            args: _args,\n            taskId,\n        }, transferable, taskId);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                remoteTasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                remoteTasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return getWorker.then(() => new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            remoteTasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            remoteTasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                })).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                remoteTasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                remoteTasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                const { args, transferable } = wrapArgs([input], getWorker);\n                await safeRemoteCall(worker, {\n                    type: \"next\",\n                    args: args,\n                    taskId,\n                }, transferable, taskId);\n                return await task.channel.recv();\n            }\n        },\n        async return(value) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            const { args, transferable } = wrapArgs([value], getWorker);\n            await safeRemoteCall(worker, {\n                type: \"return\",\n                args: args,\n                taskId,\n            }, transferable, taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            await safeRemoteCall(worker, {\n                type: \"throw\",\n                args: [err],\n                taskId,\n            }, transferable, taskId);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(module, fn, args) {\n    const getReturns = resolveModule(module).then(mod => {\n        return mod[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    let lines = stackTrace.split(\"\\n\");\n    const offset = lines.findIndex(line => line === \"Error\");\n    if (offset !== -1) {\n        lines = lines.slice(offset); // fix for tsx in Node.js v16\n    }\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            if (IsPath.test(baseUrl)) {\n                baseUrl = \"file://\" + baseUrl;\n            }\n            else if (isDeno) {\n                baseUrl = \"file://\" + Deno.cwd() + \"/\";\n            }\n            else if (isNode || isBun) {\n                baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n            else if (typeof location === \"object\") {\n                baseUrl = location.href;\n            }\n            else {\n                baseUrl = \"\";\n            }\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module so its functions will be run in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS\n * module, **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * Data are cloned and transferred between threads via **Structured Clone**\n * **Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel}\n * can also be used to transfer data between threads. To do so, just passed a\n * channel instance to the threaded function. But be aware, channel can only be\n * used as a parameter, return a channel from the threaded function is not\n * allowed. Once passed, the data can only be transferred into and out-from the\n * function.\n *\n * The difference between using a channel and a generator function for streaming\n * processing is, for a generator function, `next(value)` is coupled with a\n * `yield value`, the process is blocked between **next** calls, channel doesn't\n * have this limit, we can use it to stream all the data into the function\n * before processing and receiving any result.\n *\n * The threaded function also supports `ArrayBuffer`s as transferable objects.\n * If an array buffer is presented as an argument or the direct property of an\n * argument (assume it's a plain object), or the array buffer is the return\n * value or the direct property of the return value (assume it's a plain object),\n * it automatically becomes a transferrable object and will be transferred to\n * the other thread instead of being cloned. This strategy allows us to easily\n * compose objects like `Request` and `Response` instances into plain objects\n * and pass them between threads without overhead.\n *\n * @remarks\n * If the current module is already in a worker thread, use this function won't\n * create another worker thread.\n *\n * @remarks\n * Cloning and transferring data between the main thread and worker threads are\n * very heavy and slow, worker threads are only intended to run CPU-intensive\n * tasks or divide tasks among multiple threads, they have no advantage when\n * performing IO-intensive tasks such as handling HTTP requests, always prefer\n * `cluster` module for that kind of purpose.\n *\n * @remarks\n * For error instances, only the following types are guaranteed to be sent and\n * received properly between threads.\n *\n * - `Error`\n * - `EvalError`\n * - `RangeError`\n * - `ReferenceError`\n * - `SyntaxError`\n * - `TypeError`\n * - `URIError`\n * - `AggregateError` (as arguments, return values, thrown values, or shallow\n *   object properties)\n * - `Exception` (as arguments, return values, thrown values, or shallow object\n *   properties)\n * - `DOMException` (as arguments, return values, thrown values, or shallow\n *   object properties)\n *\n * In order to handle errors properly between threads, throw well-known error\n * types or use `Exception` (or `DOMException`) with error names in the threaded\n * function.\n *\n * @example\n * ```ts\n * // regular or async function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * // generator or async generator function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // use channel\n * import parallel from \"@ayonli/jsext/parallel\";\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n * import { readAll } from \"@ayonli/jsext/read\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<{ value: number; done: boolean; }>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);      // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * console.log(await length); // 10\n * ```\n *\n * @example\n * ```ts\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * // use transferrable\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const arr = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n * const length = await mod.transfer(arr.buffer);\n *\n * console.log(length);     // 10\n * console.log(arr.length); // 0\n * ```\n *\n * @remarks\n * If the application is to be bundled, use the following syntax to link the\n * module instead, it will prevent the bundler from including the file and\n * rewriting the path.\n *\n * ```ts\n * const mod = parallel<typeof import(\"./examples/worker.mjs\")>(\"./examples/worker.mjs\");\n * ```\n */\nfunction parallel(module) {\n    let modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    return new Proxy(Object.create(null), {\n        get: (target, prop) => {\n            if (Reflect.has(target, prop)) {\n                return target[prop];\n            }\n            else if (typeof prop === \"symbol\") {\n                return undefined;\n            }\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not\n     * set, the program by default uses CPU core numbers as the limit.\n     */\n    parallel.maxWorkers = undefined;\n    /**\n     * In browsers, by default, the program loads the worker entry directly from\n     * GitHub, which could be slow due to poor internet connection, we can copy\n     * the entry file `bundle/worker.mjs` to a local path of our website and set\n     * this option to that path so that it can be loaded locally.\n     *\n     * Or, if the code is bundled, the program won't be able to automatically\n     * locate the entry file in the file system, in such case, we can also copy\n     * the entry file (`bundle/worker.mjs` for Bun, Deno and the browser,\n     * `bundle/worker-node.mjs` for Node.js) to a local directory and supply\n     * this option instead.\n     */\n    parallel.workerEntry = undefined;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map","/**\n * Runs a script in another thread and abort at any time.\n * @module\n */\nimport chan from \"./chan.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { fromErrorEvent, fromObject } from \"./error/index.ts\";\nimport { isNode, isBun, isDeno, IsPath } from \"./parallel/constants.ts\";\nimport { sanitizeModuleId } from \"./parallel/utils/module.ts\";\nimport { handleChannelMessage, isChannelMessage } from \"./parallel/utils/channel.ts\";\nimport { getMaxParallelism, createWorker, isCallResponse, wrapArgs, unwrapReturnValue, } from \"./parallel/utils/threads.ts\";\nimport parallel from \"./parallel.ts\";\nconst workerPools = new Map();\nlet gcTimer;\n// The worker consumer queue is nothing but a callback list, once a worker is\n// available, the runner pop a consumer and run the callback, which will retry\n// gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs the given `script` in a worker thread and abort the task at any time.\n *\n * This function is similar to {@link parallel}(), many features applicable to\n * `parallel()` are also applicable to `run()`, except the following:\n *\n * 1. The `script` can only be a filename, and is relative to the current\n *   working directory (or the current URL) if not absolute.\n * 2. Only one task is allow to run at a time for one worker thread, set\n *   {@link run.maxWorkers} to allow more tasks to be run at the same time if\n *   needed.\n * 3. By default, the worker thread is dropped after the task settles, set\n *   `keepAlive` option in order to reused it.\n *\n * @example\n * ```ts\n * // result\n * import run from \"@ayonli/jsext/run\";\n *\n * const job1 = await run(\"examples/worker.mjs\", [\"World\"]);\n * console.log(await job1.result()); // Hello, World\n * ```\n *\n * @example\n * ```ts\n * // iterate\n * import run from \"@ayonli/jsext/run\";\n *\n * const job2 = await run<string, [string[]]>(\n *     \"examples/worker.mjs\",\n *     [[\"foo\", \"bar\"]],\n *     { fn: \"sequence\" }\n * );\n * for await (const word of job2.iterate()) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // abort\n * import run from \"@ayonli/jsext/run\";\n * import _try from \"@ayonli/jsext/try\";\n *\n * const job3 = await run<string, [string]>(\"examples/worker.mjs\", [\"foobar\"], {\n *    fn: \"takeTooLong\",\n * });\n * await job3.abort();\n * const [err, res] = await _try(job3.result());\n * console.assert(err === null);\n * console.assert(res === undefined);\n * ```\n */\nasync function run(script, args, options) {\n    var _a;\n    const maxWorkers = run.maxWorkers || parallel.maxWorkers || await getMaxParallelism;\n    const fn = (options === null || options === void 0 ? void 0 : options.fn) || \"default\";\n    let modId = sanitizeModuleId(script);\n    let baseUrl = undefined;\n    if (isDeno) {\n        baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode || isBun) {\n        if (IsPath.test(modId)) {\n            // Only set baseUrl for relative modules, don't set it for node modules.\n            baseUrl = \"file://\" + process.cwd() + \"/\";\n        }\n    }\n    else if (typeof location === \"object\") {\n        baseUrl = location.href;\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    const req = {\n        type: \"call\",\n        module: modId,\n        fn,\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    const adapter = (options === null || options === void 0 ? void 0 : options.adapter) || \"worker_threads\";\n    const workerPool = (_a = workerPools.get(adapter)) !== null && _a !== void 0 ? _a : workerPools.set(adapter, []).get(adapter);\n    let poolRecord = workerPool.find(item => !item.busy);\n    if (poolRecord) {\n        poolRecord.busy = true;\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        // Fill the worker pool regardless the current call should keep-alive\n        // or not, this will make sure that the total number of workers will not\n        // exceed the `run.maxWorkers`. If the the call doesn't keep-alive the\n        // worker, it will be cleaned after the call.\n        workerPool.push(poolRecord = {\n            getWorker: createWorker({ parallel, adapter }),\n            adapter,\n            busy: true,\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                workerPools.forEach((workerPool, adapter) => {\n                    // GC: clean long-time unused workers\n                    const now = Date.now();\n                    const idealItems = [];\n                    workerPools.set(adapter, workerPool.filter(item => {\n                        const ideal = !item.busy\n                            && (now - item.lastAccess) >= 10000;\n                        if (ideal) {\n                            idealItems.push(item);\n                        }\n                        return !ideal;\n                    }));\n                    idealItems.forEach(async (item) => {\n                        const { worker } = await item.getWorker;\n                        if (typeof worker[\"terminate\"] === \"function\") {\n                            await worker\n                                .terminate();\n                        }\n                        else {\n                            worker.kill();\n                        }\n                    });\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        // Put the current call in the consumer queue if there are no workers\n        // available, once an existing call finishes, the queue will pop the its\n        // head consumer and retry.\n        return new Promise((resolve) => {\n            workerConsumerQueue.push(resolve);\n        }).then(() => run(modId, args, options));\n    }\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(async () => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        error = err;\n        await terminate();\n        handleClose(err, true);\n    }, options.timeout) : null;\n    const handleMessage = async (msg) => {\n        var _a, _b;\n        if (isChannelMessage(msg)) {\n            await handleChannelMessage(msg);\n        }\n        else if (isCallResponse(msg)) {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"return\" || msg.type === \"error\") {\n                if (msg.type === \"error\") {\n                    const err = isPlainObject(msg.error)\n                        ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                        : msg.error;\n                    if (err instanceof Error &&\n                        (err.message.includes(\"not be cloned\")\n                            || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                            || err.message.includes(\"Do not know how to serialize\") // JSON error\n                        )) {\n                        Object.defineProperty(err, \"stack\", {\n                            configurable: true,\n                            enumerable: false,\n                            writable: true,\n                            value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                + `at ${fn} (${modId})`,\n                        });\n                    }\n                    error = err;\n                }\n                else {\n                    result = { value: unwrapReturnValue(msg.value) };\n                }\n                (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n                handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            }\n            else if (msg.type === \"yield\") {\n                const value = unwrapReturnValue(msg.value);\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({\n                        type: \"return\",\n                        value,\n                    });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.send(value);\n                }\n            }\n        }\n    };\n    const handleClose = (err, terminated = false) => {\n        var _a, _b, _c;\n        timeout && clearTimeout(timeout);\n        if (!terminated) {\n            // Release before resolve.\n            release === null || release === void 0 ? void 0 : release();\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to gain the worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        else if (poolRecord) {\n            // Clean the pool before resolve.\n            // The `workerPool` of this key in the pool map may have been\n            // modified by other routines, we need to retrieve the newest value.\n            const remainItems = (_b = workerPools.get(adapter)) === null || _b === void 0 ? void 0 : _b.filter(record => record !== poolRecord);\n            if (remainItems === null || remainItems === void 0 ? void 0 : remainItems.length) {\n                workerPools.set(adapter, remainItems);\n            }\n            else {\n                workerPools.delete(adapter);\n            }\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_c = workerConsumerQueue.shift()) === null || _c === void 0 ? void 0 : _c();\n            }\n        }\n        if (err) {\n            error !== null && error !== void 0 ? error : (error = err);\n        }\n        if (error) {\n            if (resolver) {\n                resolver.reject(error);\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (channel) {\n                if (error instanceof Error) {\n                    channel.close(error);\n                }\n                else if (typeof error === \"string\") {\n                    channel.close(new Error(error));\n                }\n                else {\n                    // @ts-ignore\n                    channel.close(new Error(\"unknown error\", { cause: error }));\n                }\n            }\n        }\n        else {\n            result !== null && result !== void 0 ? result : (result = { value: void 0 });\n            if (resolver) {\n                resolver.resolve(result.value);\n            }\n            if (channel) {\n                channel.close();\n            }\n        }\n    };\n    const safeRemoteCall = async (worker, req, transferable = []) => {\n        try {\n            if (typeof worker[\"postMessage\"] === \"function\") {\n                worker.postMessage(req, transferable);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    worker.send(req, err => {\n                        err ? reject(err) : resolve();\n                    });\n                });\n            }\n        }\n        catch (err) {\n            if (typeof worker[\"unref\"] === \"function\") {\n                worker.unref();\n            }\n            error = err;\n            (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n            handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            throw err;\n        }\n    };\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            workerId = record.workerId;\n            worker.ref(); // prevent premature exit in the main thread\n            worker.on(\"message\", handleMessage);\n            worker.once(\"exit\", (code, signal) => {\n                if (!error && !result) {\n                    handleClose(new Error(`worker exited (${code !== null && code !== void 0 ? code : signal})`), true);\n                }\n            });\n            release = () => {\n                // allow the main thread to exit if the event loop is empty\n                worker.unref();\n                // Remove the event listener so that later calls will not mess\n                // up.\n                worker.off(\"message\", handleMessage);\n                worker.removeAllListeners(\"exit\");\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (error) {\n                // The worker take too long to start and timeout error already\n                // thrown.\n                await terminate();\n                throw error;\n            }\n            const { args } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req);\n        }\n        else if (isNode) {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleErrorEvent = (err) => {\n                if (!error && !result) {\n                    // In Node.js, worker will exit once erred.\n                    handleClose(err, true);\n                }\n            };\n            workerId = record.workerId;\n            worker.ref();\n            worker.on(\"message\", handleMessage);\n            worker.once(\"error\", handleErrorEvent);\n            release = () => {\n                worker.unref();\n                worker.off(\"message\", handleMessage);\n                worker.off(\"error\", handleErrorEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n        else { // isBun\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleCloseEvent = ((ev) => {\n                if (!error && !result) {\n                    handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"), true);\n                }\n            });\n            workerId = record.workerId;\n            worker.ref();\n            worker.onmessage = (ev) => handleMessage(ev.data);\n            worker.onerror = () => void worker.terminate(); // terminate once erred\n            worker.addEventListener(\"close\", handleCloseEvent);\n            release = () => {\n                worker.unref();\n                worker.onmessage = null;\n                worker.onerror = null;\n                worker.removeEventListener(\"close\", handleCloseEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n    }\n    else {\n        const record = await poolRecord.getWorker;\n        const worker = record.worker;\n        workerId = record.workerId;\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => {\n            var _a;\n            if (!error && !result) {\n                worker.terminate(); // ensure termination\n                handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"), true);\n            }\n        };\n        release = () => {\n            worker.onmessage = null;\n            worker.onerror = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = () => Promise.resolve(worker.terminate());\n        if (error) {\n            await terminate();\n            throw error;\n        }\n        const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n        req.args = args;\n        await safeRemoteCall(worker, req, transferable);\n    }\n    return {\n        workerId,\n        async abort(reason = undefined) {\n            timeout && clearTimeout(timeout);\n            if (reason) {\n                error = reason;\n            }\n            else {\n                result = { value: void 0 };\n            }\n            await terminate();\n            handleClose(null, true);\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n(function (run) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     * If not set, use the same setting as {@link parallel.maxWorkers}.\n     */\n    run.maxWorkers = undefined;\n    /** @deprecated set {@link parallel.workerEntry} instead */\n    run.workerEntry = undefined;\n})(run || (run = {}));\n// backward compatibility\nObject.defineProperties(run, {\n    workerEntry: {\n        set(v) {\n            parallel.workerEntry = v;\n        },\n        get() {\n            return parallel.workerEntry;\n        },\n    },\n});\nexport default run;\n//# sourceMappingURL=run.js.map","/**\n * Marks a function as deprecated and emit warnings when it is called.\n * @module\n */\nimport wrap from \"./wrap.ts\";\nconst isBun = typeof Bun === \"object\";\nconst warnedRecord = new Map();\nexport default function deprecate(target, ...args) {\n    var _a, _b, _c, _d;\n    if (typeof target === \"function\") {\n        const tip = (_a = args[0]) !== null && _a !== void 0 ? _a : \"\";\n        const once = (_b = args[1]) !== null && _b !== void 0 ? _b : false;\n        return wrap(target, function wrapped(fn, ...args) {\n            emitWarning(fn.name + \"()\", wrapped, tip, once, isBun ? 1 : 2);\n            return fn.apply(this, args);\n        });\n    }\n    const forFn = args[0];\n    const tip = (_c = args[1]) !== null && _c !== void 0 ? _c : \"\";\n    const once = (_d = args[2]) !== null && _d !== void 0 ? _d : false;\n    return emitWarning(target, forFn, tip, once, 1);\n}\nfunction emitWarning(target, forFn, tip, once, lineNum) {\n    var _a;\n    if (!once || !warnedRecord.has(forFn)) {\n        let trace = {};\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(trace, forFn);\n        }\n        else {\n            trace = new Error(\"\");\n        }\n        let lines = trace.stack.split(\"\\n\");\n        const offset = lines.findIndex(line => line === \"Error\");\n        if (offset !== -1) {\n            lines = lines.slice(offset); // fix for tsx in Node.js v16\n        }\n        let line = (_a = lines[lineNum]) === null || _a === void 0 ? void 0 : _a.trim();\n        let warning = `${target} is deprecated`;\n        if (tip) {\n            warning += \", \" + tip;\n        }\n        if (line) {\n            let start = line.indexOf(\"(\");\n            if (start !== -1) {\n                start += 1;\n                const end = line.indexOf(\")\", start);\n                line = line.slice(start, end);\n            }\n            warning += \" (\" + line + \")\";\n        }\n        console.warn(\"DeprecationWarning:\", warning);\n        once && warnedRecord.set(forFn, true);\n    }\n}\n//# sourceMappingURL=deprecate.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport debounce from \"./debounce.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport lock, { Mutex } from \"./lock.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport parallel from \"./parallel.ts\";\nimport run from \"./run.ts\";\nimport example from \"./example.ts\";\nimport deprecate from \"./deprecate.ts\";\nimport { isClass, isSubclassOf, mixin } from \"./class.ts\";\nimport mixins from \"./mixins.ts\";\nexport { Channel, Queue, Mutex };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    _try,\n    /** @deprecated use `_try` instead */\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    debounce,\n    queue,\n    lock,\n    read,\n    readAll,\n    chan,\n    parallel,\n    run,\n    example,\n    deprecate,\n    isClass,\n    isSubclassOf,\n    mixin,\n    mixins,\n};\nexport { jsext as default, _try, func, wrap, throttle, debounce, queue, lock, read, readAll, chan, parallel, run, example, deprecate, isClass, isSubclassOf, mixin, mixins, };\n//# sourceMappingURL=index.js.map","/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which\n * can be used to carry deferred jobs.\n * @module\n */\n// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which\n * can be used to carry deferred jobs that will be run after the main function\n * is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are\n * called in the LIFO order. Callbacks can be async functions if the main\n * function is an async function or an async generator function, and all the\n * running procedures will be awaited.\n *\n * @example\n * ```ts\n * import func from \"@ayonli/jsext/func\";\n * import * as fs from \"node:fs/promises\";\n *\n * export const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","/**\n * This module includes functions for reading data from various kinds of streams.\n * @module\n */\nimport chan from \"./chan.ts\";\nimport { isFunction } from \"./util.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.send.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to\n            // make sure when it calls the close() function, the iterator is\n            // automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * import { readAll } from \"@ayonli/jsext/read\";\n * import * as fs from \"node:fs\";\n *\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n *\n * console.log(chunks);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Writes unit tests as if writing examples, inspired by Golang.\n * @module\n */\n/**\n * Inspired by Golang's **Example as Test** design, creates a function that\n * carries example code with `// output:` comments, when the returned function\n * is called, it will automatically check if the actual output matches the one\n * declared in the comment.\n *\n * The example function receives a customized `console` object which will be\n * used to log outputs instead of using the built-in `console`.\n *\n * @remarks\n * This function is used to simplify the process of writing tests, currently,\n * it does not work in Bun, **tsx** and browsers, because Bun hasn't implement\n * the `Console` constructor and removes comments during runtime, **tsx** also\n * remove comments, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * import example from \"@ayonli/jsext/example\";\n *\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        });\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        }) !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk))\n                .join(\"\\n\")\n                .replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => {\n                                process.stdout.write(chunk, () => resolve());\n                            });\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","encoder","TextEncoder","_chars","chars","bytes","str","encode","Intl","Segmenter","segment","map","x","_trim","String","prototype","trim","_trimEnd","trimEnd","_trimStart","trimStart","call","indexOf","substring","random","min","max","floor","sequence","step","loop","id","hasOwn","obj","key","Object","hasOwnProperty","pick","keys","reduce","result","undefined","omit","keptKeys","Reflect","ownKeys","filter","includes","Error","forEach","isValid","value","is","NaN","Date","toString","isPlainObject","proto","getPrototypeOf","isClass","Number","Boolean","BigInt","Symbol","name0","name","isSubclassOf","ctor1","ctor2","mergeIfNotExists","source","mergeSuper","props","prop","setProp","mergeHierarchy","mixin","_super","desc","getOwnPropertyDescriptor","defineProperty","base","mixins","TypeError","remove","splice","rand","orderBy","order","items","item","sort","a","b","isArray","_a","_b","reverse","sum","values","compare","str1","str2","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","_bytes","words","matches","flat","_words","lines","_chunk","truncate","_truncate","stripEnd","suffix","endsWith","_stripEnd","stripStart","prefix","startsWith","_stripStart","byteLength","isAscii","printableOnly","test","_isAscii","isFloat","isNaN","isFinite","isNumeric","strict","type","isBetween","first","last","_random","ele","another","_equals","_split","uniq","Set","uniqBy","fn","Map","has","set","_uniqBy","shuffle","j","_shuffle","toShuffled","toReversed","toSorted","_orderBy","groupBy","groups","list","get","_groupBy","keyBy","record","_keyBy","Uint8Array","copy","src","dest","subarray","concat","arrays","ele1","ele2","hasOwnMethod","method","patch","target","sources","as","_type","primitiveMap","string","number","bigint","boolean","symbol","valueOf","typeOf","sanitize","deep","options","removeNulls","removeEmptyStrings","removeEmptyObjects","removeArrayItems","process","depth","create","sortKeys","getOwnPropertyNames","getOwnPropertySymbols","flatKeys","maxDepth","carrier","flatArrayIndices","path","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","deleteValue","delete","clear","CiMap","entries","callbackfn","thisArg","iterator","globalThis","message","code","configurable","enumerable","writable","cause","toObject","err","fromObject","Exception","DOMException","isAggregateError","isFirefoxOrSafari","navigator","userAgent","fromErrorEvent","event","error","shouldPatchStack","stack","filename","lineno","colno","isDOMException","AggregateError","toErrorEvent","line","callSite","find","start","lastIndexOf","end","index","parseInt","ErrorEvent","toJSON","typeRegistry","data","fromJSON","date","_c","Buffer","_d","_e","every","typeRecords","ins","assign","_f","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","JSON","parseAs","text","parse","Thenable","_source","then","onfulfilled","onrejected","res","fulfilled","e","rejected","done","ThenableGenerator","args","ThenableAsyncGenerator","ThenableGeneratorFunction","anonymous","apply","__proto__","isFunction","val","_try","returns","catch","input","wrap","wrapper","wrapped","bind","setPrototypeOf","Function","Cache","registry","for","isDeno","Deno","isBun","Bun","isNode","versions","node","isNodePrior14","version","IsPath","isMainThread","argv","WorkerGlobalScope","dispose","idGenerator","MAX_SAFE_INTEGER","Channel","capacity","buffer","producers","consumers","state","RangeError","send","consume","shift","_data","recv","produce","close","channel","bufSize","queueSize","pop","chan","Queue","handler","bufferSize","errorHandler","onError","_queue","_value","_mutex","_unlocked","Mutex","lock","Lock","mutex","ReferenceError","v","unlock","queue","moduleCache","sanitizeModuleId","_id","channelStore","isChannelMessage","msg","channelId","handleChannelMessage","raw","writers","write","wrapChannel","channelWrite","counter","defineProperties","wireChannel","workerIdCounter","gcTimer","workerPool","remoteTasks","getMaxParallelism","os","import","availableParallelism","cpus","hardwareConcurrency","isCallResponse","createWorker","adapter","parallel","entry","workerEntry","fileURLToPath","_filename","document","location","require","pathToFileURL","__filename","href","_documentCurrentScript","URL","baseURI","_dirname","dirname","join","some","fork","worker","stdio","serialization","workerId","pid","once","off","kind","Worker","threadId","onerror","ev","addEventListener","paths","url","fetch","blob","headers","buf","arrayBuffer","Blob","createObjectURL","wrapArgs","getWorker","transferable","arg","postMessage","ArrayBuffer","unwrapReturnValue","taskIdCounter","safeRemoteCall","req","taskId","unref","createRemoteCall","module","maxWorkers","poolRecord","tasks","lastAccess","now","handleMessage","task","resolver","generate","handleClose","on","_worker","onmessage","terminate","setInterval","idealItems","ideal","unrefTimer","add","ref","acquireWorker","_args","Infinity","createLocalCall","getReturns","modId","baseUrl","_url","default","resolveModule","mod","gen","extractBaseUrl","stackTrace","findIndex","cwd","captureStackTrace","trace","Proxy","parallel$1","workerPools","workerConsumerQueue","run","script","busy","kill","release","clearTimeout","keepAlive","terminated","remainItems","signal","removeAllListeners","handleErrorEvent","handleCloseEvent","removeEventListener","abort","iterate","run$1","warnedRecord","emitWarning","forFn","tip","lineNum","warning","console","warn","AsyncFunction","AsyncGeneratorFunction","jsext","try","func","callbacks","defer","cb","throttle","duration","noWait","handleCall","cache","pending","expires","finally","debounce","reducer","delay","hasKey","_cache","timer","_tasks","read","eventMap","handleBrowserErrorEvent","msgDesc","errDesc","closeDesc","cleanup","es","eventName","msgListener","_close","ws","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","readAll","example","expected","_expected","assert","Writable","Console","logs","decoder","TextDecoder","stdout","callback","_console","actual","decode","ok","suppress","handleResult","deprecate"],"mappings":"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"}