{"version":3,"file":"index.js","sources":["../array/index.ts","../string/index.ts","../number/index.ts","../uint8array/index.ts","../object/index.ts","../math/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../error/augment.ts","../json/index.ts","../external/check-iterable/index.mjs","../json/augment.ts","../external/thenable-generator/index.ts","../try.ts","../wrap.ts","../throttle.ts","../mixins.ts","../chan.ts","../queue.ts","../util.ts","../parallel.ts","../deprecate.ts","../run.ts","../index.ts","../func.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array. */\nexport function count(arr, ele) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === ele) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n/**\n * Orders the items of the array according to the specified comparable `key` (whose value\n * must either be a numeric or string).\n */\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map) {\n        const groups = new Map();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\n//# sourceMappingURL=index.js.map","import { chunk as _chunk } from \"../array/index.ts\";\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a == b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/** Returns a random string, the charset matches `/[0-9a-zA-Z]/`. */\nexport function random(length) {\n    const chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * chars.length);\n        str += chars[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches] : [];\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst _trim = String.prototype.trim;\nconst _trimEnd = String.prototype.trimEnd;\nconst _trimStart = String.prototype.trimStart;\n/** Removes leading and trailing spaces or custom characters of the string. */\nexport function trim(str, chars = \"\") {\n    if (!chars) {\n        return _trim.call(str);\n    }\n    else {\n        return trimEnd(trimStart(str, chars), chars);\n    }\n}\n/** Removes trailing spaces or custom characters of the string. */\nexport function trimEnd(str, chars = \"\") {\n    if (!chars) {\n        return _trimEnd.call(str);\n    }\n    else {\n        let i = str.length;\n        while (i-- && chars.indexOf(str[i]) !== -1) { }\n        return str.substring(0, i + 1);\n    }\n}\n/** Removes leading spaces or custom characters of the string. */\nexport function trimStart(str, chars = \"\") {\n    if (!chars) {\n        return _trimStart.call(str);\n    }\n    else {\n        let i = 0;\n        do { } while (chars.indexOf(str[i]) !== -1 && ++i);\n        return str.substring(i);\n    }\n}\nconst encoder = new TextEncoder();\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return encoder.encode(str).byteLength;\n}\n;\n//# sourceMappingURL=index.js.map","/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n */\nexport function isNumeric(value) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"string\") {\n        if (!Number.isNaN(value)) {\n            return true;\n        }\n        else {\n            try {\n                BigInt(value);\n                return true;\n            }\n            catch (_a) {\n                return false;\n            }\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { equals as _equals, split as _split, chunk as _chunk } from \"../array/index.ts\";\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compare this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n;\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n;\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n//# sourceMappingURL=index.js.map","/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import { compare, random, byteLength as _byteLength, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, words as _words, trim as _trim, trimEnd as _trimEnd, trimStart as _trimStart } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.trim = function trim(chars = \"\") {\n    return _trim(String(this), chars);\n};\nString.prototype.trimEnd = function trimEnd(chars = \"\") {\n    return _trimEnd(String(this), chars);\n};\nString.prototype.trimStart = function trimStart(chars = \"\") {\n    return _trimStart(String(this), chars);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, orderBy as _orderBy, shuffle as _shuffle, split as _split, uniq as _uniq } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return this[0];\n};\nArray.prototype.last = function last() {\n    return this[this.length - 1];\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function orderBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk } from \"./index.ts\";\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, isValid } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.isValid = isValid;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test passes. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","const internal = Symbol(\"internal\");\n/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    get size() {\n        return this[internal].size;\n    }\n    constructor(iterable = null) {\n        this[internal] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        this[internal].set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = this[internal].get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return this[internal].has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return this[internal].delete(id);\n    }\n    clear() {\n        this[internal].clear();\n    }\n    *entries() {\n        for (const { key, value } of this[internal].values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of this[internal].values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of this[internal].values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        this[internal].forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else {\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","import { omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    return omit(err, [\"toString\", \"toJSON\"]);\n}\nexport function fromObject(obj) {\n    var _a;\n    // @ts-ignore\n    if (!(obj === null || obj === void 0 ? void 0 : obj.name)) {\n        return null;\n    }\n    // @ts-ignore\n    let ctor = globalThis[obj.name];\n    if (!ctor) {\n        if (obj[\"name\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    const err = Object.create(ctor.prototype, {\n        message: {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: (_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\",\n        },\n    });\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\"name\", \"message\", \"stack\", \"cause\"].includes(key));\n    otherKeys.forEach(key => {\n        // @ts-ignore\n        err[key] = obj[key];\n    });\n    return err;\n}\n//# sourceMappingURL=index.js.map","import { Exception, fromObject, toObject } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","import { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nconst typeRegistry = new Map();\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    return as(data, type);\n}\nexport function as(data, type) {\n    if (data === null || data === undefined) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (data.type === \"Buffer\" && Array.isArray(data.data)) { // Node.js Buffer\n            if (typeof Buffer === \"function\" && type === Buffer) {\n                try {\n                    return Buffer.from(data.data);\n                }\n                catch (_d) {\n                    return null;\n                }\n            }\n            else if (typeof type.prototype[Symbol.iterator] === \"function\"\n                && typeof type[\"from\"] === \"function\") {\n                try {\n                    // Convert Node.js Buffer to TypedArray.\n                    return type.from(data.data);\n                }\n                catch (_e) {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        const keys = Object.getOwnPropertyNames(data);\n        const values = Object.values(data);\n        if (keys.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            values.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") {\n            // Assert the data is a TypedArray.\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            const err = fromObject(data);\n            if (err) {\n                // Support @JSON.type() decorator in Error constructors.\n                const typeRecords = typeRegistry.get(type.prototype);\n                if (typeRecords) {\n                    for (const key of Reflect.ownKeys(data)) {\n                        const ctor = typeRecords[key];\n                        if (ctor) {\n                            err[key] = as(data[key], ctor);\n                        }\n                    }\n                }\n            }\n            return err;\n        }\n        else {\n            const ins = Object.create(type.prototype);\n            const typeRecords = typeRegistry.get(type.prototype);\n            if (typeRecords) {\n                for (const key of Reflect.ownKeys(data)) {\n                    const ctor = typeRecords[key];\n                    ins[key] = ctor ? as(data[key], ctor) : data[key];\n                }\n            }\n            else {\n                Object.assign(ins, data);\n            }\n            return ins;\n        }\n    }\n    else {\n        return null;\n    }\n}\n/**\n * A decorator to instruct that the target property in the class is of a specific type.\n *\n * When parsing JSON via {@link parseAs}, this property is guaranteed to be of the given type.\n *\n * NOTE: this decorator only supports TypeScript's `experimentalDecorators`.\n *\n * @example\n * ```ts\n * class Example {\n *     \\@type(Date)\n *     date: Date;\n * }\n * ```\n */\nexport function type(ctor) {\n    return (proto, prop) => {\n        const record = typeRegistry.get(proto);\n        if (record) {\n            record[prop] = ctor;\n        }\n        else {\n            typeRegistry.set(proto, { [prop]: ctor });\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    // @ts-ignore\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @param {any} obj\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @param {any} obj\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @param {any} obj\n * @returns {obj is { [x: string | symbol]: any; next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n * @param {any} obj\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @param {any} obj\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @param {any} obj\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @param {any} obj\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * @param {any} obj \n */\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { as, parseAs, type } from \"./index.ts\";\nJSON.parseAs = parseAs;\nJSON.as = as;\nJSON.type = type;\n//# sourceMappingURL=augment.js.map","if (!Symbol.asyncIterator) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol(\"Symbol.asyncIterator\")\n    });\n}\nexport const source = Symbol(\"GeneratorSource\");\nexport const status = Symbol(\"GeneratorStatus\");\nexport const result = Symbol(\"GeneratorResult\");\nexport class Thenable {\n    constructor(_source) {\n        this[source] = _source;\n        this[status] = \"suspended\";\n        this[result] = void 0;\n    }\n    then(onfulfilled, onrejected) {\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve(this[result]);\n        }\n        else if (this[status] === \"erred\") {\n            res = Promise.reject(this[source]);\n        }\n        else if (typeof this[source].then === \"function\") {\n            res = Promise.resolve(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = processIterator(this[source]);\n        }\n        else {\n            res = Promise.resolve(this[source]);\n        }\n        this[status] = \"closed\";\n        return res\n            .then(value => (this[result] = value))\n            .then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return Promise.resolve(this).then(null, onrejected);\n    }\n}\nexport class ThenableGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = { value: void 0, done: true };\n        }\n        else if (this[status] === \"erred\") {\n            return this.throw(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = this[source].next(value);\n        }\n        else {\n            res = { value: this[source], done: true };\n        }\n        if (res.done === true) {\n            this[status] = \"closed\";\n            this[result] = res.value;\n        }\n        return res;\n    }\n    return(value) {\n        this[status] = \"closed\";\n        this[result] = value;\n        if (this[source] && typeof this[source].return === \"function\") {\n            return this[source].return(value);\n        }\n        else {\n            return { value, done: true };\n        }\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return this[source].throw(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    ;\n}\nexport class ThenableAsyncGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve({ value: void 0, done: true });\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = Promise.resolve(this[source].next(value));\n        }\n        else {\n            res = Promise.resolve(this[source]).then(value => {\n                return { value, done: true };\n            });\n        }\n        return res.then(res => {\n            if (res.done === true) {\n                this[status] = \"closed\";\n                this[result] = res.value;\n            }\n            return res;\n        });\n    }\n    return(value) {\n        this[status] = \"closed\";\n        // The input value may be a promise-like object, using Promise.resolve()\n        // to guarantee the value is resolved.\n        return Promise.resolve(value).then(value => {\n            this[result] = value;\n            if (this[source] && typeof this[source].return === \"function\") {\n                return Promise.resolve(this[source].return(value));\n            }\n            else {\n                return Promise.resolve({ value, done: true });\n            }\n        });\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return Promise.resolve(this[source].throw(err));\n        }\n        else {\n            return Promise.reject(err);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport const ThenableGeneratorFunction = (function (fn) {\n    if (!(this instanceof ThenableGeneratorFunction)) {\n        return new ThenableGeneratorFunction(fn);\n    }\n    function anonymous(...args) {\n        try {\n            const source = fn.apply(this, args);\n            if (typeof source.then === \"function\" || isAsyncGenerator(source)) {\n                return new ThenableAsyncGenerator(source);\n            }\n            else {\n                return new ThenableGenerator(source);\n            }\n        }\n        catch (err) {\n            return Object.assign(new ThenableGenerator(err), {\n                [status]: \"erred\"\n            });\n        }\n    }\n    // HACK, let the returning function be an instance of\n    // ThenableGeneratorFunction.\n    anonymous.prototype = ThenableGeneratorFunction;\n    anonymous.__proto__ = this;\n    return anonymous;\n});\nThenableGeneratorFunction.create = function create(fn) {\n    return new ThenableGeneratorFunction(fn);\n};\nObject.setPrototypeOf(ThenableGeneratorFunction, Function);\nObject.setPrototypeOf(ThenableGeneratorFunction.prototype, Function.prototype);\nexport const create = ThenableGeneratorFunction.create;\nexport default create;\nfunction isAsyncGenerator(obj) {\n    return obj !== null\n        && typeof obj === \"object\"\n        && typeof obj.next === \"function\"\n        && typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\"\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\nfunction processIterator(iterator) {\n    return new Promise((resolve, reject) => {\n        function fulfilled(value) {\n            try {\n                step(iterator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            var _a;\n            try {\n                step((_a = iterator.throw) === null || _a === void 0 ? void 0 : _a.call(iterator, value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(item) {\n            Promise.resolve(item).then(result => {\n                result.done ? resolve(result.value) : new Promise(resolve => {\n                    resolve(result.value);\n                }).then(fulfilled, rejected);\n            });\n        }\n        step(iterator.next());\n    });\n}\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (returns instanceof ThenableAsyncGenerator) {\n        // special case\n        returns = returns.then((value) => [null, value]);\n        return Promise.resolve(returns).catch((err) => [err, undefined]);\n    }\n    else if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns.then((value) => [null, value]);\n        return Promise.resolve(returns).catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\nexport function isFunction(val) {\n    return typeof val === \"function\";\n}\n//# sourceMappingURL=try.js.map","/**\n * Wraps a function inside another function and returns a new function that copies the original\n * function's name and other properties.\n *\n * @example\n * ```ts\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","const throttleCaches = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = returns.then(value => {\n                    cache.pending = undefined;\n                    cache.result = { value };\n                    cache.expires = Date.now() + duration;\n                    return value;\n                }).catch(error => {\n                    cache.pending = undefined;\n                    cache.result = { error };\n                    cache.expires = Date.now() + duration;\n                    throw error;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (!key) {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = throttleCaches.get(key);\n        if (!cache) {\n            cache = { for: key };\n            throttleCaches.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { hasOwn } from \"./object/index.ts\";\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport default function mixins(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n//# sourceMappingURL=mixins.js.map","export class Channel {\n    constructor(capacity = 0) {\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.error = null;\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a receiver is\n     *  available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed to the buffer.\n     *      - Otherwise, this function will block until there is new space for the data in the\n     *          buffer.\n     */\n    push(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block until new data is\n     * available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    pop() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = null;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no longer used, it\n     * will be automatically released by the GC. However, if the channel is used in a\n     * `for await...of...` loop, closing the channel will allow the loop to break automatically.\n     */\n    close(err = null) {\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const value = await channel.pop();\n                return { value: value, done: channel.state === 0 && !bufSize };\n            }\n        };\n    }\n}\n/**\n * Inspired by Golang, cerates a channel that can be used to transfer data within the program.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a non-buffered channel,\n * the sender and receiver must be present at the same time (theoretically), otherwise, the\n * channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered channel, data will\n * be queued in the buffer first and then consumed by the receiver in FIFO order. Once the\n * buffer size reaches the capacity limit, no more data will be sent unless there is new space\n * available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to never block and\n * behave like a message queue.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will always be delivered,\n * even if there is no receiver at the moment.\n *\n * Also, unlike Golang, `await channel.pop()` does not prevent the process from exiting.\n *\n * @example\n * ```ts\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.push(123);\n * })();\n *\n * const num = await channel.pop();\n * console.log(num);\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * const channel = chan<number>(3);\n *\n * await channel.push(123);\n * await channel.push(456);\n * await channel.push(789);\n *\n * const num1 = await channel.pop();\n * const num2 = await channel.pop();\n * const num3 = await channel.pop();\n *\n * console.log(num1);\n * console.log(num2);\n * console.log(num3);\n * // output:\n * // 123\n * // 456\n * // 789\n * ```\n *\n * @example\n * ```ts\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of Number.sequence(1, 5)) {\n *         await channel.push(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","import chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.push(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents concurrency\n * conflicts, it returns a {@link Queue} instance that we can push data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once reached, the push\n * operation will block until there is new space available. Bu default, this option is not set and\n * use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","var _a;\nexport const isNode = typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nconst moduleCache = new Map();\nexport async function resolveModule(modId, baseUrl = undefined) {\n    let module;\n    if (isNode) {\n        const { fileURLToPath } = await import(\"url\");\n        const path = baseUrl ? fileURLToPath(new URL(modId, baseUrl).href) : modId;\n        module = await import(path);\n    }\n    else {\n        const url = new URL(modId, baseUrl).href;\n        module = moduleCache.get(url);\n        if (!module) {\n            if (typeof Deno === \"object\") {\n                module = await import(url);\n                moduleCache.set(url, module);\n            }\n            else {\n                try {\n                    module = await import(url);\n                    moduleCache.set(url, module);\n                }\n                catch (err) {\n                    if (String(err).includes(\"Failed\")) {\n                        // The content-type of the response isn't application/javascript, try to\n                        // download it and load it with object URL.\n                        const res = await fetch(url);\n                        const buf = await res.arrayBuffer();\n                        const blob = new Blob([new Uint8Array(buf)], {\n                            type: \"application/javascript\",\n                        });\n                        const _url = URL.createObjectURL(blob);\n                        module = await import(_url);\n                        moduleCache.set(url, module);\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n        }\n    }\n    if (typeof module[\"default\"] === \"object\" && typeof module[\"default\"].default !== \"undefined\") {\n        module = module[\"default\"]; // CommonJS module with exports.default\n    }\n    return module;\n}\n//# sourceMappingURL=util.js.map","import { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport { fromObject, toObject } from \"./error/index.ts\";\nimport { isNode, resolveModule } from \"./util.ts\";\nconst IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst tasks = new Map;\nlet workerPool = [];\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let start = str.lastIndexOf(\"(\");\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += 1;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if (isNode &&\n        !/\\.[cm]?(js|ts|)x?$/.test(_id) && // omit suffix\n        IsPath.test(_id) // relative or absolute path\n    ) {\n        if (typeof Bun === \"object\") {\n            _id += \".ts\";\n        }\n        else {\n            _id += \".js\";\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport function createFFIRequest(init) {\n    const msg = { ...init, type: init.type || \"ffi\" };\n    if (!msg.baseUrl) {\n        if (typeof Deno === \"object\") {\n            msg.baseUrl = \"file://\" + Deno.cwd() + \"/\";\n        }\n        else if (isNode) {\n            if (IsPath.test(msg.script)) {\n                // Only set baseUrl for relative modules, don't set it for node modules.\n                msg.baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n        }\n        else if (typeof location === \"object\") {\n            msg.baseUrl = location.href;\n        }\n    }\n    return msg;\n}\nexport function isFFIResponse(msg) {\n    return msg && typeof msg === \"object\" && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options = {}) {\n    var _a, _b;\n    let { entry, adapter } = options;\n    if (isNode) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules (hope it exists).\n                entry = \"./node_modules/@ayonli/jsext/bundle/worker.mjs\";\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if ([\n                    path.join(\"jsext\", \"cjs\"),\n                    path.join(\"jsext\", \"esm\"),\n                    path.join(\"jsext\", \"bundle\")\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this module,\n                    // redirect to the root directory of this package.\n                    _dirname = path.dirname(_dirname);\n                }\n                if (typeof Bun === \"object\") {\n                    entry = path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const isPrior14 = parseInt(process.version.slice(1)) < 14;\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization: isPrior14 ? \"advanced\" : \"json\",\n            });\n            const workerId = worker.pid;\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else {\n            const { Worker } = await import(\"worker_threads\");\n            const options = {};\n            if (typeof Bun === \"object\") {\n                // Currently, Bun doesn't support `argv` option, use `env` for compatibility\n                // support.\n                options.env = { ...process.env, __WORKER_THREAD: \"true\" };\n            }\n            else {\n                options.argv = [\"--worker-thread\"];\n            }\n            const worker = new Worker(entry, options);\n            // `threadId` may not exist in Bun.\n            const workerId = (_a = worker.threadId) !== null && _a !== void 0 ? _a : workerIdCounter.next().value;\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n    }\n    else {\n        if (typeof Deno === \"object\") {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    entry = \"https://ayonli.github.io/jsext/bundle/worker-web.mjs\";\n                }\n                else {\n                    entry = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker-web.ts\"\n                    ].join(\"/\");\n                    // The application imports the compiled version of this module,\n                    // redirect to the source worker entry.\n                    if (entry.endsWith(\"/esm/worker-web.ts\")) {\n                        entry = entry.slice(0, -18) + \"/worker-web.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can bypass CORS\n            // security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker-web.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_b = res.headers.get(\"content-type\")) === null || _b === void 0 ? void 0 : _b.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nasync function acquireWorker(taskId) {\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    let worker;\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n        worker = poolRecord.worker;\n    }\n    else if (workerPool.length < parallel.maxWorkers) {\n        const res = await createWorker({ entry: parallel.workerEntry, adapter: \"worker_threads\" });\n        worker = res.worker;\n        const handleMessage = (msg) => {\n            var _a, _b;\n            if (isFFIResponse(msg) && msg.taskId) {\n                const task = tasks.get(msg.taskId);\n                if (!task) {\n                    return;\n                }\n                if (msg.type === \"error\") {\n                    const err = msg.error instanceof Error\n                        ? msg.error\n                        : fromObject(msg.error);\n                    if (task.resolver) {\n                        task.resolver.reject(err);\n                    }\n                    else if (task.channel) {\n                        task.channel.close(err);\n                    }\n                    else {\n                        task.error = err;\n                    }\n                }\n                else if (msg.type === \"return\") {\n                    if (task.resolver) {\n                        task.resolver.resolve(msg.value);\n                    }\n                    else {\n                        task.result = { value: msg.value };\n                    }\n                    if (task.channel) {\n                        task.channel.close();\n                    }\n                    if (poolRecord) {\n                        poolRecord.tasks.delete(msg.taskId);\n                        if (!poolRecord.tasks.size) {\n                            if (isNode) {\n                                // Allow the main thread to exit if the event loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        { // GC: clean long-time unused workers\n                            const now = Date.now();\n                            const idealItems = [];\n                            workerPool = workerPool.filter(item => {\n                                const ideal = !item.tasks.size && (now - item.lastAccess) >= 300000;\n                                if (ideal) {\n                                    idealItems.push(item);\n                                }\n                                return !ideal;\n                            });\n                            idealItems.forEach(item => {\n                                item.worker.terminate();\n                            });\n                        }\n                    }\n                }\n                else if (msg.type === \"yield\") {\n                    (_a = task.channel) === null || _a === void 0 ? void 0 : _a.push({ value: msg.value, done: msg.done });\n                    if (msg.done) {\n                        // The final message of yield event is the return value.\n                        handleMessage({\n                            type: \"return\",\n                            value: msg.value,\n                            taskId: msg.taskId,\n                        });\n                    }\n                }\n                else if (msg.type === \"gen\") {\n                    (_b = task.generate) === null || _b === void 0 ? void 0 : _b.call(task);\n                }\n            }\n        };\n        if (isNode) {\n            worker.on(\"message\", handleMessage);\n            await new Promise(resolve => worker.once(\"online\", resolve));\n        }\n        else {\n            worker.onmessage = (ev) => handleMessage(ev.data);\n        }\n        workerPool.push(poolRecord = {\n            worker,\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n        worker = poolRecord.worker;\n    }\n    poolRecord.tasks.add(taskId);\n    if (isNode) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nfunction createRemoteCall(modId, fn, args, baseUrl = undefined) {\n    let worker;\n    const taskId = taskIdCounter.next().value;\n    tasks.set(taskId, {});\n    return new ThenableAsyncGenerator({\n        async then(onfulfilled, onrejected) {\n            if (!worker) {\n                worker = await acquireWorker(taskId);\n                worker.postMessage(createFFIRequest({\n                    script: modId,\n                    fn,\n                    args,\n                    taskId,\n                    baseUrl: baseUrl\n                }));\n            }\n            const task = tasks.get(taskId);\n            if (task.error) {\n                tasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                tasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            tasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            tasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                }).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = tasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                tasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                tasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                if (!worker) {\n                    worker = await acquireWorker(taskId);\n                    worker.postMessage(createFFIRequest({\n                        script: modId,\n                        fn,\n                        args,\n                        taskId,\n                        baseUrl: baseUrl\n                    }));\n                    await new Promise((resolve) => {\n                        task.generate = resolve;\n                    });\n                }\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                worker.postMessage(createFFIRequest({\n                    script: modId,\n                    fn,\n                    args: [input],\n                    taskId,\n                    type: \"next\",\n                    baseUrl: baseUrl,\n                }));\n                return await task.channel.pop();\n            }\n        },\n        async return(value) {\n            tasks.delete(taskId);\n            worker === null || worker === void 0 ? void 0 : worker.postMessage(createFFIRequest({\n                script: modId,\n                fn,\n                args: [value],\n                taskId,\n                type: \"return\",\n                baseUrl: baseUrl,\n            }));\n            return { value, done: true };\n        },\n        async throw(err) {\n            tasks.delete(taskId);\n            worker === null || worker === void 0 ? void 0 : worker.postMessage(createFFIRequest({\n                script: modId,\n                fn,\n                args: [toObject(err)],\n                taskId,\n                type: \"throw\",\n                baseUrl: baseUrl,\n            }));\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(modId, fn, args, baseUrl = undefined) {\n    let generator;\n    return new ThenableAsyncGenerator({\n        async then(onfulfilled, onrejected) {\n            const module = await resolveModule(modId, baseUrl);\n            return Promise.resolve(module[fn](...args)).then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            if (!generator) {\n                const module = await resolveModule(modId, baseUrl);\n                generator = module[fn](...args);\n            }\n            return await generator.next(input);\n        },\n        async return(value) {\n            if (generator) {\n                return await generator.return(value);\n            }\n            else {\n                return { value, done: true };\n            }\n        },\n        async throw(err) {\n            if (generator) {\n                return await generator.throw(err);\n            }\n            else {\n                throw err;\n            }\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    const lines = stackTrace.split(\"\\n\");\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            baseUrl = \"file://\" + baseUrl;\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module and run its functions in worker threads.\n *\n * In Node.js and Bun, the `module` can be either a CommonJS module or an ES module,\n * **node_modules** and built-in modules are also supported.\n *\n * In browser and Deno, the `module` can only be an ES module.\n *\n * In Bun and Deno, the `module` can also be a TypeScript file.\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n */\nfunction parallel(module) {\n    const modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    return new Proxy(Object.create(null), {\n        get: (_, prop) => {\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (parallel.isMainThread) {\n                        return createRemoteCall(modId, prop, args, baseUrl);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args, baseUrl);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     */\n    parallel.maxWorkers = 16;\n    /**\n     * Whether the current thread is the main thread.\n     */\n    parallel.isMainThread = isNode\n        ? (!process.argv.includes(\"--worker-thread\") && !process.env[\"__WORKER_THREAD\"])\n        // @ts-ignore\n        : typeof WorkerGlobalScope === \"undefined\";\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map","import wrap from \"./wrap.ts\";\nconst isBun = typeof Bun === \"object\";\nconst warnedRecord = new Map();\nexport default function deprecate(target, ...args) {\n    var _a, _b, _c, _d;\n    if (typeof target === \"function\") {\n        const tip = (_a = args[0]) !== null && _a !== void 0 ? _a : \"\";\n        const once = (_b = args[1]) !== null && _b !== void 0 ? _b : false;\n        return wrap(target, function wrapped(fn, ...args) {\n            emitWarning(fn.name + \"()\", wrapped, tip, once, isBun ? 1 : 2);\n            return fn.apply(this, args);\n        });\n    }\n    const forFn = args[0];\n    const tip = (_c = args[1]) !== null && _c !== void 0 ? _c : \"\";\n    const once = (_d = args[2]) !== null && _d !== void 0 ? _d : false;\n    return emitWarning(target, forFn, tip, once, 1);\n}\nfunction emitWarning(target, forFn, tip, once, lineNum) {\n    var _a;\n    if (!once || !warnedRecord.has(forFn)) {\n        const capture = {};\n        Error.captureStackTrace(capture, forFn);\n        let line = (_a = capture.stack.split(\"\\n\")[lineNum]) === null || _a === void 0 ? void 0 : _a.trim();\n        let warning = `${target} is deprecated`;\n        if (tip) {\n            warning += \", \" + tip;\n        }\n        if (line) {\n            let start = line.indexOf(\"(\");\n            if (start !== -1) {\n                start += 1;\n                const end = line.indexOf(\")\", start);\n                line = line.slice(start, end);\n            }\n            warning += \" (\" + line + \")\";\n        }\n        console.warn(\"DeprecationWarning:\", warning);\n        once && warnedRecord.set(forFn, true);\n    }\n}\n//# sourceMappingURL=deprecate.js.map","import parallel, { createFFIRequest, createWorker, isFFIResponse, sanitizeModuleId } from \"./parallel.ts\";\nimport chan from \"./chan.ts\";\nimport deprecate from \"./deprecate.ts\";\nimport { fromObject } from \"./error/index.ts\";\nimport { isNode } from \"./util.ts\";\nlet workerPool = [];\n// The worker consumer queue is nothing but a callback list, once a worker is available, the runner\n// pop a consumer and run the callback, which will retry gaining the worker and retry the task.\nconst workerConsumerQueue = [];\nasync function run(script, args = undefined, options = undefined) {\n    if (options === null || options === void 0 ? void 0 : options.workerEntry) {\n        deprecate(\"options.workerEntry\", run, \"set `run.workerEntry` instead\");\n    }\n    const modId = sanitizeModuleId(script);\n    const msg = createFFIRequest({\n        script: modId,\n        fn: (options === null || options === void 0 ? void 0 : options.fn) || \"default\",\n        args: args !== null && args !== void 0 ? args : [],\n    });\n    const entry = (options === null || options === void 0 ? void 0 : options.workerEntry) || parallel.workerEntry;\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let poolRecord;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(() => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        if (resolver) {\n            resolver.reject(err);\n        }\n        else {\n            error = err;\n        }\n        terminate();\n    }, options.timeout) : null;\n    const handleMessage = (msg) => {\n        var _a;\n        if (isFFIResponse(msg)) {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"error\") {\n                return handleError(msg.error);\n            }\n            else if (msg.type === \"return\") {\n                if (options === null || options === void 0 ? void 0 : options.keepAlive) {\n                    // Release before resolve.\n                    release === null || release === void 0 ? void 0 : release();\n                    if (workerConsumerQueue.length) {\n                        // Queued consumer now has chance to gain the worker.\n                        (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n                    }\n                }\n                else {\n                    terminate();\n                }\n                if (resolver) {\n                    resolver.resolve(msg.value);\n                }\n                else {\n                    result = { value: msg.value };\n                }\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (msg.type === \"yield\") {\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({ type: \"return\", value: msg.value });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.push(msg.value);\n                }\n            }\n        }\n    };\n    const handleError = (err) => {\n        err = err instanceof Error\n            ? err\n            : (typeof err === \"object\" ? fromObject(err) : err);\n        error = err;\n        timeout && clearTimeout(timeout);\n        if (resolver) {\n            resolver.reject(err);\n        }\n        if (channel) {\n            channel.close(err);\n        }\n    };\n    const handleExit = () => {\n        var _a;\n        timeout && clearTimeout(timeout);\n        if (poolRecord) {\n            // Clean the pool before resolve.\n            workerPool = workerPool.filter(record => record !== poolRecord);\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        if (resolver) {\n            error ? resolver.reject(error) : resolver.resolve(void 0);\n        }\n        else if (!error && !result) {\n            result = { value: void 0 };\n        }\n        if (channel) {\n            channel.close(error);\n        }\n    };\n    if (isNode) {\n        if ((options === null || options === void 0 ? void 0 : options.adapter) === \"child_process\") {\n            let worker;\n            let ok = true;\n            poolRecord = workerPool.find(item => {\n                return item.adapter === \"child_process\" && !item.busy;\n            });\n            if (poolRecord) {\n                worker = poolRecord.worker;\n                workerId = poolRecord.workerId;\n                poolRecord.busy = true;\n            }\n            else if (workerPool.length < parallel.maxWorkers) {\n                const res = await createWorker({ entry, adapter: \"child_process\" });\n                worker = res.worker;\n                workerId = res.workerId;\n                ok = await new Promise((resolve) => {\n                    worker.once(\"exit\", () => {\n                        if (error) {\n                            // The child process took too long to start and cause timeout error.\n                            resolve(false);\n                        }\n                    });\n                    worker.once(\"message\", () => {\n                        worker.removeAllListeners(\"exit\");\n                        resolve(true);\n                    });\n                });\n                // Fill the worker pool regardless the current call should keep-alive or not,\n                // this will make sure that the total number of workers will not exceed the\n                // `run.maxWorkers`. If the the call doesn't keep-alive the worker, it will be\n                // cleaned after the call.\n                ok && workerPool.push(poolRecord = {\n                    workerId,\n                    worker,\n                    adapter: \"child_process\",\n                    busy: true,\n                });\n            }\n            else {\n                // Put the current call in the consumer queue if there are no workers available,\n                // once an existing call finishes, the queue will pop the its head consumer and\n                // retry.\n                return new Promise((resolve) => {\n                    workerConsumerQueue.push(resolve);\n                }).then(() => run(modId, args, options));\n            }\n            release = () => {\n                worker.unref(); // allow the main thread to exit if the event loop is empty\n                // Remove the event listener so that later calls will not mess up.\n                worker.off(\"message\", handleMessage);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (ok) {\n                worker.ref(); // prevent premature exit in the main thread\n                worker.send(msg);\n                worker.on(\"message\", handleMessage);\n                worker.once(\"error\", handleError);\n                worker.once(\"exit\", handleExit);\n            }\n        }\n        else {\n            let worker;\n            let ok = true;\n            poolRecord = workerPool.find(item => {\n                return item.adapter === \"worker_threads\" && !item.busy;\n            });\n            if (poolRecord) {\n                worker = poolRecord.worker;\n                workerId = poolRecord.workerId;\n                poolRecord.busy = true;\n            }\n            else if (workerPool.length < parallel.maxWorkers) {\n                const res = await createWorker({ entry, adapter: \"worker_threads\" });\n                worker = res.worker;\n                workerId = res.workerId;\n                ok = await new Promise((resolve) => {\n                    worker.once(\"exit\", () => {\n                        if (error) {\n                            // The child process took too long to start and cause timeout error.\n                            resolve(false);\n                        }\n                    });\n                    worker.once(\"online\", () => {\n                        worker.removeAllListeners(\"exit\");\n                        resolve(true);\n                    });\n                });\n                ok && workerPool.push(poolRecord = {\n                    workerId,\n                    worker,\n                    adapter: \"worker_threads\",\n                    busy: true,\n                });\n            }\n            else {\n                return new Promise((resolve) => {\n                    workerConsumerQueue.push(resolve);\n                }).then(() => run(modId, args, options));\n            }\n            release = () => {\n                worker.unref();\n                worker.off(\"message\", handleMessage);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (ok) {\n                worker.ref();\n                worker.postMessage(msg);\n                worker.on(\"message\", handleMessage);\n                worker.once(\"error\", handleError);\n                worker.once(\"messageerror\", handleError);\n                worker.once(\"exit\", handleExit);\n            }\n        }\n    }\n    else {\n        let worker;\n        poolRecord = workerPool.find(item => {\n            return item.adapter === \"worker_threads\" && !item.busy;\n        });\n        if (poolRecord) {\n            worker = poolRecord.worker;\n            workerId = poolRecord.workerId;\n            poolRecord.busy = true;\n        }\n        else if (workerPool.length < parallel.maxWorkers) {\n            const res = await createWorker({ entry });\n            worker = res.worker;\n            workerId = res.workerId;\n            workerPool.push(poolRecord = {\n                workerId,\n                worker,\n                adapter: \"worker_threads\",\n                busy: true,\n            });\n        }\n        else {\n            return new Promise((resolve) => {\n                workerConsumerQueue.push(resolve);\n            }).then(() => run(modId, args, options));\n        }\n        release = () => {\n            worker.onmessage = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = async () => {\n            await Promise.resolve(worker.terminate());\n            handleExit();\n        };\n        worker.postMessage(msg);\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => handleMessage(ev.error || new Error(ev.message));\n        worker.onmessageerror = () => {\n            handleError(new Error(\"unable to deserialize the message\"));\n        };\n    }\n    return {\n        workerId,\n        async abort(reason = undefined) {\n            timeout && clearTimeout(timeout);\n            if (reason) {\n                if (reason instanceof Error) {\n                    error = reason;\n                }\n                else if (typeof reason === \"string\") {\n                    error = new Error(reason);\n                }\n                else {\n                    // @ts-ignore\n                    error = new Error(\"operation aborted\", { cause: reason });\n                }\n            }\n            await terminate();\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n// backward compatibility\nObject.defineProperties(run, {\n    maxWorkers: {\n        set(v) {\n            parallel.maxWorkers = v;\n        },\n        get() {\n            return parallel.maxWorkers;\n        },\n    },\n    workerEntry: {\n        set(v) {\n            parallel.workerEntry = v;\n        },\n        get() {\n            return parallel.workerEntry;\n        },\n    },\n});\nexport default run;\n//# sourceMappingURL=run.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport mixins, { isSubclassOf } from \"./mixins.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport run from \"./run.ts\";\nimport parallel from \"./parallel.ts\";\nimport example from \"./example.ts\";\nimport deprecate from \"./deprecate.ts\";\nexport { Channel, Queue };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    mixins,\n    isSubclassOf,\n    chan,\n    queue,\n    read,\n    readAll,\n    run,\n    parallel,\n    example,\n    deprecate,\n};\nexport { jsext as default, _try, func, wrap, throttle, mixins, isSubclassOf, chan, queue, read, readAll, run, parallel, example, deprecate, };\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which can be used\n * to carry deferred jobs that will be run after the main function is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are called in the\n * LIFO order. Callbacks can be async functions if the main function is an async function or\n * an async generator function, and all the running procedures will be awaited.\n *\n * @example\n * ```ts\n * const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","import chan from \"./chan.ts\";\nimport { isFunction } from \"./try.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.push.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to make sure when\n            // it calls the close() function, the iterator is automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Inspired by Golang's **Example as Test** design, creates a function that carries example code\n * with `// output:` comments, when the returned function is called, it will automatically check if\n * the actual output matches the one declared in the comment.\n *\n * The example function receives a customized `console` object which will be used to log outputs\n * instead of using the built-in `console`.\n *\n * NOTE: this function is used to simplify the process of writing tests, it does not work in Bun and\n * browsers currently, because Bun hasn't implement the `Console` constructor and removes comments\n * during runtime, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => line.trim().toLowerCase() === \"// output:\");\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => line.trim().toLowerCase() === \"// output:\") !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk)).join(\"\\n\").replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => process.stdout.write(chunk, () => resolve()));\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","_trim","String","prototype","trim","_trimEnd","trimEnd","_trimStart","trimStart","str","chars","call","indexOf","substring","encoder","TextEncoder","sequence","min","max","step","loop","id","Uint8Array","_equals","_split","hasOwn","obj","key","Object","hasOwnProperty","pick","keys","reduce","result","undefined","omit","keptKeys","Reflect","ownKeys","filter","includes","Error","forEach","isValid","value","is","NaN","Date","toString","sum","values","compare","str1","str2","random","floor","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","words","matches","_words","_chunk","truncate","_truncate","byteLength","encode","Number","isFloat","isNaN","isFinite","isNumeric","type","BigInt","_a","isBetween","first","last","ele","another","uniq","Set","shuffle","j","_shuffle","toShuffled","toReversed","reverse","toSorted","fn","sort","orderBy","order","items","a","b","isArray","_b","_orderBy","groupBy","Map","groups","item","list","get","set","_groupBy","ele1","ele2","hasOwnMethod","method","proto","getPrototypeOf","getOwnPropertyDescriptor","patch","target","sources","source","as","TypeError","_type","primitiveMap","string","number","bigint","boolean","Boolean","symbol","Symbol","valueOf","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","test","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","has","deleteValue","delete","clear","internal","CiMap","entries","callbackfn","thisArg","iterator","globalThis","Exception","message","options","code","cause","defineProperty","configurable","enumerable","writable","toObject","err","fromObject","name","create","toJSON","typeRegistry","data","fromJSON","date","_c","Buffer","_d","_e","getOwnPropertyNames","map","every","typeRecords","ins","assign","_f","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","JSON","parseAs","text","parse","prop","record","Thenable","_source","then","onfulfilled","onrejected","res","fulfilled","e","rejected","done","ThenableGenerator","args","ThenableAsyncGenerator","ThenableGeneratorFunction","anonymous","apply","__proto__","isFunction","val","wrap","wrapper","wrapped","bind","setPrototypeOf","Function","throttleCaches","mergeIfNotExists","mergeSuper","props","setProp","mergeHierarchy","mixin","_super","desc","Channel","capacity","buffer","producers","consumers","error","state","RangeError","consume","shift","_data","pop","produce","close","channel","bufSize","chan","Queue","handler","bufferSize","errorHandler","catch","onError","isNode","process","versions","node","moduleCache","resolveModule","modId","baseUrl","module","fileURLToPath","import","path","URL","href","url","Deno","fetch","buf","arrayBuffer","blob","Blob","_url","createObjectURL","default","IsPath","workerIdCounter","MAX_SAFE_INTEGER","taskIdCounter","tasks","workerPool","sanitizeModuleId","strict","_id","start","lastIndexOf","end","Bun","createFFIRequest","init","msg","cwd","script","location","isFFIResponse","createWorker","entry","adapter","_filename","document","require","pathToFileURL","__filename","_documentCurrentScript","src","baseURI","argv","_dirname","dirname","join","some","endsWith","fork","worker","stdio","serialization","parseInt","version","workerId","pid","kind","Worker","env","__WORKER_THREAD","threadId","headers","acquireWorker","taskId","poolRecord","find","lastAccess","now","parallel","maxWorkers","workerEntry","handleMessage","task","resolver","unref","idealItems","ideal","terminate","generate","on","once","onmessage","ev","add","ref","extractBaseUrl","stackTrace","lines","callSite","startsWith","index","captureStackTrace","trace","stack","Proxy","isMainThread","postMessage","input","Infinity","createRemoteCall","generator","createLocalCall","WorkerGlobalScope","parallel$1","isBun","warnedRecord","deprecate","tip","emitWarning","forFn","lineNum","capture","line","warning","console","warn","workerConsumerQueue","run","release","clearTimeout","handleError","keepAlive","handleExit","ok","busy","removeAllListeners","off","kill","send","onerror","onmessageerror","abort","iterate","defineProperties","v","AsyncFunction","AsyncGeneratorFunction","jsext","try","_try","returns","func","callbacks","defer","cb","gen","throttle","for","duration","noWait","handleCall","cache","pending","expires","mixins","base","isSubclassOf","ctor1","ctor2","queue","read","eventMap","handleClose","handleBrowserErrorEvent","ErrorEvent","msgDesc","errDesc","closeDesc","cleanup","event","es","eventName","msgListener","addEventListener","removeEventListener","_close","ws","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","readAll","example","findIndex","expected","_expected","assert","Writable","Console","logs","decoder","TextDecoder","stdout","write","callback","_console","actual","decode","suppress","handleResult"],"mappings":"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"}