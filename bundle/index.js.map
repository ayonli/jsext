{"version":3,"file":"index.js","sources":["../array/base.ts","../class.ts","../object/index.ts","../math/index.ts","../bytes/index.ts","../string/index.ts","../number/index.ts","../array/index.ts","../util.ts","../promise/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../error/augment.ts","../json/index.ts","../external/check-iterable/index.mjs","../json/augment.ts","../external/thenable-generator/index.ts","../try.ts","../wrap.ts","../throttle.ts","../debounce.ts","../parallel/constants.ts","../chan.ts","../queue.ts","../lock.ts","../parallel/utils/module.ts","../parallel/utils/channel.ts","../path/util.ts","../path/index.ts","../parallel/utils/threads.ts","../parallel.ts","../run.ts","../deprecate.ts","../index.ts","../func.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array-like object. */\nexport function count(arr, item) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === item) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array-like object.\n */\nexport function equals(arr1, arr2) {\n    if (arr1 === arr2) {\n        return true;\n    }\n    else if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array-like object into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array-like object into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n//# sourceMappingURL=base.js.map","/**\n * This module includes functions for dealing with classes.\n * @module\n */\nimport { hasOwn } from \"./object/index.ts\";\n/**\n * Checks if a value is a class/constructor.\n *\n * @example\n * ```ts\n * import { isClass } from \"@ayonli/jsext/class\";\n *\n * console.assert(isClass(class Foo { }));\n * console.assert(!isClass(function foo() { }));\n * ```\n */\nexport function isClass(value) {\n    if (typeof value !== \"function\")\n        return false;\n    if ([String, Number, Boolean, BigInt, Symbol].includes(value)) {\n        return false;\n    }\n    // async function or arrow function\n    if (value.prototype === undefined)\n        return false;\n    // generator function or malformed inheritance\n    if (value.prototype.constructor !== value)\n        return false;\n    const str = value.toString();\n    // ES6 class\n    if (str.slice(0, 5) === \"class\")\n        return true;\n    const name0 = value.name[0];\n    if (name0 && name0 >= \"A\" && name0 <= \"Z\" && str.includes(\"[native code]\"))\n        return true;\n    return false;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * import { isSubclassOf } from \"@ayonli/jsext/class\";\n *\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop === \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport function mixin(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin === \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin === \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n//# sourceMappingURL=class.js.map","/**\n * Functions for dealing with objects.\n * @module\n */\nimport { isClass } from \"../class.ts\";\n/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"stack\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns a string representation or the constructor of the value's type.\n *\n * @remarks This function returns `\"class\"` for ES6 classes.\n * @remarks This function returns `\"null\"` for `null`.\n * @remarks This function returns `Object` for `Object.create(null)`.\n */\nexport function typeOf(value) {\n    var _a, _b;\n    if (value === undefined) {\n        return \"undefined\";\n    }\n    else if (value === null) {\n        return \"null\";\n    }\n    const type = typeof value;\n    if (type === \"function\") {\n        return isClass(value) ? \"class\" : \"function\";\n    }\n    else if (type === \"object\") {\n        return (_b = (_a = Object.getPrototypeOf(value)) === null || _a === void 0 ? void 0 : _a.constructor) !== null && _b !== void 0 ? _b : Object;\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n/**\n * Returns `true` is the given value is a plain object, that is, an object created by\n * the `Object` constructor or one with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value) {\n    if (typeof value !== \"object\" || value === null)\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === null || proto.constructor === Object;\n}\n/**\n * Creates an object base on the original object but without any invalid values\n * (except for `null`), and trims the value if it's a string.\n *\n * @remarks This function only operates on plain objects and arrays.\n */\nexport function sanitize(obj, deep = false, options = {}) {\n    const { removeNulls, removeEmptyStrings, removeEmptyObjects, removeArrayItems } = options;\n    return (function process(target, depth) {\n        if (typeof target === \"string\") {\n            return target.trim();\n        }\n        else if (Array.isArray(target)) {\n            const arr = !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n            if (removeArrayItems) {\n                return arr.filter(value => {\n                    if (value === null) {\n                        return !removeNulls;\n                    }\n                    else if (value === \"\") {\n                        return !removeEmptyStrings;\n                    }\n                    else if (isValid(value)) {\n                        if (typeof value !== \"object\") {\n                            return true;\n                        }\n                        else if (Array.isArray(value)) {\n                            return value.length > 0 || !removeEmptyObjects;\n                        }\n                        else if (isPlainObject(value)) {\n                            return Reflect.ownKeys(value).length > 0 || !removeEmptyObjects;\n                        }\n                        else {\n                            return true;\n                        }\n                    }\n                    else {\n                        return false;\n                    }\n                });\n            }\n            else {\n                return arr;\n            }\n        }\n        else if (isPlainObject(target)) {\n            return !depth || deep ? Reflect.ownKeys(target).reduce((result, key) => {\n                const value = process(target[key], depth + 1);\n                if (value === null) {\n                    if (!removeNulls) {\n                        result[key] = value;\n                    }\n                }\n                else if (value === \"\") {\n                    if (!removeEmptyStrings) {\n                        result[key] = value;\n                    }\n                }\n                else if (isValid(value)) {\n                    if (typeof value !== \"object\") {\n                        result[key] = value;\n                    }\n                    else if (Array.isArray(value)) {\n                        if (value.length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else if (isPlainObject(value)) {\n                        if (Reflect.ownKeys(value).length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else {\n                        result[key] = value;\n                    }\n                }\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Creates an object with sorted keys (in ascending order) of the original object.\n *\n * @remarks Symbol keys are not sorted and remain their original order.\n * @remarks This function only operates on plain objects and arrays.\n */\nexport function sortKeys(obj, deep = false) {\n    return (function process(target, depth) {\n        if (isPlainObject(target)) {\n            return !depth || deep ? [\n                ...Object.getOwnPropertyNames(target).sort(),\n                ...Object.getOwnPropertySymbols(target)\n            ].reduce((result, key) => {\n                result[key] = process(target[key], depth + 1);\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else if (Array.isArray(target)) {\n            return !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Create an object with flatted keys of the original object, the children\n * nodes' properties will be transformed to a string-represented path.\n *\n * @remarks This function only operates on plain objects and arrays.\n *\n * @param depth Default value: `1`.\n * @example\n * ```ts\n * const obj = flatKeys({ foo: { bar: \"hello\", baz: \"world\" } });\n * console.log(obj);\n * // { \"foo.bar\": \"hello\", \"foo.baz\": \"world\" }\n * ```\n */\nexport function flatKeys(obj, depth = 1, options = {}) {\n    var _a;\n    const maxDepth = depth;\n    const carrier = obj.constructor ? {} : Object.create(null);\n    const flatArrayIndices = (_a = options === null || options === void 0 ? void 0 : options.flatArrayIndices) !== null && _a !== void 0 ? _a : false;\n    if (!isPlainObject(obj) && (!Array.isArray(obj) || !flatArrayIndices)) {\n        return obj;\n    }\n    (function process(target, path, depth) {\n        if (depth === maxDepth) {\n            carrier[path] = target;\n        }\n        else if (Array.isArray(target) && depth) {\n            if (!flatArrayIndices) {\n                carrier[path] = target;\n            }\n            else {\n                target.forEach((value, i) => {\n                    process(value, path ? `${path}.${i}` : String(i), path ? depth + 1 : depth);\n                });\n            }\n        }\n        else if (isPlainObject(target) || (Array.isArray(target) && !depth)) {\n            Reflect.ownKeys(target).forEach(key => {\n                const value = target[key];\n                if (typeof key === \"symbol\") {\n                    if (depth === 0) { // only allow top-level symbol properties\n                        carrier[key] = value;\n                    }\n                }\n                else {\n                    process(value, path ? `${path}.${key}` : key, path ? depth + 1 : depth);\n                }\n            });\n        }\n        else {\n            carrier[path] = target;\n        }\n    })(obj, \"\", 0);\n    return carrier;\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for mathematical calculations.\n * @module\n */\n/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","/**\n * Functions for dealing with byte arrays (`Uint8Array`).\n * @module\n */\nimport { equals as _equals, split as _split, chunk as _chunk } from \"../array/base.ts\";\nimport { as } from \"../object/index.ts\";\nimport { sum } from \"../math/index.ts\";\nconst defaultEncoder = new TextEncoder();\nconst defaultDecoder = new TextDecoder();\n/**\n * A byte array is a `Uint8Array` that can be coerced to a string with `utf8`\n * encoding.\n */\nexport class ByteArray extends Uint8Array {\n    toString() {\n        return text(this);\n    }\n    toJSON() {\n        return {\n            type: \"ByteArray\",\n            data: Array.from(this),\n        };\n    }\n}\nexport default bytes;\nexport function bytes(data) {\n    if (typeof data === \"string\") {\n        return new ByteArray(defaultEncoder.encode(data).buffer);\n    }\n    else {\n        return new ByteArray(data);\n    }\n}\n/**\n * Converts the byte array (or `Uint8Array`) to a string.\n * @param encoding Default value: `utf8`.\n */\nexport function text(bytes, encoding = \"utf8\") {\n    var _a, _b;\n    if (encoding === \"hex\") {\n        if (typeof Buffer === \"function\") {\n            return ((_a = as(bytes, Buffer)) !== null && _a !== void 0 ? _a : Buffer.from(bytes)).toString(\"hex\");\n        }\n        else {\n            return bytes.reduce((str, byte) => {\n                return str + byte.toString(16).padStart(2, \"0\");\n            }, \"\");\n        }\n        ;\n    }\n    else if (encoding === \"base64\") {\n        if (typeof Buffer === \"function\") {\n            return ((_b = as(bytes, Buffer)) !== null && _b !== void 0 ? _b : Buffer.from(bytes)).toString(\"base64\");\n        }\n        else {\n            return btoa(defaultDecoder.decode(bytes));\n        }\n    }\n    else if (typeof Buffer === \"function\" && bytes instanceof Buffer) {\n        return bytes.toString(\"utf8\");\n    }\n    else {\n        return defaultDecoder.decode(bytes);\n    }\n}\n/** Copies bytes from `src` array to `dest` and returns the number of bytes copied. */\nexport function copy(src, dest) {\n    if (src.length > dest.length) {\n        src = src.subarray(0, dest.length);\n    }\n    dest.set(src);\n    return src.length;\n}\n/** Like `Buffer.concat` but for pure `Uint8Array`. */\nexport function concat(...arrays) {\n    const length = sum(...arrays.map(arr => arr.length));\n    const ctor = arrays[0].constructor;\n    const result = new ctor(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/** Checks if the two byte arrays are equal to each other. */\nexport function equals(arr1, arr2) {\n    if (arr1.length < 1000) {\n        return _equals(arr1, arr2);\n    }\n    else if (arr1 === arr2) {\n        return true;\n    }\n    else if (arr1.length !== arr2.length) {\n        return false;\n    }\n    const len = arr1.length;\n    const compressible = Math.floor(len / 4);\n    const _arr1 = new Uint32Array(arr1.buffer, 0, compressible);\n    const _arr2 = new Uint32Array(arr2.buffer, 0, compressible);\n    for (let i = compressible * 4; i < len; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    for (let i = 0; i < _arr1.length; i++) {\n        if (_arr1[i] !== _arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the byte array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the byte array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for dealing with strings.\n * @module\n */\nimport { chunk as _chunk } from \"../array/base.ts\";\nimport _bytes from \"../bytes/index.ts\";\nconst _chars = chars;\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a === b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/**\n * Returns a random string restricted by `length` (character-wise).\n *\n * @param chars Default value: `0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`.\n */\nexport function random(length, chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") {\n    const arr = _chars(chars);\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * arr.length);\n        str += arr[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/**\n * Returns the bytes of the given string.\n * @deprecated use the `bytes` module instead.\n */\nexport function bytes(str) {\n    return _bytes(str);\n}\n/** Returns the characters of the string (emojis are supported). */\nexport function chars(str) {\n    if (typeof (Intl === null || Intl === void 0 ? void 0 : Intl.Segmenter) === \"function\") {\n        return Array.from(new Intl.Segmenter().segment(str))\n            .map((x) => x.segment);\n    }\n    else {\n        return Array.from(str);\n    }\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches].map(sub => sub.split(\"_\")).flat() : [];\n}\n/** Splits the string into lines by `\\n` or `\\r\\n`. */\nexport function lines(str) {\n    return str.split(/\\r?\\n/);\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst _trim = String.prototype.trim;\nconst _trimEnd = String.prototype.trimEnd;\nconst _trimStart = String.prototype.trimStart;\n/** Removes leading and trailing spaces or custom characters of the string. */\nexport function trim(str, chars = \"\") {\n    if (!chars) {\n        return _trim.call(str);\n    }\n    else {\n        return trimEnd(trimStart(str, chars), chars);\n    }\n}\n/** Removes trailing spaces or custom characters of the string. */\nexport function trimEnd(str, chars = \"\") {\n    if (!chars) {\n        return _trimEnd.call(str);\n    }\n    else {\n        let i = str.length;\n        while (i-- && chars.indexOf(str[i]) !== -1) { }\n        return str.substring(0, i + 1);\n    }\n}\n/** Removes leading spaces or custom characters of the string. */\nexport function trimStart(str, chars = \"\") {\n    if (!chars) {\n        return _trimStart.call(str);\n    }\n    else {\n        let i = 0;\n        do { } while (chars.indexOf(str[i]) !== -1 && ++i);\n        return str.substring(i);\n    }\n}\n/** Removes the given suffix of the string if present. */\nexport function stripEnd(str, suffix) {\n    if (str.endsWith(suffix)) {\n        return str.slice(0, -suffix.length);\n    }\n    return str;\n}\n/** Removes the given prefix of the string if present. */\nexport function stripStart(str, prefix) {\n    if (str.startsWith(prefix)) {\n        return str.slice(prefix.length);\n    }\n    return str;\n}\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return _bytes(str).byteLength;\n}\n/** Checks if all characters in this string are within the ASCII range. */\nexport function isAscii(str, printableOnly = false) {\n    return printableOnly ? /^[-~]+$/.test(str) : /^[\\x00-\\x7E]+$/.test(str);\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for dealing with numbers.\n * @module\n */\n/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n *\n * @remarks `NaN` is not considered numeric.\n *\n * @param strict Only returns `true` when the value is of type `number`.\n */\nexport function isNumeric(value, strict = false) {\n    const type = typeof value;\n    if (strict) {\n        return type === \"number\" && !Number.isNaN(value);\n    }\n    else if (type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"number\") {\n        return !Number.isNaN(value);\n    }\n    else if (type === \"string\" && value) {\n        try {\n            BigInt(value);\n            return true;\n        }\n        catch (_a) {\n            return !Number.isNaN(Number(value));\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Generates a sequence of numbers from `min` to `max` (inclusive). */\nexport function range(min, max, step = 1) {\n    return sequence(min, max, step);\n}\n/**\n * Creates a generator that produces sequential numbers from `1` to\n * `Number.MAX_SAFE_INTEGER`, useful for generating unique IDs.\n *\n * @param loop Repeat the sequence when the end is reached.\n */\nexport function serial(loop = false) {\n    return sequence(1, Number.MAX_SAFE_INTEGER, 1, loop);\n}\n/**\n * Creates a generator that produces sequential numbers from `min` to `max` (inclusive).\n * @deprecated use {@link range} and {@link serial} instead.\n */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for dealing with arrays.\n * @module\n */\nimport { isSubclassOf } from \"../class.ts\";\nimport { random as rand } from \"../number/index.ts\";\nimport { count as _count, equals as _equals, split as _split, chunk as _chunk, } from \"./base.ts\";\n/** Returns the first element of the array, or `undefined` if the array is empty. */\nexport function first(arr) {\n    return arr[0];\n}\n/** Returns the last element of the array, or `undefined` if the array is empty. */\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n/** Returns a random element of the array, or `undefined` if the array is empty. */\nexport function random(arr, remove = false) {\n    if (!arr.length) {\n        return undefined;\n    }\n    else if (arr.length === 1) {\n        if (remove) {\n            return arr.splice(0, 1)[0];\n        }\n        else {\n            return arr[0];\n        }\n    }\n    const i = rand(0, arr.length - 1);\n    if (remove) {\n        return arr.splice(i, 1)[0];\n    }\n    else {\n        return arr[i];\n    }\n}\n/** Counts the occurrence of the element in the array. */\nexport function count(arr, item) {\n    return _count(arr, item);\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Returns a subset of the array that contains only unique items filtered by the\n * given callback function.\n */\nexport function uniqBy(arr, fn) {\n    const map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        const key = fn(item, i);\n        map.has(key) || map.set(key, item);\n    }\n    return [...map.values()];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    if (typeof key === \"function\") {\n        return orderBy(items.map((item, i) => ({\n            key: key(item, i),\n            value: item,\n        })), \"key\", order).map(({ value }) => value);\n    }\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const groups = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\nexport function keyBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const map = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            map.set(key, item);\n        }\n        return map;\n    }\n    else {\n        const record = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            record[key] = item;\n        }\n        return record;\n    }\n}\n//# sourceMappingURL=index.js.map","export function isFunction(val) {\n    return typeof val === \"function\";\n}\nexport function unrefTimer(timer) {\n    if (typeof timer === \"object\" && typeof timer.unref === \"function\") {\n        timer.unref();\n    }\n    else if (typeof Deno === \"object\" && typeof Deno.unrefTimer === \"function\") {\n        Deno.unrefTimer(timer);\n    }\n}\n//# sourceMappingURL=util.js.map","/**\n * Functions for promise/async context handling.\n * @module\n */\nimport { unrefTimer } from \"../util.ts\";\n/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => unrefTimer(setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms)))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test passes. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await sleep(0);\n    }\n}\n//# sourceMappingURL=index.js.map","import { compare, random, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, bytes as _bytes, chars as _chars, words as _words, lines as _lines, trim as _trim, trimEnd as _trimEnd, trimStart as _trimStart, stripEnd as _stripEnd, stripStart as _stripStart, byteLength as _byteLength, isAscii as _isAscii, } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.bytes = function bytes() {\n    return _bytes(String(this));\n};\nString.prototype.chars = function chars() {\n    return _chars(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.lines = function lines() {\n    return _lines(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.trim = function trim(chars = \"\") {\n    return _trim(String(this), chars);\n};\nString.prototype.trimEnd = function trimEnd(chars = \"\") {\n    return _trimEnd(String(this), chars);\n};\nString.prototype.trimStart = function trimStart(chars = \"\") {\n    return _trimStart(String(this), chars);\n};\nString.prototype.stripEnd = function stripEnd(suffix) {\n    return _stripEnd(String(this), suffix);\n};\nString.prototype.stripStart = function stripStart(prefix) {\n    return _stripStart(String(this), prefix);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\nString.prototype.isAscii = function isAscii(printableOnly = false) {\n    return _isAscii(String(this), printableOnly);\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, range, serial, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.range = range;\nNumber.serial = serial;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { first as _first, last as _last, chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, keyBy as _keyBy, orderBy as _orderBy, random as _random, shuffle as _shuffle, split as _split, uniq as _uniq, uniqBy as _uniqBy, } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return _first(this);\n};\nArray.prototype.last = function last() {\n    return _last(this);\n};\nArray.prototype.random = function random(remove = false) {\n    return _random(this, remove);\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.uniqBy = function uniqBy(fn) {\n    return _uniqBy(this, fn);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function groupBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\nArray.prototype.keyBy = function keyBy(fn, type = Object) {\n    return _keyBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk, concat, copy } from \"./index.ts\";\nUint8Array.copy = copy;\nUint8Array.concat = concat;\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, typeOf, isValid, isPlainObject, sanitize, sortKeys, flatKeys, } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.typeOf = typeOf;\nObject.isValid = isValid;\nObject.isPlainObject = isPlainObject;\nObject.sanitize = sanitize;\nObject.sortKeys = sortKeys;\nObject.flatKeys = flatKeys;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        super.set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = super.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return super.has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return super.delete(id);\n    }\n    *entries() {\n        for (const { key, value } of super.values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of super.values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of super.values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        super.forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else if (typeof options === \"string\") {\n            Object.defineProperty(this, \"name\", {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: options,\n            });\n        }\n        else {\n            if (options.name) {\n                Object.defineProperty(this, \"name\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.name,\n                });\n            }\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","/**\n * Functions for converting errors to/from other types of objects.\n * @module\n */\nimport { isPlainObject, omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    if (!(err instanceof Error) && err[\"name\"] && err[\"message\"]) { // Error-like\n        err = fromObject(err, Error);\n    }\n    const obj = {\n        \"@@type\": err.constructor.name,\n        ...omit(err, [\"toString\", \"toJSON\", \"__callSiteEvals\"]),\n    };\n    if (obj[\"@@type\"] === \"AggregateError\" && Array.isArray(obj[\"errors\"])) {\n        obj[\"errors\"] = obj[\"errors\"].map(item => {\n            return item instanceof Error ? toObject(item) : item;\n        });\n    }\n    return obj;\n}\nexport function fromObject(obj, ctor = undefined) {\n    var _a, _b;\n    // @ts-ignore\n    if (!(obj === null || obj === void 0 ? void 0 : obj.name)) {\n        return null;\n    }\n    // @ts-ignore\n    ctor || (ctor = (globalThis[obj[\"@@type\"] || obj.name] || globalThis[obj.name]));\n    if (!ctor) {\n        if (obj[\"@@type\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    let err;\n    if (ctor.name === \"DOMException\" && typeof DOMException === \"function\") {\n        err = new ctor((_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\", obj[\"name\"]);\n    }\n    else {\n        err = Object.create(ctor.prototype, {\n            message: {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: (_b = obj[\"message\"]) !== null && _b !== void 0 ? _b : \"\",\n            },\n        });\n    }\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\n        \"@@type\",\n        \"name\",\n        \"message\",\n        \"stack\",\n        \"cause\"\n    ].includes(key));\n    otherKeys.forEach(key => {\n        var _a;\n        // @ts-ignore\n        (_a = err[key]) !== null && _a !== void 0 ? _a : (err[key] = obj[key]);\n    });\n    // @ts-ignore\n    if (isAggregateError(err) && Array.isArray(err[\"errors\"])) {\n        err[\"errors\"] = err[\"errors\"].map(item => {\n            return isPlainObject(item) ? fromObject(item) : item;\n        });\n    }\n    return err;\n}\n/** Creates an `ErrorEvent` instance based on the given error. */\nexport function toErrorEvent(err, type = \"error\") {\n    let filename = \"\";\n    let lineno = 0;\n    let colno = 0;\n    if (err.stack) {\n        const lines = err.stack.split(\"\\n\").map(line => line.trim());\n        let callSite = lines.find(line => line.startsWith(\"at \"));\n        if (callSite) {\n            callSite = callSite.slice(3);\n        }\n        else if (callSite = lines.find(line => line.includes(\"@\") && line.length > 1)) {\n            callSite = callSite.slice(callSite.indexOf(\"@\") + 1);\n        }\n        if (callSite) {\n            let start = callSite.lastIndexOf(\"(\");\n            let end = 0;\n            if (start !== -1) {\n                start += 1;\n                end = callSite.indexOf(\")\", start);\n                callSite = callSite.slice(start, end);\n            }\n            const matches = callSite.match(/:(\\d+):(\\d+)$/);\n            if (matches) {\n                filename = callSite.slice(0, matches.index);\n                lineno = parseInt(matches[1]);\n                colno = parseInt(matches[2]);\n            }\n        }\n    }\n    return new ErrorEvent(type, {\n        error: err,\n        message: err.message,\n        filename,\n        lineno,\n        colno,\n    });\n}\nconst isFirefoxOrSafari = typeof navigator === \"object\" && /Firefox|Safari/.test(navigator.userAgent);\n/** Creates an error instance based on the given `ErrorEvent` instance. */\nexport function fromErrorEvent(event) {\n    if (event.error instanceof Error) {\n        return event.error;\n    }\n    let err;\n    let shouldPatchStack = false;\n    if (event.error\n        && typeof event.error === \"object\"\n        && event.error[\"name\"]\n        && event.error[\"message\"]) { // Error-like\n        err = fromObject(event.error, Error);\n        shouldPatchStack = !err.stack;\n    }\n    else if (event.message) {\n        err = new Error(event.message);\n        shouldPatchStack = true;\n    }\n    else {\n        return null;\n    }\n    if (shouldPatchStack) {\n        let stack = \"\";\n        if (event.filename) {\n            if (isFirefoxOrSafari) {\n                stack = \"@\" + event.filename;\n            }\n            else {\n                stack = `Error: ${event.message}\\n    at ${event.filename}`;\n            }\n            if (event.lineno) {\n                stack += \":\" + event.lineno;\n            }\n            if (event.colno) {\n                stack += \":\" + event.colno;\n            }\n        }\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: stack,\n        });\n    }\n    return err;\n}\n/** @inner */\nexport function isDOMException(value) {\n    return ((typeof DOMException === \"function\") && (value instanceof DOMException))\n        || (value instanceof Error && value.constructor.name === \"DOMException\"); // Node.js v16-\n}\n/** @inner */\nexport function isAggregateError(value) {\n    // @ts-ignore\n    return (typeof AggregateError === \"function\" && value instanceof AggregateError)\n        || (value instanceof Error && value.constructor.name === \"AggregateError\");\n}\n//# sourceMappingURL=index.js.map","import { Exception, toErrorEvent, fromObject, toObject, fromErrorEvent } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.toErrorEvent = toErrorEvent;\nError.fromErrorEvent = fromErrorEvent;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","/**\n * Functions for parsing JSONs to specific structures.\n * @module\n */\nimport { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nimport bytes from \"../bytes/index.ts\";\nconst typeRegistry = new Map();\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    return as(data, type);\n}\nexport function as(data, type) {\n    if (data === null || data === undefined) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (data.type === \"Buffer\" && Array.isArray(data.data)) {\n            // Node.js Buffer\n            if (typeof Buffer === \"function\" && type === Buffer) {\n                try {\n                    return Buffer.from(data.data);\n                }\n                catch (_d) {\n                    return null;\n                }\n            }\n            else if (typeof type.prototype[Symbol.iterator] === \"function\"\n                && typeof type[\"from\"] === \"function\") {\n                try {\n                    // Convert Node.js Buffer to TypedArray.\n                    return type.from(data.data);\n                }\n                catch (_e) {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        else if (data.type === \"ByteArray\" && Array.isArray(data.data)) {\n            // ByteArray\n            try {\n                return bytes(data.data);\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        const keys = Object.getOwnPropertyNames(data);\n        const values = Object.values(data);\n        if (keys.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            values.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") {\n            // Assert the data is a TypedArray.\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_g) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            const err = fromObject(data);\n            if (err) {\n                // Support @JSON.type() decorator in Error constructors.\n                const typeRecords = typeRegistry.get(type.prototype);\n                if (typeRecords) {\n                    for (const key of Reflect.ownKeys(data)) {\n                        const ctor = typeRecords[key];\n                        if (ctor) {\n                            err[key] = as(data[key], ctor);\n                        }\n                    }\n                }\n            }\n            return err;\n        }\n        else {\n            const ins = Object.create(type.prototype);\n            const typeRecords = typeRegistry.get(type.prototype);\n            if (typeRecords) {\n                for (const key of Reflect.ownKeys(data)) {\n                    const ctor = typeRecords[key];\n                    ins[key] = ctor ? as(data[key], ctor) : data[key];\n                }\n            }\n            else {\n                Object.assign(ins, data);\n            }\n            return ins;\n        }\n    }\n    else {\n        return null;\n    }\n}\n/**\n * A decorator to instruct that the target property in the class is of a specific type.\n *\n * When parsing JSON via {@link parseAs}, this property is guaranteed to be of the given type.\n *\n * @remarks This decorator only supports TypeScript's `experimentalDecorators`.\n *\n * @example\n * ```ts\n * class Example {\n *     \\@type(Date)\n *     date: Date;\n * }\n * ```\n */\nexport function type(ctor) {\n    return (proto, prop) => {\n        const record = typeRegistry.get(proto);\n        if (record) {\n            record[prop] = ctor;\n        }\n        else {\n            typeRegistry.set(proto, { [prop]: ctor });\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    // @ts-ignore\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @param {any} obj\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @param {any} obj\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @param {any} obj\n * @returns {obj is { [x: string | symbol]: any; next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n * @param {any} obj\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @param {any} obj\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @param {any} obj\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @param {any} obj\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * @param {any} obj \n */\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { as, parseAs, type } from \"./index.ts\";\nJSON.parseAs = parseAs;\nJSON.as = as;\nJSON.type = type;\n//# sourceMappingURL=augment.js.map","if (!Symbol.asyncIterator) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol(\"Symbol.asyncIterator\")\n    });\n}\nexport const source = Symbol(\"GeneratorSource\");\nexport const status = Symbol(\"GeneratorStatus\");\nexport const result = Symbol(\"GeneratorResult\");\nexport class Thenable {\n    constructor(_source) {\n        this[source] = _source;\n        this[status] = \"suspended\";\n        this[result] = void 0;\n    }\n    then(onfulfilled, onrejected) {\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve(this[result]);\n        }\n        else if (this[status] === \"erred\") {\n            res = Promise.reject(this[source]);\n        }\n        else if (typeof this[source].then === \"function\") {\n            res = Promise.resolve(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = processIterator(this[source]);\n        }\n        else {\n            res = Promise.resolve(this[source]);\n        }\n        this[status] = \"closed\";\n        return res\n            .then(value => (this[result] = value))\n            .then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return Promise.resolve(this).then(null, onrejected);\n    }\n}\nexport class ThenableGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = { value: void 0, done: true };\n        }\n        else if (this[status] === \"erred\") {\n            return this.throw(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = this[source].next(value);\n        }\n        else {\n            res = { value: this[source], done: true };\n        }\n        if (res.done === true) {\n            this[status] = \"closed\";\n            this[result] = res.value;\n        }\n        return res;\n    }\n    return(value) {\n        this[status] = \"closed\";\n        this[result] = value;\n        if (this[source] && typeof this[source].return === \"function\") {\n            return this[source].return(value);\n        }\n        else {\n            return { value, done: true };\n        }\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return this[source].throw(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    ;\n}\nexport class ThenableAsyncGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve({ value: void 0, done: true });\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = Promise.resolve(this[source].next(value));\n        }\n        else {\n            res = Promise.resolve(this[source]).then(value => {\n                return { value, done: true };\n            });\n        }\n        return res.then(res => {\n            if (res.done === true) {\n                this[status] = \"closed\";\n                this[result] = res.value;\n            }\n            return res;\n        });\n    }\n    return(value) {\n        this[status] = \"closed\";\n        // The input value may be a promise-like object, using Promise.resolve()\n        // to guarantee the value is resolved.\n        return Promise.resolve(value).then(value => {\n            this[result] = value;\n            if (this[source] && typeof this[source].return === \"function\") {\n                return Promise.resolve(this[source].return(value));\n            }\n            else {\n                return Promise.resolve({ value, done: true });\n            }\n        });\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return Promise.resolve(this[source].throw(err));\n        }\n        else {\n            return Promise.reject(err);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport const ThenableGeneratorFunction = (function (fn) {\n    if (!(this instanceof ThenableGeneratorFunction)) {\n        return new ThenableGeneratorFunction(fn);\n    }\n    function anonymous(...args) {\n        try {\n            const source = fn.apply(this, args);\n            if (typeof source.then === \"function\" || isAsyncGenerator(source)) {\n                return new ThenableAsyncGenerator(source);\n            }\n            else {\n                return new ThenableGenerator(source);\n            }\n        }\n        catch (err) {\n            return Object.assign(new ThenableGenerator(err), {\n                [status]: \"erred\"\n            });\n        }\n    }\n    // HACK, let the returning function be an instance of\n    // ThenableGeneratorFunction.\n    anonymous.prototype = ThenableGeneratorFunction;\n    anonymous.__proto__ = this;\n    return anonymous;\n});\nThenableGeneratorFunction.create = function create(fn) {\n    return new ThenableGeneratorFunction(fn);\n};\nObject.setPrototypeOf(ThenableGeneratorFunction, Function);\nObject.setPrototypeOf(ThenableGeneratorFunction.prototype, Function.prototype);\nexport const create = ThenableGeneratorFunction.create;\nexport default create;\nfunction isAsyncGenerator(obj) {\n    return obj !== null\n        && typeof obj === \"object\"\n        && typeof obj.next === \"function\"\n        && typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\"\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\nfunction processIterator(iterator) {\n    return new Promise((resolve, reject) => {\n        function fulfilled(value) {\n            try {\n                step(iterator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            var _a;\n            try {\n                step((_a = iterator.throw) === null || _a === void 0 ? void 0 : _a.call(iterator, value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(item) {\n            Promise.resolve(item).then(result => {\n                result.done ? resolve(result.value) : new Promise(resolve => {\n                    resolve(result.value);\n                }).then(fulfilled, rejected);\n            });\n        }\n        step(iterator.next());\n    });\n}\n//# sourceMappingURL=index.js.map","/**\n * Calls a function safely and return errors when captured.\n * @module\n */\n// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport { isFunction } from \"./util.ts\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (returns instanceof ThenableAsyncGenerator) {\n        // special case\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\n//# sourceMappingURL=try.js.map","/**\n * Wraps a function for decorator pattern but keep its signature.\n * @module\n */\n/**\n * Wraps a function inside another function and returns a new function that\n * copies the original function's name and other properties.\n *\n * @example\n * ```ts\n * import wrap from \"@ayonli/jsext/wrap\";\n *\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","/**\n * Throttles function calls for frequent access.\n * @module\n */\nconst Cache = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = Promise.resolve(returns).finally(() => {\n                    cache.result = { value: cache.pending };\n                    cache.pending = undefined;\n                    cache.expires = Date.now() + duration;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (key === null || key === undefined || key === \"\") {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = Cache.get(key);\n        if (!cache) {\n            cache = { for: key };\n            Cache.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","/**\n * Debounces function calls for frequent access.\n * @module\n */\nconst registry = new Map();\nexport default function debounce(handler, options, reducer = undefined) {\n    const delay = typeof options === \"number\" ? options : options.delay;\n    const key = typeof options === \"number\" ? null : options.for;\n    const hasKey = key !== null && key !== undefined && key !== \"\";\n    let _cache = hasKey ? registry.get(key) : undefined;\n    if (!_cache) {\n        _cache = {\n            for: key,\n            tasks: [],\n            data: undefined,\n            timer: undefined,\n        };\n        if (hasKey) {\n            registry.set(key, _cache);\n        }\n    }\n    const cache = _cache;\n    return async function (data) {\n        if (typeof reducer === \"function\" && cache.data !== undefined) {\n            cache.data = reducer(cache.data, data);\n        }\n        else {\n            cache.data = data;\n        }\n        cache.timer && clearTimeout(cache.timer);\n        cache.timer = setTimeout(() => {\n            // Move tasks and cached data to new variables, so during the middle\n            // of handler running, new calls won't affect the running process.\n            const _tasks = cache.tasks;\n            const _data = cache.data;\n            cache.tasks = [];\n            cache.data = undefined;\n            if (hasKey) {\n                registry.delete(key);\n            }\n            const resolve = (result) => {\n                _tasks.forEach(({ resolve }) => resolve(result));\n            };\n            const reject = (err) => {\n                _tasks.forEach(({ reject }) => reject(err));\n            };\n            try {\n                const res = handler.call(this, _data);\n                if (typeof (res === null || res === void 0 ? void 0 : res.then) === \"function\") {\n                    res.then(resolve, reject);\n                }\n                else {\n                    resolve(res);\n                }\n            }\n            catch (err) {\n                reject(err);\n            }\n        }, delay);\n        return await new Promise((resolve, reject) => {\n            cache.tasks.push({ resolve, reject });\n        });\n    };\n}\n//# sourceMappingURL=debounce.js.map","var _a;\nexport const id = Symbol.for(\"id\");\nexport const isDeno = typeof Deno === \"object\";\nexport const isBun = typeof Bun === \"object\";\nexport const isNode = !isDeno && !isBun\n    && typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nexport const isNodePrior14 = isNode && parseInt(process.version.slice(1)) < 14;\nexport const IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\n// In Node.js, `process.argv` contains `--worker-thread` when the current thread is used as\n// a worker.\nconst isNodeWorkerThread = isNode && process.argv.includes(\"--worker-thread\");\nexport const isMainThread = !isNodeWorkerThread\n    && (isBun ? Bun.isMainThread : typeof WorkerGlobalScope === \"undefined\");\n//# sourceMappingURL=constants.js.map","/**\n * A channel implementation that transfers data across routines, even across\n * multiple threads, inspired by Golang.\n * @module\n */\nvar _a;\nimport { serial } from \"./number/index.ts\";\nimport { id } from \"./parallel/constants.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst idGenerator = serial(true);\n/**\n * A channel implementation that transfers data across routines, even across\n * multiple threads, inspired by Golang.\n */\nexport class Channel {\n    constructor(capacity = 0) {\n        this[_a] = idGenerator.next().value;\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.error = null;\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a\n     *  receiver is available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed\n     *        to the buffer.\n     *      - Otherwise, this function will block until there is new space for\n     *        the data in the buffer.\n     */\n    send(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block\n     * until new data is available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error\n     *   immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    recv() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will\n            // be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = null;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the\n     * receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no\n     * longer used, it will be automatically released by the GC. However, if\n     * the channel is used in a `for await...of...` loop, closing the channel\n     * will allow the loop to break automatically.\n     *\n     * Moreover, if the channel is used between parallel threads, it will no\n     * longer be able to release automatically, must explicitly call this\n     * function in order to release for GC.\n     */\n    close(err = null) {\n        if (this.state !== 1) {\n            // prevent duplicated call\n            return;\n        }\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [(_a = id, Symbol.asyncIterator)]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const queueSize = channel.producers.length;\n                const value = await channel.recv();\n                return {\n                    value: value,\n                    done: channel.state === 0 && !bufSize && !queueSize,\n                };\n            }\n        };\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n    /** @deprecated This method is deprecated in favor of the `send()` method. */\n    push(data) {\n        return this.send(data);\n    }\n    /** @deprecated This method is deprecated in favor of the `recv()` method. */\n    pop() {\n        return this.recv();\n    }\n}\n/**\n * Inspired by Golang, cerates a {@link Channel} that can be used to transfer\n * data across routines.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a\n * non-buffered channel, the sender and receiver must be present at the same\n * time (theoretically), otherwise, the channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered\n * channel, data will be queued in the buffer first and then consumed by the\n * receiver in FIFO order. Once the buffer size reaches the capacity limit, no\n * more data will be sent unless there is new space available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to\n * never block and behave like a message queue.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will\n * always be delivered, even if there is no receiver at the moment.\n *\n * Also, unlike Golang, `await channel.recv()` does not prevent the program from\n * exiting.\n *\n * Channels can be used to send and receive streaming data between main thread\n * and worker threads wrapped by `parallel()`, but once used that way,\n * `channel.close()` must be explicitly called in order to release the channel\n * for garbage collection.\n *\n * @example\n * ```ts\n * // non-buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.send(123);\n * })();\n *\n * const num = await channel.recv();\n * console.log(num); // 123\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * // buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>(3);\n *\n * await channel.send(123);\n * await channel.send(456);\n * await channel.send(789);\n *\n * const num1 = await channel.recv();\n * const num2 = await channel.recv();\n * const num3 = await channel.recv();\n *\n * console.log(num1); // 123\n * console.log(num2); // 456\n * console.log(num3); // 789\n * ```\n *\n * @example\n * ```ts\n * // iterable\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of sequence(1, 5)) {\n *         await channel.send(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","/**\n * This module provides a mechanism to handle tasks sequentially and prevent\n * concurrency conflicts.\n * @module\n */\nimport chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.send(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents\n * concurrency conflicts, it returns a {@link Queue} instance that we can push\n * data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once\n * reached, the push operation will block until there is new space available.\n * By default, this option is not set and use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * import queue from \"@ayonli/jsext/queue\";\n *\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","/**\n * A mutual exclusion mechanism for concurrent operations and protecting shared\n * data.\n * @module\n */\nvar _a;\nimport BiMap from \"./collections/BiMap.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst _queue = Symbol.for(\"queue\");\nconst _value = Symbol.for(\"value\");\nconst _mutex = Symbol.for(\"mutex\");\nconst _unlocked = Symbol.for(\"unlocked\");\n/**\n * Mutual Exclusion prevents multiple coroutines from accessing the same shared\n * resource simultaneously.\n *\n * @remarks\n * Currently, the Mutex instance can not be used across multiple threads, but is\n * considering adding support for `parallel` threads.\n *\n * @example\n * ```ts\n * import { Mutex } from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n * import { random } from \"@ayonli/jsext/number\";\n * import { sleep } from \"@ayonli/jsext/promise\";\n *\n * const mutex = new Mutex(1);\n *\n * const concurrentOperation = func(async (defer) => {\n *     const shared = await mutex.lock();\n *     defer(() => shared.unlock()); // don't forget to unlock\n *\n *     const value1 = shared.value;\n *\n *     await otherAsyncOperations();\n *\n *     shared.value += 1\n *     const value2 = shared.value;\n *\n *     // Without mutex lock, the shared value may have been modified by other\n *     // calls during `await otherAsyncOperation()`, and the following\n *     // assertion will fail.\n *     console.assert(value1 + 1 === value2);\n * });\n *\n * async function otherAsyncOperations() {\n *     await sleep(100 * random(1, 10));\n * }\n *\n * await Promise.all([\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n * ]);\n * ```\n */\nexport class Mutex {\n    /**\n     * @param value The data associated to the mutex instance.\n     */\n    constructor(value) {\n        this[_a] = [];\n        this[_value] = value;\n    }\n    /**\n     * Acquires the lock of the mutex, optionally for modifying the shared\n     * resource.\n     */\n    async lock() {\n        await new Promise(resolve => {\n            if (this[_queue].length) {\n                this[_queue].push(resolve);\n            }\n            else {\n                this[_queue].push(resolve);\n                resolve();\n            }\n        });\n        const lock = Object.create(Mutex.Lock.prototype);\n        lock[_mutex] = this;\n        return lock;\n    }\n}\n_a = _queue;\n(function (Mutex) {\n    var _b;\n    class Lock {\n        constructor(mutex) {\n            this[_b] = false;\n            this[_mutex] = mutex;\n        }\n        /** Accesses the data associated to the mutex instance. */\n        get value() {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            return this[_mutex][_value];\n        }\n        set value(v) {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            this[_mutex][_value] = v;\n        }\n        /** Releases the current lock of the mutex. */\n        unlock() {\n            this[_unlocked] = true;\n            const queue = this[_mutex][_queue];\n            queue.shift();\n            const next = queue[0];\n            if (next) {\n                next();\n            }\n            else if (registry.hasValue(this[_mutex])) {\n                registry.deleteValue(this[_mutex]);\n            }\n        }\n        [(_b = _unlocked, Symbol.dispose)]() {\n            this.unlock();\n        }\n    }\n    Mutex.Lock = Lock;\n})(Mutex || (Mutex = {}));\nconst registry = new BiMap();\n/**\n * Acquires a mutex lock for the given key in order to perform concurrent\n * operations and prevent conflicts.\n *\n * If the key is currently being locked by other coroutines, this function will\n * block until the lock becomes available again.\n *\n * @example\n * ```ts\n * import lock from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n *\n * const key = \"lock_key\";\n *\n * export const concurrentOperation = func(async (defer) => {\n *     const ctx = await lock(key);\n *     defer(() => ctx.unlock()); // don't forget to unlock\n *\n *     // This block will never be run if there are other coroutines holding\n *     // the lock.\n *     //\n *     // Other coroutines trying to lock the same key will also never be run\n *     // before `unlock()`.\n * });\n * ```\n */\nexport default async function lock(key) {\n    let mutex = registry.get(key);\n    if (!mutex) {\n        registry.set(key, mutex = new Mutex(void 0));\n    }\n    return await mutex.lock();\n}\n//# sourceMappingURL=lock.js.map","import { IsPath, isBun, isDeno, isNode } from \"../constants.ts\";\nimport { trim } from \"../../string/index.ts\";\nconst moduleCache = new Map();\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let offset = \"import(\".length;\n        let start = str.lastIndexOf(\"import(\");\n        if (start === -1) {\n            offset = \"require(\".length;\n            start = str.lastIndexOf(\"require(\");\n        }\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += offset;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if ((isNode || isBun) && IsPath.test(_id)) {\n        if (!/\\.[cm]?(js|ts|)x?$/.test(_id)) { // if omitted suffix, add suffix\n            _id += isBun ? \".ts\" : \".js\";\n        }\n        else if (isNode) { // replace .ts/.mts/.cts to .js/.mjs/.cjs in Node.js\n            if (_id.endsWith(\".ts\")) {\n                _id = _id.slice(0, -3) + \".js\";\n            }\n            else if (_id.endsWith(\".mts\")) {\n                _id = _id.slice(0, -4) + \".mjs\";\n            }\n            else if (_id.endsWith(\".cts\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".cjs\";\n            }\n            else if (_id.endsWith(\".tsx\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".js\";\n            }\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport async function resolveModule(modId, baseUrl = undefined) {\n    let module;\n    if (isNode || isBun) {\n        const { fileURLToPath } = await import(\"url\");\n        const path = baseUrl ? fileURLToPath(new URL(modId, baseUrl).href) : modId;\n        module = await import(path);\n    }\n    else {\n        const url = new URL(modId, baseUrl).href;\n        module = moduleCache.get(url);\n        if (!module) {\n            if (isDeno) {\n                module = await import(url);\n                moduleCache.set(url, module);\n            }\n            else {\n                try {\n                    module = await import(url);\n                    moduleCache.set(url, module);\n                }\n                catch (err) {\n                    if (String(err).includes(\"Failed\")) {\n                        const _url = await resolveRemoteModuleUrl(url);\n                        module = await import(_url);\n                        moduleCache.set(url, module);\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n        }\n    }\n    if (typeof module[\"default\"] === \"object\" && typeof module[\"default\"].default !== \"undefined\") {\n        module = module[\"default\"]; // CommonJS module with exports.default\n    }\n    return module;\n}\nexport async function resolveRemoteModuleUrl(url) {\n    var _a;\n    // Use fetch to download the script and compose an object URL which can\n    // bypass CORS security constraint in the browser.\n    const res = await fetch(url);\n    let blob;\n    if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n        blob = await res.blob();\n    }\n    else {\n        const buf = await res.arrayBuffer();\n        blob = new Blob([new Uint8Array(buf)], {\n            type: \"application/javascript\",\n        });\n    }\n    return URL.createObjectURL(blob);\n}\n//# sourceMappingURL=module.js.map","import { Channel } from \"../../chan.ts\";\nimport { id, isMainThread } from \"../constants.ts\";\nconst channelStore = new Map();\nexport function isChannelMessage(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"send\", \"close\"].includes(msg.type)\n        && typeof msg.channelId === \"number\";\n}\nexport async function handleChannelMessage(msg) {\n    const record = channelStore.get(msg.channelId);\n    if (!record)\n        return;\n    if (msg.type === \"send\") {\n        await record.raw.send(msg.value);\n    }\n    else if (msg.type === \"close\") {\n        const { value: err, channelId } = msg;\n        record.raw.close(err);\n        channelStore.delete(channelId);\n        if (isMainThread && record.writers.length > 1) {\n            // distribute the channel close event to all threads\n            record.writers.forEach(write => {\n                write(\"close\", err, channelId);\n            });\n        }\n    }\n}\nfunction wireChannel(channel, channelWrite) {\n    const channelId = channel[id];\n    if (!channelStore.has(channelId)) {\n        const send = channel.send.bind(channel);\n        const close = channel.close.bind(channel);\n        channelStore.set(channelId, {\n            channel,\n            raw: { send, close },\n            writers: [channelWrite],\n            counter: 0,\n        });\n        Object.defineProperties(channel, {\n            send: {\n                configurable: true,\n                writable: true,\n                value: async (data) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        const channel = record.channel;\n                        if (channel[\"state\"] !== 1) {\n                            throw new Error(\"the channel is closed\");\n                        }\n                        const write = record.writers[record.counter++ % record.writers.length];\n                        await Promise.resolve(write(\"send\", data, channelId));\n                    }\n                },\n            },\n            close: {\n                configurable: true,\n                writable: true,\n                value: (err = null) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        channelStore.delete(channelId);\n                        const channel = record.channel;\n                        record.writers.forEach(write => {\n                            write(\"close\", err, channelId);\n                        });\n                        // recover to the original methods\n                        Object.defineProperties(channel, {\n                            send: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.send,\n                            },\n                            close: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.close,\n                            },\n                        });\n                        channel.close(err);\n                    }\n                },\n            },\n        });\n    }\n    else {\n        const record = channelStore.get(channelId);\n        record.writers.push(channelWrite);\n    }\n}\nexport function wrapChannel(channel, channelWrite) {\n    wireChannel(channel, channelWrite);\n    return { \"@@type\": \"Channel\", \"@@id\": channel[id], \"capacity\": channel.capacity };\n}\nexport function unwrapChannel(obj, channelWrite) {\n    var _a, _b;\n    const channelId = obj[\"@@id\"];\n    let channel = (_a = channelStore.get(channelId)) === null || _a === void 0 ? void 0 : _a.channel;\n    if (!channel) {\n        channel = Object.assign(Object.create(Channel.prototype), {\n            [id]: channelId,\n            capacity: (_b = obj.capacity) !== null && _b !== void 0 ? _b : 0,\n            buffer: [],\n            producers: [],\n            consumers: [],\n            error: null,\n            state: 1,\n        });\n    }\n    wireChannel(channel, channelWrite);\n    return channel;\n}\n//# sourceMappingURL=channel.js.map","import { trim, trimEnd } from \"../string/index.ts\";\nexport function isNotQuery(str) {\n    return str[0] !== \"?\" && str[0] !== \"#\";\n}\nexport function isVolume(path, strict = false) {\n    return strict ? /^[a-z]:$/i.test(path) : /^[a-z]:(\\\\)?$/i.test(path);\n}\n/**\n * Checks if the given `path` is a Windows specific path.\n * @experimental\n */\nexport function isWindowsPath(path) {\n    return /^[a-z]:/i.test(path) && path.slice(1, 4) !== \"://\";\n}\n/**\n * Checks if the given `path` is a Posix specific path.\n * @experimental\n */\nexport function isPosixPath(path) {\n    return /^\\//.test(path);\n}\n/**\n * Checks if the given string is a URL, whether standard or non-standard.\n * @experimental\n */\nexport function isUrl(str) {\n    return /^[a-z](([a-z\\-]+)?:\\/\\/\\S+|[a-z\\-]+:\\/\\/$)/i.test(str) || isFileUrl(str);\n}\n/**\n * Checks if the given string is a file URL, whether with or without `//`.\n * @experimental\n */\nexport function isFileUrl(str) {\n    return /^file:((\\/\\/|\\/)\\S+|\\/?$)/i.test(str);\n}\nexport function isFileProtocol(path) {\n    return /^file:(\\/\\/)?$/i.test(path);\n}\n/**\n * Checks if the given `path` is an absolute path.\n * @experimental\n */\nexport function isAbsolute(path) {\n    return isPosixPath(path) || isWindowsPath(path) || isUrl(path);\n}\n/**\n * Splits the `path` into well-formed segments.\n * @experimental\n */\nexport function split(path) {\n    if (!path) {\n        return [];\n    }\n    else if (isUrl(path)) {\n        const { protocol, host, pathname, search, hash } = new URL(path);\n        const origin = protocol + \"//\" + host;\n        if (pathname === \"/\") {\n            if (search && hash) {\n                return [origin, search, hash];\n            }\n            else if (search) {\n                return [origin, search];\n            }\n            else if (hash) {\n                return [origin, hash];\n            }\n            else {\n                return [origin];\n            }\n        }\n        else {\n            const segments = trim(pathname, \"/\").split(/[/\\\\]+/);\n            if (search && hash) {\n                return [origin, ...segments, search, hash];\n            }\n            else if (search) {\n                return [origin, ...segments, search];\n            }\n            else if (hash) {\n                return [origin, ...segments, hash];\n            }\n            else {\n                return [origin, ...segments];\n            }\n        }\n    }\n    else if (isWindowsPath(path)) {\n        const [_, volume, ...segments] = split(\"file:///\" + path.replace(/[/\\\\]+/g, \"/\"));\n        return [volume + \"\\\\\", ...segments];\n    }\n    else if (isPosixPath(path)) {\n        const [_, ...segments] = split(\"file://\" + path.replace(/[/\\\\]+/g, \"/\"));\n        return [\"/\", ...segments];\n    }\n    else { // relative path\n        path = path.replace(/[/\\\\]+/g, \"/\");\n        const [_path, query] = path.split(\"?\");\n        if (query) {\n            const segments = _path ? trimEnd(_path, \"/\").split(\"/\") : [];\n            const [search, hash] = query.split(\"#\");\n            if (hash) {\n                return [...segments, \"?\" + search, \"#\" + hash];\n            }\n            else {\n                return [...segments, \"?\" + search];\n            }\n        }\n        else {\n            const [pathname, hash] = path.split(\"#\");\n            const segments = pathname ? trimEnd(pathname, \"/\").split(\"/\") : [];\n            if (hash) {\n                return [...segments, \"#\" + hash];\n            }\n            else {\n                return segments;\n            }\n        }\n    }\n}\nfunction stripFileProtocol(path) {\n    return path\n        .replace(/^file:\\/\\/(localhost)?\\/?([a-z]:)/i, \"$2\")\n        .replace(/^file:\\/?([a-z]:)/i, \"$1\")\n        .replace(/^file:\\/\\/(localhost)?\\//i, \"/\")\n        .replace(/^file:\\//i, \"/\");\n}\nfunction extractSegmentsForComparison(path, sub, options = {}) {\n    if (options.caseInsensitive) {\n        path = path.toLowerCase();\n        sub = sub.toLowerCase();\n    }\n    if (options.ignoreFileProtocol) {\n        path = stripFileProtocol(path);\n        sub = stripFileProtocol(sub);\n    }\n    const paths = split(path).filter(isNotQuery);\n    const subs = split(sub).filter(isNotQuery);\n    if (paths.length < subs.length) {\n        return { result: false, paths: [], subs: [] };\n    }\n    if (!options.caseInsensitive) {\n        if (paths.length > 0 && isVolume(paths[0])) {\n            // Windows volume is always case-insensitive\n            paths[0] = paths[0].toLowerCase();\n        }\n        if (subs.length > 0 && isVolume(subs[0])) {\n            // Windows volume is always case-insensitive\n            subs[0] = subs[0].toLowerCase();\n        }\n    }\n    if (!subs.length) {\n        return { result: true, paths, subs };\n    }\n    return { result: undefined, paths, subs };\n}\n/**\n * Checks if the `path` contains the given `sub` path.\n *\n * This function is ignorant about the path separator, the query string and the\n * hash string (if present). And is case-insensitive on Windows volume symbol\n * by default.\n * @experimental\n */\nexport function contains(path, sub, options = {}) {\n    const { result, paths, subs } = extractSegmentsForComparison(path, sub, options);\n    if (result !== undefined) {\n        return result;\n    }\n    const head = subs[0];\n    for (let i = 0; i < paths.length; i++) {\n        if (paths[i] !== head)\n            continue;\n        const pin = i;\n        let matched = 1;\n        let j = i;\n        while (matched < subs.length) {\n            j++;\n            if (paths[j] !== subs[j - pin]) {\n                break;\n            }\n            matched++;\n        }\n        if (matched === subs.length) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Checks if the `path` starts with the given `sub` path.\n *\n * This function is ignorant about the path separator, the query string and the\n * hash string (if present). And is case-insensitive on Windows volume symbol\n * by default.\n * @experimental\n */\nexport function startsWith(path, sub, options = {}) {\n    const { result, paths, subs } = extractSegmentsForComparison(path, sub, options);\n    if (result !== undefined)\n        return result;\n    for (let i = 0; i < subs.length; i++) {\n        if (subs[i] !== paths[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Checks if the `path` ends with the given `sub` path.\n *\n * This function is ignorant about the path separator, the query string and the\n * hash string (if present). And is case-insensitive on Windows volume symbol\n * by default.\n * @experimental\n */\nexport function endsWith(path, sub, options = {}) {\n    const { result, paths, subs } = extractSegmentsForComparison(path, sub, options);\n    if (result !== undefined)\n        return result;\n    for (let i = subs.length - 1, j = paths.length - 1; i >= 0; i--, j--) {\n        if (subs[i] !== paths[j]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Checks if the `path1` and `path2` describe the same path.\n *\n * This function is ignorant about the path separator, the query string and the\n * hash string (if present). And is case-insensitive on Windows volume symbol\n * by default.\n * @experimental\n */\nexport function equals(path1, path2, options = {}) {\n    const { result, paths, subs } = extractSegmentsForComparison(path1, path2, options);\n    if (result === false || paths.length !== subs.length) {\n        return false;\n    }\n    for (let i = 0; i < paths.length; i++) {\n        if (paths[i] !== subs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=util.js.map","/**\n * Platform-independent utility functions for dealing with system paths and URLs.\n * @experimental\n * @module\n */\nimport { stripEnd, trim } from \"../string/index.ts\";\nimport { contains, endsWith, equals, isAbsolute, isFileProtocol, isFileUrl, isNotQuery, isPosixPath, isUrl, isVolume, isWindowsPath, split, startsWith, } from \"./util.ts\";\nexport { isWindowsPath, isPosixPath, isUrl, isFileUrl, isAbsolute, contains, endsWith, startsWith, equals, };\n/**\n * Platform-specific path segment separator.\n * @experimental\n */\nexport const sep = (() => {\n    var _a, _b;\n    if (typeof Deno === \"object\" && typeof ((_a = Deno.build) === null || _a === void 0 ? void 0 : _a.os) === \"string\") { // Deno\n        if (Deno.build.os === \"windows\") {\n            return \"\\\\\";\n        }\n    }\n    else if (typeof process === \"object\" && !!((_b = process.versions) === null || _b === void 0 ? void 0 : _b.node)) { // Node.js\n        if (process.platform === \"win32\") {\n            return \"\\\\\";\n        }\n    }\n    return \"/\";\n})();\n/**\n * Returns the current working directory.\n * @experimental\n */\nexport function cwd() {\n    if (typeof Deno === \"object\" && typeof Deno.cwd === \"function\") {\n        return Deno.cwd();\n    }\n    else if (typeof process === \"object\" && typeof process.cwd === \"function\") {\n        return process.cwd();\n    }\n    else if (typeof location === \"object\" && location.origin) {\n        return location.origin + (location.pathname === \"/\" ? \"\" : location.pathname);\n    }\n    else {\n        throw new Error(\"Unable to determine the current working directory.\");\n    }\n}\n/**\n * Concatenates all given `segments` into a well-formed path.\n * @experimental\n */\nexport function join(...segments) {\n    segments = segments.filter(s => s !== \"\");\n    if (!segments.length) {\n        return \".\";\n    }\n    const paths = [];\n    for (let i = 0; i < segments.length; i++) {\n        const segment = segments[i];\n        for (const _segment of split(segment)) {\n            if (_segment === \"..\") {\n                if (!paths.length || paths.every(p => p === \"..\")) {\n                    paths.push(\"..\");\n                }\n                else if (paths.length > 1 || (paths[0] !== \"/\" && !isVolume(paths[0]))) {\n                    paths.pop();\n                }\n            }\n            else if (_segment && _segment !== \".\") {\n                paths.push(_segment);\n            }\n        }\n    }\n    const start = paths[0];\n    const _sep = isUrl(start) || isPosixPath(start) ? \"/\" : isWindowsPath(start) ? \"\\\\\" : sep;\n    let path = \"\";\n    for (let i = 0; i < paths.length; i++) {\n        const segment = paths[i];\n        if (segment) {\n            if (!path) {\n                path = segment;\n            }\n            else if (segment[0] === \"?\" || segment[0] === \"#\") {\n                path += segment;\n            }\n            else if (path === \"/\") {\n                path += trim(segment, \"/\\\\\");\n            }\n            else if (isVolume(path)) {\n                path += isVolume(path, true) ? \"\\\\\" + segment : segment;\n            }\n            else if (segment) {\n                path += _sep + trim(segment, \"/\\\\\");\n            }\n        }\n    }\n    return path || \".\";\n}\nfunction _normalize(...segments) {\n    const path = join(...segments);\n    return isFileProtocol(path) ? path + \"/\" : path;\n}\n/**\n * Normalizes the given `path`, resolving `..` and `.` segments. Note that\n * resolving these segments does not necessarily mean that all will be\n * eliminated. A `..` at the top-level will be preserved, and an empty path is\n * canonically `.`.\n * @experimental\n */\nexport function normalize(path) {\n    return _normalize(path);\n}\n/**\n * Similar to {@link normalize}, but also remove the search string and hash string if\n * present.\n */\nexport function sanitize(path) {\n    return _normalize(...split(path).filter(isNotQuery));\n}\n/**\n * Resolves path `segments` into a well-formed path.\n * @experimental\n */\nexport function resolve(...segments) {\n    segments = segments.filter(s => s !== \"\");\n    const _cwd = cwd();\n    if (!segments.length) {\n        return _cwd;\n    }\n    segments = isAbsolute(segments[0]) ? segments : [_cwd, ...segments];\n    let _paths = [];\n    for (let i = 0; i < segments.length; i++) {\n        const path = segments[i];\n        if (isAbsolute(path)) {\n            _paths = [];\n        }\n        _paths.push(path);\n    }\n    return _normalize(..._paths);\n}\n/**\n * Returns the parent path of the given `path`.\n * @experimental\n */\nexport function dirname(path) {\n    if (isUrl(path)) {\n        const { protocol, host, pathname } = new URL(path);\n        const origin = protocol + \"//\" + host;\n        const _dirname = dirname(pathname);\n        if (_dirname === \"/\") {\n            return isFileProtocol(origin) ? origin + \"/\" : origin;\n        }\n        else {\n            return origin + _dirname;\n        }\n    }\n    else {\n        const segments = split(path).filter(isNotQuery);\n        const last = segments.pop();\n        if (segments.length) {\n            return join(...segments);\n        }\n        else if (last === \"/\") {\n            return \"/\";\n        }\n        else if (isVolume(last, true)) {\n            return last + \"\\\\\";\n        }\n        else if (isVolume(last)) {\n            return last;\n        }\n        else {\n            return \".\";\n        }\n    }\n}\n/**\n * Return the last portion of the given `path`. Trailing directory separators\n * are ignored, and optional `suffix` is removed.\n * @experimental\n */\nexport function basename(path, suffix = \"\") {\n    if (isUrl(path)) {\n        const { pathname } = new URL(path);\n        return basename(pathname, suffix);\n    }\n    else {\n        const segments = split(path).filter(isNotQuery);\n        const _basename = segments.pop();\n        if (!_basename || _basename === \"/\" || isVolume(_basename)) {\n            return \"\";\n        }\n        else if (suffix) {\n            return stripEnd(_basename, suffix);\n        }\n        else {\n            return _basename;\n        }\n    }\n}\n/**\n * Returns the extension of the `path` with leading period.\n * @experimental\n */\nexport function extname(path) {\n    const base = basename(path);\n    const index = base.lastIndexOf(\".\");\n    if (index === -1) {\n        return \"\";\n    }\n    else {\n        return base.slice(index);\n    }\n}\n//# sourceMappingURL=index.js.map","import { Channel } from \"../../chan.ts\";\nimport { isBun, isDeno, isNode, isNodePrior14 } from \"../constants.ts\";\nimport { handleChannelMessage, isChannelMessage, wrapChannel } from \"./channel.ts\";\nimport { resolveRemoteModuleUrl } from \"./module.ts\";\nimport { isPlainObject } from \"../../object/index.ts\";\nimport { serial } from \"../../number/index.ts\";\nimport { Exception, fromErrorEvent, fromObject, isAggregateError, isDOMException, toObject, } from \"../../error/index.ts\";\nimport * as path from \"../../path/index.ts\";\nconst workerIdCounter = serial(true);\nlet workerPool = [];\nlet gcTimer;\nexport const remoteTasks = new Map();\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function isCallResponse(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nfunction getModuleDir(importMetaPath) {\n    if (path.extname(importMetaPath) === \".ts\") {\n        return path.resolve(importMetaPath, \"../../..\");\n    }\n    let _dirname = path.dirname(importMetaPath);\n    if (path.endsWith(_dirname, \"jsext/bundle\")) {\n        // The application imports the bundled version of this module\n        return path.dirname(_dirname);\n    }\n    else {\n        // The application imports the compiled version of this module\n        return path.resolve(_dirname, \"../../..\");\n    }\n}\nasync function getWorkerEntry(parallel = {}) {\n    if (isNode || isBun) {\n        if (parallel.workerEntry) {\n            return parallel.workerEntry;\n        }\n        const { fileURLToPath } = await import(\"url\");\n        const _filename = fileURLToPath(import.meta.url);\n        if (_filename === process.argv[1]) {\n            // The code is bundled, try the worker entry in node_modules\n            // (hope it exists).\n            const _dirname = path.join(path.cwd(), \"node_modules/@ayonli/jsext\");\n            if (isBun) {\n                if (path.extname(_filename) === \".ts\") {\n                    return path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    return path.join(_dirname, \"bundle/worker.mjs\");\n                }\n            }\n            else {\n                return path.join(_dirname, \"bundle/worker-node.mjs\");\n            }\n        }\n        else {\n            const _dirname = getModuleDir(_filename);\n            if (isBun) {\n                if (path.extname(_filename) === \".ts\") {\n                    return path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    return path.join(_dirname, \"bundle/worker.mjs\");\n                }\n            }\n            else {\n                return path.join(_dirname, \"bundle/worker-node.mjs\");\n            }\n        }\n    }\n    else if (isDeno) {\n        if (parallel.workerEntry) {\n            return parallel.workerEntry;\n        }\n        else if (import.meta[\"main\"]) {\n            // The code is bundled, try the remote worker entry.\n            if (import.meta.url.includes(\"jsr.io\")) {\n                return \"jsr:@ayonli/jsext/worker.ts\";\n            }\n            else {\n                return \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            }\n        }\n        else {\n            if (import.meta.url.includes(\"jsr.io\")) {\n                return \"jsr:@ayonli/jsext/worker.ts\";\n            }\n            else {\n                const _dirname = getModuleDir(import.meta.url);\n                return path.join(_dirname, \"/worker.ts\");\n            }\n        }\n    }\n    else {\n        if (parallel.workerEntry) {\n            if (path.isUrl(parallel.workerEntry)) {\n                return await resolveRemoteModuleUrl(parallel.workerEntry);\n            }\n            else {\n                return parallel.workerEntry;\n            }\n        }\n        else {\n            const url = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            return await resolveRemoteModuleUrl(url);\n        }\n    }\n}\nexport async function createWorker(options) {\n    let { adapter = \"worker_threads\", parallel } = options;\n    const entry = await getWorkerEntry(parallel);\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isNodePrior14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nfunction handleWorkerMessage(poolRecord, worker, msg) {\n    var _a, _b, _c, _d;\n    if (isChannelMessage(msg)) {\n        handleChannelMessage(msg);\n    }\n    else if (isCallResponse(msg) && msg.taskId) {\n        const task = remoteTasks.get(msg.taskId);\n        if (!task)\n            return;\n        if (msg.type === \"return\" || msg.type === \"error\") {\n            if (msg.type === \"error\") {\n                const err = isPlainObject(msg.error)\n                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                    : msg.error;\n                if (err instanceof Error &&\n                    (err.message.includes(\"not be cloned\")\n                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                    )) {\n                    Object.defineProperty(err, \"stack\", {\n                        configurable: true,\n                        enumerable: false,\n                        writable: true,\n                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                            + `at ${task.fn} (${task.module})`,\n                    });\n                }\n                if (task.resolver) {\n                    task.resolver.reject(err);\n                    if (task.channel) {\n                        task.channel.close();\n                    }\n                }\n                else if (task.channel) {\n                    task.channel.close(err);\n                }\n                else {\n                    task.error = err;\n                }\n            }\n            else {\n                const value = unwrapReturnValue(msg.value);\n                if (task.resolver) {\n                    task.resolver.resolve(value);\n                }\n                else {\n                    task.result = { value };\n                }\n                if (task.channel) {\n                    task.channel.close();\n                }\n            }\n            poolRecord.tasks.delete(msg.taskId);\n            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                // Allow the main thread to exit if the event\n                // loop is empty.\n                worker.unref();\n            }\n        }\n        else if (msg.type === \"yield\") {\n            const value = unwrapReturnValue(msg.value);\n            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.send({ value, done: msg.done });\n            if (msg.done) {\n                // The final message of yield event is the\n                // return value.\n                handleWorkerMessage(poolRecord, worker, {\n                    type: \"return\",\n                    value,\n                    taskId: msg.taskId,\n                });\n            }\n        }\n        else if (msg.type === \"gen\") {\n            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n        }\n    }\n}\nfunction handleWorkerClose(poolRecord, err) {\n    for (const taskId of poolRecord.tasks) {\n        poolRecord.tasks.delete(taskId);\n        const task = remoteTasks.get(taskId);\n        if (task) {\n            if (task.resolver) {\n                task.resolver.reject(err);\n                if (task.channel) {\n                    task.channel.close();\n                }\n            }\n            else if (task.channel) {\n                task.channel.close(err);\n            }\n            else {\n                task.error = err;\n            }\n        }\n    }\n    workerPool = workerPool.filter(item => item !== poolRecord);\n}\nexport async function acquireWorker(taskId, parallel) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker({ parallel }))\n                    .worker;\n                const handleMessage = handleWorkerMessage.bind(void 0, poolRecord, worker);\n                const handleClose = handleWorkerClose.bind(void 0, poolRecord);\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to\n                            // the channel in the worker thread when the thread\n                            // is terminated. This situation often occurs when\n                            // using `run()` to call function and the `result()`\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if ((arg instanceof Exception)\n            || isDOMException(arg)\n            || isAggregateError(arg)) {\n            return toObject(arg);\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n                else if ((value instanceof Exception)\n                    || isDOMException(value)\n                    || isAggregateError(value)) {\n                    arg[key] = toObject(value);\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            arg = arg.map(item => {\n                if (item instanceof ArrayBuffer) {\n                    transferable.push(item);\n                    return item;\n                }\n                else if ((item instanceof Exception)\n                    || isDOMException(item)\n                    || isAggregateError(item)) {\n                    return toObject(item);\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nexport function unwrapReturnValue(value) {\n    if (isPlainObject(value) && (value[\"@@type\"] === \"Exception\" ||\n        value[\"@@type\"] === \"DOMException\" ||\n        value[\"@@type\"] === \"AggregateError\")) {\n        return fromObject(value);\n    }\n    return value;\n}\n//# sourceMappingURL=threads.js.map","/**\n * This module provides JavaScript the ability to run functions in parallel\n * threads and take advantage of multi-core CPUs, inspired by Golang.\n * @module\n */\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan from \"./chan.ts\";\nimport { serial } from \"./number/index.ts\";\nimport { isBun, isDeno, isNode, IsPath, isMainThread } from \"./parallel/constants.ts\";\nimport { resolveModule, sanitizeModuleId } from \"./parallel/utils/module.ts\";\nimport { acquireWorker, remoteTasks, wrapArgs } from \"./parallel/utils/threads.ts\";\nconst taskIdCounter = serial(true);\nasync function safeRemoteCall(worker, req, transferable, taskId) {\n    try {\n        worker.postMessage(req, transferable);\n    }\n    catch (err) {\n        remoteTasks.delete(taskId);\n        if (typeof worker[\"unref\"] === \"function\") {\n            worker.unref();\n        }\n        throw err;\n    }\n}\nfunction createRemoteCall(module, fn, args) {\n    const taskId = taskIdCounter.next().value;\n    remoteTasks.set(taskId, { module, fn });\n    let getWorker = acquireWorker(taskId, parallel);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then(async (worker) => {\n        await safeRemoteCall(worker, {\n            type: \"call\",\n            module,\n            fn,\n            args: _args,\n            taskId,\n        }, transferable, taskId);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                remoteTasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                remoteTasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return getWorker.then(() => new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            remoteTasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            remoteTasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                })).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                remoteTasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                remoteTasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                const { args, transferable } = wrapArgs([input], getWorker);\n                await safeRemoteCall(worker, {\n                    type: \"next\",\n                    args: args,\n                    taskId,\n                }, transferable, taskId);\n                return await task.channel.recv();\n            }\n        },\n        async return(value) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            const { args, transferable } = wrapArgs([value], getWorker);\n            await safeRemoteCall(worker, {\n                type: \"return\",\n                args: args,\n                taskId,\n            }, transferable, taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            await safeRemoteCall(worker, {\n                type: \"throw\",\n                args: [err],\n                taskId,\n            }, transferable, taskId);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(module, fn, args) {\n    const getReturns = resolveModule(module).then(mod => {\n        return mod[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    let lines = stackTrace.split(\"\\n\");\n    const offset = lines.findIndex(line => line === \"Error\");\n    if (offset !== -1) {\n        lines = lines.slice(offset); // fix for tsx in Node.js v16\n    }\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            if (IsPath.test(baseUrl)) {\n                baseUrl = \"file://\" + baseUrl;\n            }\n            else if (isDeno) {\n                baseUrl = \"file://\" + Deno.cwd() + \"/\";\n            }\n            else if (isNode || isBun) {\n                baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n            else if (typeof location === \"object\") {\n                baseUrl = location.href;\n            }\n            else {\n                baseUrl = \"\";\n            }\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module so its functions will be run in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS\n * module, **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * Data are cloned and transferred between threads via **Structured Clone**\n * **Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel}\n * can also be used to transfer data between threads. To do so, just passed a\n * channel instance to the threaded function. But be aware, channel can only be\n * used as a parameter, return a channel from the threaded function is not\n * allowed. Once passed, the data can only be transferred into and out-from the\n * function.\n *\n * The difference between using a channel and a generator function for streaming\n * processing is, for a generator function, `next(value)` is coupled with a\n * `yield value`, the process is blocked between **next** calls, channel doesn't\n * have this limit, we can use it to stream all the data into the function\n * before processing and receiving any result.\n *\n * The threaded function also supports `ArrayBuffer`s as transferable objects.\n * If an array buffer is presented as an argument or the direct property of an\n * argument (assume it's a plain object), or the array buffer is the return\n * value or the direct property of the return value (assume it's a plain object),\n * it automatically becomes a transferrable object and will be transferred to\n * the other thread instead of being cloned. This strategy allows us to easily\n * compose objects like `Request` and `Response` instances into plain objects\n * and pass them between threads without overhead.\n *\n * @remarks\n * If the current module is already in a worker thread, use this function won't\n * create another worker thread.\n *\n * @remarks\n * Cloning and transferring data between the main thread and worker threads are\n * very heavy and slow, worker threads are only intended to run CPU-intensive\n * tasks or divide tasks among multiple threads, they have no advantage when\n * performing IO-intensive tasks such as handling HTTP requests, always prefer\n * `cluster` module for that kind of purpose.\n *\n * @remarks\n * For error instances, only the following types are guaranteed to be sent and\n * received properly between threads.\n *\n * - `Error`\n * - `EvalError`\n * - `RangeError`\n * - `ReferenceError`\n * - `SyntaxError`\n * - `TypeError`\n * - `URIError`\n * - `AggregateError` (as arguments, return values, thrown values, or shallow\n *   object properties)\n * - `Exception` (as arguments, return values, thrown values, or shallow object\n *   properties)\n * - `DOMException` (as arguments, return values, thrown values, or shallow\n *   object properties)\n *\n * In order to handle errors properly between threads, throw well-known error\n * types or use `Exception` (or `DOMException`) with error names in the threaded\n * function.\n *\n * @example\n * ```ts\n * // regular or async function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * // generator or async generator function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // use channel\n * import parallel from \"@ayonli/jsext/parallel\";\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n * import { readAll } from \"@ayonli/jsext/read\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<{ value: number; done: boolean; }>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);      // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * console.log(await length); // 10\n * ```\n *\n * @example\n * ```ts\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * // use transferrable\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const arr = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n * const length = await mod.transfer(arr.buffer);\n *\n * console.log(length);     // 10\n * console.log(arr.length); // 0\n * ```\n *\n * @remarks\n * If the application is to be bundled, use the following syntax to link the\n * module instead, it will prevent the bundler from including the file and\n * rewriting the path.\n *\n * ```ts\n * const mod = parallel<typeof import(\"./examples/worker.mjs\")>(\"./examples/worker.mjs\");\n * ```\n */\nfunction parallel(module) {\n    let modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    return new Proxy(Object.create(null), {\n        get: (target, prop) => {\n            if (Reflect.has(target, prop)) {\n                return target[prop];\n            }\n            else if (typeof prop === \"symbol\") {\n                return undefined;\n            }\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not\n     * set, the program by default uses CPU core numbers as the limit.\n     */\n    parallel.maxWorkers = undefined;\n    /**\n     * In browsers, by default, the program loads the worker entry directly from\n     * GitHub, which could be slow due to poor internet connection, we can copy\n     * the entry file `bundle/worker.mjs` to a local path of our website and set\n     * this option to that path so that it can be loaded locally.\n     *\n     * Or, if the code is bundled, the program won't be able to automatically\n     * locate the entry file in the file system, in such case, we can also copy\n     * the entry file (`bundle/worker.mjs` for Bun, Deno and the browser,\n     * `bundle/worker-node.mjs` for Node.js) to a local directory and supply\n     * this option instead.\n     */\n    parallel.workerEntry = undefined;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map","/**\n * Runs a script in another thread and abort at any time.\n * @module\n */\nimport chan from \"./chan.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { fromErrorEvent, fromObject } from \"./error/index.ts\";\nimport { isNode, isBun, isDeno, IsPath } from \"./parallel/constants.ts\";\nimport { sanitizeModuleId } from \"./parallel/utils/module.ts\";\nimport { handleChannelMessage, isChannelMessage } from \"./parallel/utils/channel.ts\";\nimport { getMaxParallelism, createWorker, isCallResponse, wrapArgs, unwrapReturnValue, } from \"./parallel/utils/threads.ts\";\nimport parallel from \"./parallel.ts\";\nimport { unrefTimer } from \"./util.ts\";\nconst workerPools = new Map();\nlet gcTimer;\n// The worker consumer queue is nothing but a callback list, once a worker is\n// available, the runner pop a consumer and run the callback, which will retry\n// gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs the given `script` in a worker thread and abort the task at any time.\n *\n * This function is similar to {@link parallel}(), many features applicable to\n * `parallel()` are also applicable to `run()`, except the following:\n *\n * 1. The `script` can only be a filename, and is relative to the current\n *   working directory (or the current URL) if not absolute.\n * 2. Only one task is allow to run at a time for one worker thread, set\n *   {@link run.maxWorkers} to allow more tasks to be run at the same time if\n *   needed.\n * 3. By default, the worker thread is dropped after the task settles, set\n *   `keepAlive` option in order to reused it.\n *\n * @example\n * ```ts\n * // result\n * import run from \"@ayonli/jsext/run\";\n *\n * const job1 = await run(\"examples/worker.mjs\", [\"World\"]);\n * console.log(await job1.result()); // Hello, World\n * ```\n *\n * @example\n * ```ts\n * // iterate\n * import run from \"@ayonli/jsext/run\";\n *\n * const job2 = await run<string, [string[]]>(\n *     \"examples/worker.mjs\",\n *     [[\"foo\", \"bar\"]],\n *     { fn: \"sequence\" }\n * );\n * for await (const word of job2.iterate()) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // abort\n * import run from \"@ayonli/jsext/run\";\n * import _try from \"@ayonli/jsext/try\";\n *\n * const job3 = await run<string, [string]>(\"examples/worker.mjs\", [\"foobar\"], {\n *    fn: \"takeTooLong\",\n * });\n * await job3.abort();\n * const [err, res] = await _try(job3.result());\n * console.assert(err === null);\n * console.assert(res === undefined);\n * ```\n */\nasync function run(script, args, options) {\n    var _a;\n    const maxWorkers = run.maxWorkers || parallel.maxWorkers || await getMaxParallelism;\n    const fn = (options === null || options === void 0 ? void 0 : options.fn) || \"default\";\n    let modId = sanitizeModuleId(script);\n    let baseUrl = undefined;\n    if (isDeno) {\n        baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode || isBun) {\n        if (IsPath.test(modId)) {\n            // Only set baseUrl for relative modules, don't set it for node modules.\n            baseUrl = \"file://\" + process.cwd() + \"/\";\n        }\n    }\n    else if (typeof location === \"object\") {\n        baseUrl = location.href;\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    const req = {\n        type: \"call\",\n        module: modId,\n        fn,\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    const adapter = (options === null || options === void 0 ? void 0 : options.adapter) || \"worker_threads\";\n    const workerPool = (_a = workerPools.get(adapter)) !== null && _a !== void 0 ? _a : workerPools.set(adapter, []).get(adapter);\n    let poolRecord = workerPool.find(item => !item.busy);\n    if (poolRecord) {\n        poolRecord.busy = true;\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        // Fill the worker pool regardless the current call should keep-alive\n        // or not, this will make sure that the total number of workers will not\n        // exceed the `run.maxWorkers`. If the the call doesn't keep-alive the\n        // worker, it will be cleaned after the call.\n        workerPool.push(poolRecord = {\n            getWorker: createWorker({ parallel, adapter }),\n            adapter,\n            busy: true,\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                workerPools.forEach((workerPool, adapter) => {\n                    // GC: clean long-time unused workers\n                    const now = Date.now();\n                    const idealItems = [];\n                    workerPools.set(adapter, workerPool.filter(item => {\n                        const ideal = !item.busy\n                            && (now - item.lastAccess) >= 10000;\n                        if (ideal) {\n                            idealItems.push(item);\n                        }\n                        return !ideal;\n                    }));\n                    idealItems.forEach(async (item) => {\n                        const { worker } = await item.getWorker;\n                        if (typeof worker[\"terminate\"] === \"function\") {\n                            await worker\n                                .terminate();\n                        }\n                        else {\n                            worker.kill();\n                        }\n                    });\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        // Put the current call in the consumer queue if there are no workers\n        // available, once an existing call finishes, the queue will pop the its\n        // head consumer and retry.\n        return new Promise((resolve) => {\n            workerConsumerQueue.push(resolve);\n        }).then(() => run(modId, args, options));\n    }\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(async () => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        error = err;\n        await terminate();\n        handleClose(err, true);\n    }, options.timeout) : null;\n    if (timeout) {\n        unrefTimer(timeout);\n    }\n    const handleMessage = async (msg) => {\n        var _a, _b;\n        if (isChannelMessage(msg)) {\n            await handleChannelMessage(msg);\n        }\n        else if (isCallResponse(msg)) {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"return\" || msg.type === \"error\") {\n                if (msg.type === \"error\") {\n                    const err = isPlainObject(msg.error)\n                        ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                        : msg.error;\n                    if (err instanceof Error &&\n                        (err.message.includes(\"not be cloned\")\n                            || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                            || err.message.includes(\"Do not know how to serialize\") // JSON error\n                        )) {\n                        Object.defineProperty(err, \"stack\", {\n                            configurable: true,\n                            enumerable: false,\n                            writable: true,\n                            value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                + `at ${fn} (${modId})`,\n                        });\n                    }\n                    error = err;\n                }\n                else {\n                    result = { value: unwrapReturnValue(msg.value) };\n                }\n                (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n                handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            }\n            else if (msg.type === \"yield\") {\n                const value = unwrapReturnValue(msg.value);\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({\n                        type: \"return\",\n                        value,\n                    });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.send(value);\n                }\n            }\n        }\n    };\n    const handleClose = (err, terminated = false) => {\n        var _a, _b, _c;\n        timeout && clearTimeout(timeout);\n        if (!terminated) {\n            // Release before resolve.\n            release === null || release === void 0 ? void 0 : release();\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to gain the worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        else if (poolRecord) {\n            // Clean the pool before resolve.\n            // The `workerPool` of this key in the pool map may have been\n            // modified by other routines, we need to retrieve the newest value.\n            const remainItems = (_b = workerPools.get(adapter)) === null || _b === void 0 ? void 0 : _b.filter(record => record !== poolRecord);\n            if (remainItems === null || remainItems === void 0 ? void 0 : remainItems.length) {\n                workerPools.set(adapter, remainItems);\n            }\n            else {\n                workerPools.delete(adapter);\n            }\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_c = workerConsumerQueue.shift()) === null || _c === void 0 ? void 0 : _c();\n            }\n        }\n        if (err) {\n            error !== null && error !== void 0 ? error : (error = err);\n        }\n        if (error) {\n            if (resolver) {\n                resolver.reject(error);\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (channel) {\n                if (error instanceof Error) {\n                    channel.close(error);\n                }\n                else if (typeof error === \"string\") {\n                    channel.close(new Error(error));\n                }\n                else {\n                    // @ts-ignore\n                    channel.close(new Error(\"unknown error\", { cause: error }));\n                }\n            }\n        }\n        else {\n            result !== null && result !== void 0 ? result : (result = { value: void 0 });\n            if (resolver) {\n                resolver.resolve(result.value);\n            }\n            if (channel) {\n                channel.close();\n            }\n        }\n    };\n    const safeRemoteCall = async (worker, req, transferable = []) => {\n        try {\n            if (typeof worker[\"postMessage\"] === \"function\") {\n                worker.postMessage(req, transferable);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    worker.send(req, err => {\n                        err ? reject(err) : resolve();\n                    });\n                });\n            }\n        }\n        catch (err) {\n            if (typeof worker[\"unref\"] === \"function\") {\n                worker.unref();\n            }\n            error = err;\n            (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n            handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            throw err;\n        }\n    };\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            workerId = record.workerId;\n            worker.ref(); // prevent premature exit in the main thread\n            worker.on(\"message\", handleMessage);\n            worker.once(\"exit\", (code, signal) => {\n                if (!error && !result) {\n                    handleClose(new Error(`worker exited (${code !== null && code !== void 0 ? code : signal})`), true);\n                }\n            });\n            release = () => {\n                // allow the main thread to exit if the event loop is empty\n                worker.unref();\n                // Remove the event listener so that later calls will not mess\n                // up.\n                worker.off(\"message\", handleMessage);\n                worker.removeAllListeners(\"exit\");\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (error) {\n                // The worker take too long to start and timeout error already\n                // thrown.\n                await terminate();\n                throw error;\n            }\n            const { args } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req);\n        }\n        else if (isNode) {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleErrorEvent = (err) => {\n                if (!error && !result) {\n                    // In Node.js, worker will exit once erred.\n                    handleClose(err, true);\n                }\n            };\n            workerId = record.workerId;\n            worker.ref();\n            worker.on(\"message\", handleMessage);\n            worker.once(\"error\", handleErrorEvent);\n            release = () => {\n                worker.unref();\n                worker.off(\"message\", handleMessage);\n                worker.off(\"error\", handleErrorEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n        else { // isBun\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleCloseEvent = ((ev) => {\n                if (!error && !result) {\n                    handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"), true);\n                }\n            });\n            workerId = record.workerId;\n            worker.ref();\n            worker.onmessage = (ev) => handleMessage(ev.data);\n            worker.onerror = () => void worker.terminate(); // terminate once erred\n            worker.addEventListener(\"close\", handleCloseEvent);\n            release = () => {\n                worker.unref();\n                worker.onmessage = null;\n                worker.onerror = null;\n                worker.removeEventListener(\"close\", handleCloseEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n    }\n    else {\n        const record = await poolRecord.getWorker;\n        const worker = record.worker;\n        workerId = record.workerId;\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => {\n            var _a;\n            if (!error && !result) {\n                worker.terminate(); // ensure termination\n                handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"), true);\n            }\n        };\n        release = () => {\n            worker.onmessage = null;\n            worker.onerror = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = () => Promise.resolve(worker.terminate());\n        if (error) {\n            await terminate();\n            throw error;\n        }\n        const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n        req.args = args;\n        await safeRemoteCall(worker, req, transferable);\n    }\n    return {\n        workerId,\n        async abort(reason = undefined) {\n            timeout && clearTimeout(timeout);\n            if (reason) {\n                error = reason;\n            }\n            else {\n                result = { value: void 0 };\n            }\n            await terminate();\n            handleClose(null, true);\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n(function (run) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     * If not set, use the same setting as {@link parallel.maxWorkers}.\n     */\n    run.maxWorkers = undefined;\n    /** @deprecated set {@link parallel.workerEntry} instead */\n    run.workerEntry = undefined;\n})(run || (run = {}));\n// backward compatibility\nObject.defineProperties(run, {\n    workerEntry: {\n        set(v) {\n            parallel.workerEntry = v;\n        },\n        get() {\n            return parallel.workerEntry;\n        },\n    },\n});\nexport default run;\n//# sourceMappingURL=run.js.map","/**\n * Marks a function as deprecated and emit warnings when it is called.\n * @module\n */\nimport wrap from \"./wrap.ts\";\nconst isBun = typeof Bun === \"object\";\nconst warnedRecord = new Map();\nexport default function deprecate(target, ...args) {\n    var _a, _b, _c, _d;\n    if (typeof target === \"function\") {\n        const tip = (_a = args[0]) !== null && _a !== void 0 ? _a : \"\";\n        const once = (_b = args[1]) !== null && _b !== void 0 ? _b : false;\n        return wrap(target, function wrapped(fn, ...args) {\n            emitWarning(fn.name + \"()\", wrapped, tip, once, isBun ? 1 : 2);\n            return fn.apply(this, args);\n        });\n    }\n    const forFn = args[0];\n    const tip = (_c = args[1]) !== null && _c !== void 0 ? _c : \"\";\n    const once = (_d = args[2]) !== null && _d !== void 0 ? _d : false;\n    return emitWarning(target, forFn, tip, once, 1);\n}\nfunction emitWarning(target, forFn, tip, once, lineNum) {\n    var _a;\n    if (!once || !warnedRecord.has(forFn)) {\n        let trace = {};\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(trace, forFn);\n        }\n        else {\n            trace = new Error(\"\");\n        }\n        let lines = trace.stack.split(\"\\n\");\n        const offset = lines.findIndex(line => line === \"Error\");\n        if (offset !== -1) {\n            lines = lines.slice(offset); // fix for tsx in Node.js v16\n        }\n        let line = (_a = lines[lineNum]) === null || _a === void 0 ? void 0 : _a.trim();\n        let warning = `${target} is deprecated`;\n        if (tip) {\n            warning += \", \" + tip;\n        }\n        if (line) {\n            let start = line.indexOf(\"(\");\n            if (start !== -1) {\n                start += 1;\n                const end = line.indexOf(\")\", start);\n                line = line.slice(start, end);\n            }\n            warning += \" (\" + line + \")\";\n        }\n        console.warn(\"DeprecationWarning:\", warning);\n        once && warnedRecord.set(forFn, true);\n    }\n}\n//# sourceMappingURL=deprecate.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport debounce from \"./debounce.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport lock, { Mutex } from \"./lock.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport parallel from \"./parallel.ts\";\nimport run from \"./run.ts\";\nimport example from \"./example.ts\";\nimport deprecate from \"./deprecate.ts\";\nimport { isClass, isSubclassOf, mixin } from \"./class.ts\";\nimport mixins from \"./mixins.ts\";\nexport { Channel, Queue, Mutex };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    _try,\n    /** @deprecated use `_try` instead */\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    debounce,\n    queue,\n    lock,\n    read,\n    readAll,\n    chan,\n    parallel,\n    run,\n    example,\n    deprecate,\n    isClass,\n    isSubclassOf,\n    mixin,\n    mixins,\n};\nexport { jsext as default, _try, func, wrap, throttle, debounce, queue, lock, read, readAll, chan, parallel, run, example, deprecate, isClass, isSubclassOf, mixin, mixins, };\n//# sourceMappingURL=index.js.map","/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which\n * can be used to carry deferred jobs.\n * @module\n */\n// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which\n * can be used to carry deferred jobs that will be run after the main function\n * is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are\n * called in the LIFO order. Callbacks can be async functions if the main\n * function is an async function or an async generator function, and all the\n * running procedures will be awaited.\n *\n * @example\n * ```ts\n * import func from \"@ayonli/jsext/func\";\n * import * as fs from \"node:fs/promises\";\n *\n * export const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","/**\n * This module includes functions for reading data from various kinds of streams.\n * @module\n */\nimport chan from \"./chan.ts\";\nimport { isFunction } from \"./util.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    else if (typeof ReadableStream === \"function\"\n        && source instanceof ReadableStream) {\n        const reader = source.getReader();\n        return {\n            [Symbol.asyncIterator]: async function* () {\n                try {\n                    while (true) {\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            break;\n                        }\n                        yield value;\n                    }\n                }\n                finally {\n                    reader.releaseLock();\n                }\n            },\n        };\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.send.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to\n            // make sure when it calls the close() function, the iterator is\n            // automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * import { readAll } from \"@ayonli/jsext/read\";\n * import * as fs from \"node:fs\";\n *\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n *\n * console.log(chunks);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Writes unit tests as if writing examples, inspired by Golang.\n * @module\n */\n/**\n * Inspired by Golang's **Example as Test** design, creates a function that\n * carries example code with `// output:` comments, when the returned function\n * is called, it will automatically check if the actual output matches the one\n * declared in the comment.\n *\n * The example function receives a customized `console` object which will be\n * used to log outputs instead of using the built-in `console`.\n *\n * @remarks\n * This function is used to simplify the process of writing tests, currently,\n * it does not work in Bun, **tsx** and browsers, because Bun hasn't implement\n * the `Console` constructor and removes comments during runtime, **tsx** also\n * remove comments, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * import example from \"@ayonli/jsext/example\";\n *\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        });\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        }) !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk))\n                .join(\"\\n\")\n                .replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => {\n                                process.stdout.write(chunk, () => resolve());\n                            });\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","isClass","value","String","Number","Boolean","BigInt","Symbol","includes","undefined","prototype","str","toString","name0","name","isSubclassOf","ctor1","ctor2","mergeIfNotExists","proto","source","mergeSuper","props","Reflect","ownKeys","prop","setProp","hasOwn","mergeHierarchy","mixin","_super","Object","getPrototypeOf","desc","getOwnPropertyDescriptor","defineProperty","base","mixins","obj","TypeError","key","hasOwnProperty","call","pick","keys","reduce","result","omit","keptKeys","filter","Error","forEach","as","type","_type","primitiveMap","string","number","bigint","boolean","symbol","valueOf","isValid","is","NaN","Date","isPlainObject","sum","values","defaultEncoder","TextEncoder","defaultDecoder","TextDecoder","ByteArray","Uint8Array","bytes","encoding","_a","_b","Buffer","byte","padStart","btoa","decode","text","this","toJSON","data","encode","buffer","_chars","chars","_bytes","Intl","Segmenter","segment","map","x","_trim","trim","_trimEnd","trimEnd","_trimStart","trimStart","indexOf","substring","stripEnd","suffix","endsWith","random","min","max","floor","serial","loop","sequence","MAX_SAFE_INTEGER","step","id","remove","splice","rand","orderBy","order","items","item","sort","a","b","isArray","reverse","isFunction","val","unrefTimer","timer","unref","Deno","async","sleep","ms","Promise","resolve","setTimeout","compare","str1","str2","count","sub","_count","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","words","matches","flat","_words","lines","_chunk","truncate","_truncate","_stripEnd","stripStart","prefix","startsWith","_stripStart","byteLength","isAscii","printableOnly","test","_isAscii","isFloat","isNaN","isFinite","isNumeric","strict","isBetween","range","first","last","_random","ele","another","_equals","_split","uniq","Set","uniqBy","fn","Map","has","set","_uniqBy","shuffle","j","_shuffle","toShuffled","toReversed","toSorted","_orderBy","groupBy","groups","list","get","_groupBy","keyBy","record","_keyBy","copy","src","dest","subarray","concat","arrays","ele1","ele2","len","compressible","_arr1","Uint32Array","_arr2","hasOwnMethod","method","patch","target","sources","typeOf","sanitize","deep","options","removeNulls","removeEmptyStrings","removeEmptyObjects","removeArrayItems","process","depth","create","sortKeys","getOwnPropertyNames","getOwnPropertySymbols","flatKeys","maxDepth","carrier","flatArrayIndices","path","avg","product","timeout","race","reject","after","allSettled","status","reason","until","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","deleteValue","delete","clear","CiMap","entries","callbackfn","thisArg","iterator","globalThis","Exception","message","code","configurable","enumerable","writable","cause","toObject","err","fromObject","DOMException","isAggregateError","isFirefoxOrSafari","navigator","userAgent","fromErrorEvent","event","error","shouldPatchStack","stack","filename","lineno","colno","isDOMException","AggregateError","toErrorEvent","line","callSite","find","start","lastIndexOf","end","index","parseInt","ErrorEvent","typeRegistry","fromJSON","date","_c","_d","_e","_f","every","typeRecords","ins","assign","_g","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","JSON","parseAs","parse","Thenable","_source","then","onfulfilled","onrejected","res","fulfilled","e","rejected","done","ThenableGenerator","args","ThenableAsyncGenerator","ThenableGeneratorFunction","anonymous","apply","__proto__","_try","returns","catch","input","wrap","wrapper","wrapped","bind","setPrototypeOf","Function","Cache","registry","for","isDeno","isBun","Bun","isNode","versions","node","isNodePrior14","version","IsPath","isMainThread","argv","WorkerGlobalScope","dispose","idGenerator","Channel","capacity","producers","consumers","state","RangeError","send","consume","shift","_data","recv","produce","close","channel","bufSize","queueSize","pop","chan","Queue","handler","bufferSize","errorHandler","onError","_queue","_value","_mutex","_unlocked","Mutex","lock","Lock","mutex","ReferenceError","v","unlock","queue","moduleCache","sanitizeModuleId","_id","resolveRemoteModuleUrl","url","fetch","blob","headers","buf","arrayBuffer","Blob","URL","createObjectURL","channelStore","isChannelMessage","msg","channelId","handleChannelMessage","raw","writers","write","wrapChannel","channelWrite","counter","defineProperties","wireChannel","isNotQuery","isVolume","isWindowsPath","isPosixPath","isUrl","isFileUrl","isFileProtocol","isAbsolute","protocol","host","pathname","search","hash","origin","segments","volume","_path","query","stripFileProtocol","paths","subs","caseInsensitive","ignoreFileProtocol","extractSegmentsForComparison","sep","build","os","platform","cwd","location","join","s","_segment","p","_sep","_cwd","_paths","_normalize","dirname","_dirname","basename","_basename","extname","workerIdCounter","gcTimer","workerPool","remoteTasks","getMaxParallelism","import","availableParallelism","cpus","hardwareConcurrency","isCallResponse","getModuleDir","importMetaPath","path.extname","path.resolve","path.dirname","path.endsWith","createWorker","adapter","parallel","entry","workerEntry","fileURLToPath","_filename","document","require","pathToFileURL","__filename","href","_documentCurrentScript","baseURI","path.join","path.cwd","path.isUrl","getWorkerEntry","fork","worker","stdio","serialization","workerId","pid","once","off","kind","Worker","threadId","onerror","ev","addEventListener","handleWorkerMessage","poolRecord","taskId","task","module","resolver","unwrapReturnValue","tasks","generate","handleWorkerClose","acquireWorker","maxWorkers","lastAccess","now","getWorker","handleMessage","handleClose","on","_worker","onmessage","terminate","setInterval","idealItems","ideal","add","ref","wrapArgs","transferable","arg","postMessage","ArrayBuffer","taskIdCounter","safeRemoteCall","req","createLocalCall","getReturns","modId","baseUrl","_url","default","resolveModule","mod","gen","extractBaseUrl","stackTrace","findIndex","captureStackTrace","trace","Proxy","_args","Infinity","createRemoteCall","parallel$1","workerPools","workerConsumerQueue","run","script","busy","kill","release","clearTimeout","keepAlive","terminated","remainItems","signal","removeAllListeners","handleErrorEvent","handleCloseEvent","removeEventListener","abort","iterate","run$1","warnedRecord","emitWarning","forFn","tip","lineNum","warning","console","warn","AsyncFunction","AsyncGeneratorFunction","jsext","try","func","callbacks","defer","cb","throttle","duration","noWait","handleCall","cache","pending","expires","finally","debounce","reducer","delay","hasKey","_cache","_tasks","read","eventMap","ReadableStream","reader","getReader","releaseLock","handleBrowserErrorEvent","msgDesc","errDesc","closeDesc","cleanup","es","eventName","msgListener","_close","ws","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","readAll","example","expected","_expected","assert","Writable","Console","logs","decoder","stdout","callback","_console","actual","ok","suppress","handleResult","deprecate"],"mappings":"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"}