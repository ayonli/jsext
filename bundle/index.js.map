{"version":3,"file":"index.js","sources":["../array/base.ts","../string/index.ts","../number/index.ts","../isclass.ts","../array/index.ts","../math/index.ts","../object/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../uint8array/index.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../error/augment.ts","../json/index.ts","../external/check-iterable/index.mjs","../json/augment.ts","../external/thenable-generator/index.ts","../try.ts","../wrap.ts","../throttle.ts","../debounce.ts","../mixins.ts","../chan.ts","../queue.ts","../lock.ts","../util.ts","../parallel.ts","../run.ts","../deprecate.ts","../index.ts","../func.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array-like object. */\nexport function count(arr, ele) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === ele) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array-like object.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array-like object into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array-like object into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n//# sourceMappingURL=base.js.map","import { chunk as _chunk } from \"../array/base.ts\";\nconst encoder = new TextEncoder();\nconst _chars = chars;\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a == b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/**\n * Returns a random string restricted by `length` (character-wise).\n *\n * @param chars Default value: `0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`.\n */\nexport function random(length, chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") {\n    const arr = _chars(chars);\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * arr.length);\n        str += arr[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Returns the bytes of the given string. */\nexport function bytes(str) {\n    return encoder.encode(str);\n}\n/** Returns the characters of the string (emojis are supported). */\nexport function chars(str) {\n    if (typeof (Intl === null || Intl === void 0 ? void 0 : Intl.Segmenter) === \"function\") {\n        return Array.from(new Intl.Segmenter().segment(str))\n            .map((x) => x.segment);\n    }\n    else {\n        return Array.from(str);\n    }\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches].map(sub => sub.split(\"_\")).flat() : [];\n}\n/** Splits the string into lines by `\\n` or `\\r\\n`. */\nexport function lines(str) {\n    return str.split(/\\r?\\n/);\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst _trim = String.prototype.trim;\nconst _trimEnd = String.prototype.trimEnd;\nconst _trimStart = String.prototype.trimStart;\n/** Removes leading and trailing spaces or custom characters of the string. */\nexport function trim(str, chars = \"\") {\n    if (!chars) {\n        return _trim.call(str);\n    }\n    else {\n        return trimEnd(trimStart(str, chars), chars);\n    }\n}\n/** Removes trailing spaces or custom characters of the string. */\nexport function trimEnd(str, chars = \"\") {\n    if (!chars) {\n        return _trimEnd.call(str);\n    }\n    else {\n        let i = str.length;\n        while (i-- && chars.indexOf(str[i]) !== -1) { }\n        return str.substring(0, i + 1);\n    }\n}\n/** Removes leading spaces or custom characters of the string. */\nexport function trimStart(str, chars = \"\") {\n    if (!chars) {\n        return _trimStart.call(str);\n    }\n    else {\n        let i = 0;\n        do { } while (chars.indexOf(str[i]) !== -1 && ++i);\n        return str.substring(i);\n    }\n}\n/** Removes the given suffix of the string if present. */\nexport function stripEnd(str, suffix) {\n    if (str.endsWith(suffix)) {\n        return str.slice(0, -suffix.length);\n    }\n    return str;\n}\n/** Removes the given prefix of the string if present. */\nexport function stripStart(str, prefix) {\n    if (str.startsWith(prefix)) {\n        return str.slice(prefix.length);\n    }\n    return str;\n}\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return bytes(str).byteLength;\n}\n;\n/** Checks if all characters in this string are within the ASCII range. */\nexport function isAscii(str) {\n    return bytes(str).every(byte => byte >= 0 && byte <= 127);\n}\n//# sourceMappingURL=index.js.map","/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n *\n * @remarks `NaN` is not considered numeric.\n *\n * @param strict Only returns `true` when the value is of type `number`.\n */\nexport function isNumeric(value, strict = false) {\n    const type = typeof value;\n    if (strict) {\n        return type === \"number\" && !Number.isNaN(value);\n    }\n    else if (type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"number\") {\n        return !Number.isNaN(value);\n    }\n    else if (type === \"string\" && value) {\n        try {\n            BigInt(value);\n            return true;\n        }\n        catch (_a) {\n            return !Number.isNaN(Number(value));\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Checks if a value is a class/constructor.\n *\n * @example\n * ```ts\n * import isClass from \"@ayonli/jsext/isclass\";\n *\n * console.assert(isClass(class Foo { }));\n * console.assert(!isClass(function foo() { }));\n * ```\n */\nexport default function isClass(value) {\n    if (typeof value !== \"function\")\n        return false;\n    if ([String, Number, Boolean, BigInt, Symbol].includes(value)) {\n        return false;\n    }\n    // async function or arrow function\n    if (value.prototype === undefined)\n        return false;\n    // generator function or malformed inheritance\n    if (value.prototype.constructor !== value)\n        return false;\n    const str = value.toString();\n    // ES6 class\n    if (str.slice(0, 5) == \"class\")\n        return true;\n    const name0 = value.name[0];\n    if (name0 && name0 >= \"A\" && name0 <= \"Z\" && str.includes(\"[native code]\"))\n        return true;\n    return false;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * import { isSubclassOf } from \"@ayonli/jsext/isclass\";\n *\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n//# sourceMappingURL=isclass.js.map","import { isSubclassOf } from \"../isclass.ts\";\nimport { random as rand } from \"../number/index.ts\";\nimport { count as _count, equals as _equals, split as _split, chunk as _chunk, } from \"./base.ts\";\n/** Returns the first element of the array, or `undefined` if the array is empty. */\nexport function first(arr) {\n    return arr[0];\n}\n/** Returns the last element of the array, or `undefined` if the array is empty. */\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n/** Returns a random element of the array, or `undefined` if the array is empty. */\nexport function random(arr, remove = false) {\n    if (!arr.length) {\n        return undefined;\n    }\n    else if (arr.length === 1) {\n        if (remove) {\n            return arr.splice(0, 1)[0];\n        }\n        else {\n            return arr[0];\n        }\n    }\n    const i = rand(0, arr.length - 1);\n    if (remove) {\n        return arr.splice(i, 1)[0];\n    }\n    else {\n        return arr[i];\n    }\n}\n/** Counts the occurrence of the element in the array. */\nexport function count(arr, ele) {\n    return _count(arr, ele);\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Returns a subset of the array that contains only unique items filtered by the\n * given callback function.\n */\nexport function uniqBy(arr, fn) {\n    const map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        const key = fn(item, i);\n        map.has(key) || map.set(key, item);\n    }\n    return [...map.values()];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    if (typeof key === \"function\") {\n        return orderBy(items.map((item, i) => ({\n            key: key(item, i),\n            value: item,\n        })), \"key\", order).map(({ value }) => value);\n    }\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const groups = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\nexport function keyBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const map = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            map.set(key, item);\n        }\n        return map;\n    }\n    else {\n        const record = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            record[key] = item;\n        }\n        return record;\n    }\n}\n//# sourceMappingURL=index.js.map","/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import isClass from \"../isclass.ts\";\n/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n;\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"stack\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns a string representation or the constructor of the value's type.\n *\n * @remarks This function returns `\"class\"` for ES6 classes.\n * @remarks This function returns `\"null\"` for `null`.\n * @remarks This function returns `Object` for `Object.create(null)`.\n */\nexport function typeOf(value) {\n    var _a, _b;\n    if (value === undefined) {\n        return \"undefined\";\n    }\n    else if (value === null) {\n        return \"null\";\n    }\n    const type = typeof value;\n    if (type === \"function\") {\n        return isClass(value) ? \"class\" : \"function\";\n    }\n    else if (type === \"object\") {\n        return (_b = (_a = Object.getPrototypeOf(value)) === null || _a === void 0 ? void 0 : _a.constructor) !== null && _b !== void 0 ? _b : Object;\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n/**\n * Returns `true` is the given value is a plain object, that is, an object created by\n * the `Object` constructor or one with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value) {\n    if (typeof value !== \"object\" || value === null)\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === null || proto.constructor === Object;\n}\nexport function sanitize(obj, options = false) {\n    const deep = typeof options === \"object\" ? !!options.deep : !!options;\n    const removeNulls = typeof options === \"object\" ? !!options.removeNulls : false;\n    const removeEmptyStrings = typeof options === \"object\" ? !!options.removeEmptyStrings : false;\n    const removeEmptyObjects = typeof options === \"object\" ? !!(options === null || options === void 0 ? void 0 : options.removeEmptyObjects) : false;\n    const removeArrayItems = typeof options === \"object\" ? !!(options === null || options === void 0 ? void 0 : options.removeArrayItems) : false;\n    return (function process(target, depth) {\n        if (typeof target === \"string\") {\n            return target.trim();\n        }\n        else if (Array.isArray(target)) {\n            const arr = !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n            if (removeArrayItems) {\n                return arr.filter(value => {\n                    if (value === null) {\n                        return !removeNulls;\n                    }\n                    else if (value === \"\") {\n                        return !removeEmptyStrings;\n                    }\n                    else if (isValid(value)) {\n                        if (typeof value !== \"object\") {\n                            return true;\n                        }\n                        else if (Array.isArray(value)) {\n                            return value.length > 0 || !removeEmptyObjects;\n                        }\n                        else if (isPlainObject(value)) {\n                            return Reflect.ownKeys(value).length > 0 || !removeEmptyObjects;\n                        }\n                        else {\n                            return true;\n                        }\n                    }\n                    else {\n                        return false;\n                    }\n                });\n            }\n            else {\n                return arr;\n            }\n        }\n        else if (isPlainObject(target)) {\n            return !depth || deep ? Reflect.ownKeys(target).reduce((result, key) => {\n                const value = process(target[key], depth + 1);\n                if (value === null) {\n                    if (!removeNulls) {\n                        result[key] = value;\n                    }\n                }\n                else if (value === \"\") {\n                    if (!removeEmptyStrings) {\n                        result[key] = value;\n                    }\n                }\n                else if (isValid(value)) {\n                    if (typeof value !== \"object\") {\n                        result[key] = value;\n                    }\n                    else if (Array.isArray(value)) {\n                        if (value.length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else if (isPlainObject(value)) {\n                        if (Reflect.ownKeys(value).length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else {\n                        result[key] = value;\n                    }\n                }\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Creates an object with sorted keys (in ascending order) of the original object.\n *\n * @remarks Symbol keys are not sorted and remain their original order.\n * @remarks This function only operates on plain objects and arrays.\n */\nexport function sortKeys(obj, deep = false) {\n    return (function process(target, depth) {\n        if (isPlainObject(target)) {\n            return !depth || deep ? [\n                ...Object.getOwnPropertyNames(target).sort(),\n                ...Object.getOwnPropertySymbols(target)\n            ].reduce((result, key) => {\n                result[key] = process(target[key], depth + 1);\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else if (Array.isArray(target)) {\n            return !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Create an object with flatted keys of the original object, the children\n * nodes' properties will be transformed to a string-represented path.\n *\n * @remarks This function only operates on plain objects and arrays.\n *\n * @param depth Default value: `1`.\n * @example\n * ```ts\n * const obj = flatKeys({ foo: { bar: \"hello\", baz: \"world\" } });\n * console.log(obj);\n * // { \"foo.bar\": \"hello\", \"foo.baz\": \"world\" }\n * ```\n */\nexport function flatKeys(obj, depth = 1, options = {}) {\n    var _a;\n    const maxDepth = depth;\n    const carrier = obj.constructor ? {} : Object.create(null);\n    const flatArrayIndices = (_a = options === null || options === void 0 ? void 0 : options.flatArrayIndices) !== null && _a !== void 0 ? _a : false;\n    if (!isPlainObject(obj) && (!Array.isArray(obj) || !flatArrayIndices)) {\n        return obj;\n    }\n    (function process(target, path, depth) {\n        if (depth === maxDepth) {\n            carrier[path] = target;\n        }\n        else if (Array.isArray(target) && depth) {\n            if (!flatArrayIndices) {\n                carrier[path] = target;\n            }\n            else {\n                target.forEach((value, i) => {\n                    process(value, path ? `${path}.${i}` : String(i), path ? depth + 1 : depth);\n                });\n            }\n        }\n        else if (isPlainObject(target) || (Array.isArray(target) && !depth)) {\n            Reflect.ownKeys(target).forEach(key => {\n                const value = target[key];\n                if (typeof key === \"symbol\") {\n                    if (depth === 0) { // only allow top-level symbol properties\n                        carrier[key] = value;\n                    }\n                }\n                else {\n                    process(value, path ? `${path}.${key}` : key, path ? depth + 1 : depth);\n                }\n            });\n        }\n        else {\n            carrier[path] = target;\n        }\n    })(obj, \"\", 0);\n    return carrier;\n}\n//# sourceMappingURL=index.js.map","import { compare, random, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, bytes as _bytes, chars as _chars, words as _words, lines as _lines, trim as _trim, trimEnd as _trimEnd, trimStart as _trimStart, stripEnd as _stripEnd, stripStart as _stripStart, byteLength as _byteLength, isAscii as _isAscii, } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.bytes = function bytes() {\n    return _bytes(String(this));\n};\nString.prototype.chars = function chars() {\n    return _chars(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.lines = function lines() {\n    return _lines(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.trim = function trim(chars = \"\") {\n    return _trim(String(this), chars);\n};\nString.prototype.trimEnd = function trimEnd(chars = \"\") {\n    return _trimEnd(String(this), chars);\n};\nString.prototype.trimStart = function trimStart(chars = \"\") {\n    return _trimStart(String(this), chars);\n};\nString.prototype.stripEnd = function stripEnd(suffix) {\n    return _stripEnd(String(this), suffix);\n};\nString.prototype.stripStart = function stripStart(prefix) {\n    return _stripStart(String(this), prefix);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\nString.prototype.isAscii = function isAscii() {\n    return _isAscii(String(this));\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { first as _first, last as _last, chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, keyBy as _keyBy, orderBy as _orderBy, random as _random, shuffle as _shuffle, split as _split, uniq as _uniq, uniqBy as _uniqBy, } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return _first(this);\n};\nArray.prototype.last = function last() {\n    return _last(this);\n};\nArray.prototype.random = function random(remove = false) {\n    return _random(this, remove);\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.uniqBy = function uniqBy(fn) {\n    return _uniqBy(this, fn);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function groupBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\nArray.prototype.keyBy = function keyBy(fn, type = Object) {\n    return _keyBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk, concat, copy } from \"./index.ts\";\nUint8Array.copy = copy;\nUint8Array.concat = concat;\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","import { equals as _equals, split as _split, chunk as _chunk } from \"../array/base.ts\";\nimport { sum } from \"../math/index.ts\";\n/** Copies bytes from `src` array to `dest` and returns the number of bytes copied. */\nexport function copy(src, dest) {\n    if (src.length > dest.length) {\n        src = src.subarray(0, dest.length);\n    }\n    dest.set(src);\n    return src.length;\n}\n/** Like `Buffer.concat` but for pure `Uint8Array`. */\nexport function concat(...arrays) {\n    const length = sum(...arrays.map(arr => arr.length));\n    const ctor = arrays[0].constructor;\n    const result = new ctor(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    ;\n    return result;\n}\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compares this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, typeOf, isValid, isPlainObject, sanitize, sortKeys, flatKeys, } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.typeOf = typeOf;\nObject.isValid = isValid;\nObject.isPlainObject = isPlainObject;\nObject.sanitize = sanitize;\nObject.sortKeys = sortKeys;\nObject.flatKeys = flatKeys;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test passes. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        super.set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = super.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return super.has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return super.delete(id);\n    }\n    *entries() {\n        for (const { key, value } of super.values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of super.values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of super.values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        super.forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else if (typeof options === \"string\") {\n            Object.defineProperty(this, \"name\", {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: options,\n            });\n        }\n        else {\n            if (options.name) {\n                Object.defineProperty(this, \"name\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.name,\n                });\n            }\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","import { isPlainObject, omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    if (!(err instanceof Error) && err[\"name\"] && err[\"message\"]) { // Error-like\n        err = fromObject(err, Error);\n    }\n    const obj = {\n        \"@@type\": err.constructor.name,\n        ...omit(err, [\"toString\", \"toJSON\", \"__callSiteEvals\"]),\n    };\n    if (obj[\"@@type\"] === \"AggregateError\" && Array.isArray(obj[\"errors\"])) {\n        obj[\"errors\"] = obj[\"errors\"].map(item => {\n            return item instanceof Error ? toObject(item) : item;\n        });\n    }\n    return obj;\n}\nexport function fromObject(obj, ctor = undefined) {\n    var _a, _b;\n    // @ts-ignore\n    if (!(obj === null || obj === void 0 ? void 0 : obj.name)) {\n        return null;\n    }\n    // @ts-ignore\n    ctor || (ctor = (globalThis[obj[\"@@type\"] || obj.name] || globalThis[obj.name]));\n    if (!ctor) {\n        if (obj[\"@@type\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    let err;\n    if (ctor.name === \"DOMException\" && typeof DOMException === \"function\") {\n        err = new ctor((_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\", obj[\"name\"]);\n    }\n    else {\n        err = Object.create(ctor.prototype, {\n            message: {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: (_b = obj[\"message\"]) !== null && _b !== void 0 ? _b : \"\",\n            },\n        });\n    }\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\n        \"@@type\",\n        \"name\",\n        \"message\",\n        \"stack\",\n        \"cause\"\n    ].includes(key));\n    otherKeys.forEach(key => {\n        var _a;\n        // @ts-ignore\n        (_a = err[key]) !== null && _a !== void 0 ? _a : (err[key] = obj[key]);\n    });\n    // @ts-ignore\n    if (isAggregateError(err) && Array.isArray(err[\"errors\"])) {\n        err[\"errors\"] = err[\"errors\"].map(item => {\n            return isPlainObject(item) ? fromObject(item) : item;\n        });\n    }\n    return err;\n}\n/** Creates an `ErrorEvent` instance based on the given error. */\nexport function toErrorEvent(err, type = \"error\") {\n    let filename = \"\";\n    let lineno = 0;\n    let colno = 0;\n    if (err.stack) {\n        const lines = err.stack.split(\"\\n\").map(line => line.trim());\n        let callSite = lines.find(line => line.startsWith(\"at \"));\n        if (callSite) {\n            callSite = callSite.slice(3);\n        }\n        else if (callSite = lines.find(line => line.includes(\"@\") && line.length > 1)) {\n            callSite = callSite.slice(callSite.indexOf(\"@\") + 1);\n        }\n        if (callSite) {\n            let start = callSite.lastIndexOf(\"(\");\n            let end = 0;\n            if (start !== -1) {\n                start += 1;\n                end = callSite.indexOf(\")\", start);\n                callSite = callSite.slice(start, end);\n            }\n            const matches = callSite.match(/:(\\d+):(\\d+)$/);\n            if (matches) {\n                filename = callSite.slice(0, matches.index);\n                lineno = parseInt(matches[1]);\n                colno = parseInt(matches[2]);\n            }\n        }\n    }\n    return new ErrorEvent(type, {\n        error: err,\n        message: err.message,\n        filename,\n        lineno,\n        colno,\n    });\n}\nconst isFirefoxOrSafari = typeof navigator === \"object\" && /Firefox|Safari/.test(navigator.userAgent);\n/** Creates an error instance based on the given `ErrorEvent` instance. */\nexport function fromErrorEvent(event) {\n    if (event.error instanceof Error) {\n        return event.error;\n    }\n    let err;\n    let shouldPatchStack = false;\n    if (event.error\n        && typeof event.error === \"object\"\n        && event.error[\"name\"]\n        && event.error[\"message\"]) { // Error-like\n        err = fromObject(event.error, Error);\n        shouldPatchStack = !err.stack;\n    }\n    else if (event.message) {\n        err = new Error(event.message);\n        shouldPatchStack = true;\n    }\n    else {\n        return null;\n    }\n    if (shouldPatchStack) {\n        let stack = \"\";\n        if (event.filename) {\n            if (isFirefoxOrSafari) {\n                stack = \"@\" + event.filename;\n            }\n            else {\n                stack = `Error: ${event.message}\\n    at ${event.filename}`;\n            }\n            if (event.lineno) {\n                stack += \":\" + event.lineno;\n            }\n            if (event.colno) {\n                stack += \":\" + event.colno;\n            }\n        }\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: stack,\n        });\n    }\n    return err;\n}\n/** @inner */\nexport function isDOMException(value) {\n    return ((typeof DOMException === \"function\") && (value instanceof DOMException))\n        || (value instanceof Error && value.constructor.name === \"DOMException\"); // Node.js v16-\n}\n/** @inner */\nexport function isAggregateError(value) {\n    // @ts-ignore\n    return (typeof AggregateError === \"function\" && value instanceof AggregateError)\n        || (value instanceof Error && value.constructor.name === \"AggregateError\");\n}\n//# sourceMappingURL=index.js.map","import { Exception, toErrorEvent, fromObject, toObject, fromErrorEvent } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.toErrorEvent = toErrorEvent;\nError.fromErrorEvent = fromErrorEvent;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","import { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nconst typeRegistry = new Map();\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    return as(data, type);\n}\nexport function as(data, type) {\n    if (data === null || data === undefined) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (data.type === \"Buffer\" && Array.isArray(data.data)) { // Node.js Buffer\n            if (typeof Buffer === \"function\" && type === Buffer) {\n                try {\n                    return Buffer.from(data.data);\n                }\n                catch (_d) {\n                    return null;\n                }\n            }\n            else if (typeof type.prototype[Symbol.iterator] === \"function\"\n                && typeof type[\"from\"] === \"function\") {\n                try {\n                    // Convert Node.js Buffer to TypedArray.\n                    return type.from(data.data);\n                }\n                catch (_e) {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        const keys = Object.getOwnPropertyNames(data);\n        const values = Object.values(data);\n        if (keys.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            values.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") {\n            // Assert the data is a TypedArray.\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            const err = fromObject(data);\n            if (err) {\n                // Support @JSON.type() decorator in Error constructors.\n                const typeRecords = typeRegistry.get(type.prototype);\n                if (typeRecords) {\n                    for (const key of Reflect.ownKeys(data)) {\n                        const ctor = typeRecords[key];\n                        if (ctor) {\n                            err[key] = as(data[key], ctor);\n                        }\n                    }\n                }\n            }\n            return err;\n        }\n        else {\n            const ins = Object.create(type.prototype);\n            const typeRecords = typeRegistry.get(type.prototype);\n            if (typeRecords) {\n                for (const key of Reflect.ownKeys(data)) {\n                    const ctor = typeRecords[key];\n                    ins[key] = ctor ? as(data[key], ctor) : data[key];\n                }\n            }\n            else {\n                Object.assign(ins, data);\n            }\n            return ins;\n        }\n    }\n    else {\n        return null;\n    }\n}\n/**\n * A decorator to instruct that the target property in the class is of a specific type.\n *\n * When parsing JSON via {@link parseAs}, this property is guaranteed to be of the given type.\n *\n * @remarks This decorator only supports TypeScript's `experimentalDecorators`.\n *\n * @example\n * ```ts\n * class Example {\n *     \\@type(Date)\n *     date: Date;\n * }\n * ```\n */\nexport function type(ctor) {\n    return (proto, prop) => {\n        const record = typeRegistry.get(proto);\n        if (record) {\n            record[prop] = ctor;\n        }\n        else {\n            typeRegistry.set(proto, { [prop]: ctor });\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    // @ts-ignore\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @param {any} obj\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @param {any} obj\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @param {any} obj\n * @returns {obj is { [x: string | symbol]: any; next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n * @param {any} obj\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @param {any} obj\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @param {any} obj\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @param {any} obj\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * @param {any} obj \n */\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { as, parseAs, type } from \"./index.ts\";\nJSON.parseAs = parseAs;\nJSON.as = as;\nJSON.type = type;\n//# sourceMappingURL=augment.js.map","if (!Symbol.asyncIterator) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol(\"Symbol.asyncIterator\")\n    });\n}\nexport const source = Symbol(\"GeneratorSource\");\nexport const status = Symbol(\"GeneratorStatus\");\nexport const result = Symbol(\"GeneratorResult\");\nexport class Thenable {\n    constructor(_source) {\n        this[source] = _source;\n        this[status] = \"suspended\";\n        this[result] = void 0;\n    }\n    then(onfulfilled, onrejected) {\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve(this[result]);\n        }\n        else if (this[status] === \"erred\") {\n            res = Promise.reject(this[source]);\n        }\n        else if (typeof this[source].then === \"function\") {\n            res = Promise.resolve(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = processIterator(this[source]);\n        }\n        else {\n            res = Promise.resolve(this[source]);\n        }\n        this[status] = \"closed\";\n        return res\n            .then(value => (this[result] = value))\n            .then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return Promise.resolve(this).then(null, onrejected);\n    }\n}\nexport class ThenableGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = { value: void 0, done: true };\n        }\n        else if (this[status] === \"erred\") {\n            return this.throw(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = this[source].next(value);\n        }\n        else {\n            res = { value: this[source], done: true };\n        }\n        if (res.done === true) {\n            this[status] = \"closed\";\n            this[result] = res.value;\n        }\n        return res;\n    }\n    return(value) {\n        this[status] = \"closed\";\n        this[result] = value;\n        if (this[source] && typeof this[source].return === \"function\") {\n            return this[source].return(value);\n        }\n        else {\n            return { value, done: true };\n        }\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return this[source].throw(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    ;\n}\nexport class ThenableAsyncGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve({ value: void 0, done: true });\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = Promise.resolve(this[source].next(value));\n        }\n        else {\n            res = Promise.resolve(this[source]).then(value => {\n                return { value, done: true };\n            });\n        }\n        return res.then(res => {\n            if (res.done === true) {\n                this[status] = \"closed\";\n                this[result] = res.value;\n            }\n            return res;\n        });\n    }\n    return(value) {\n        this[status] = \"closed\";\n        // The input value may be a promise-like object, using Promise.resolve()\n        // to guarantee the value is resolved.\n        return Promise.resolve(value).then(value => {\n            this[result] = value;\n            if (this[source] && typeof this[source].return === \"function\") {\n                return Promise.resolve(this[source].return(value));\n            }\n            else {\n                return Promise.resolve({ value, done: true });\n            }\n        });\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return Promise.resolve(this[source].throw(err));\n        }\n        else {\n            return Promise.reject(err);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport const ThenableGeneratorFunction = (function (fn) {\n    if (!(this instanceof ThenableGeneratorFunction)) {\n        return new ThenableGeneratorFunction(fn);\n    }\n    function anonymous(...args) {\n        try {\n            const source = fn.apply(this, args);\n            if (typeof source.then === \"function\" || isAsyncGenerator(source)) {\n                return new ThenableAsyncGenerator(source);\n            }\n            else {\n                return new ThenableGenerator(source);\n            }\n        }\n        catch (err) {\n            return Object.assign(new ThenableGenerator(err), {\n                [status]: \"erred\"\n            });\n        }\n    }\n    // HACK, let the returning function be an instance of\n    // ThenableGeneratorFunction.\n    anonymous.prototype = ThenableGeneratorFunction;\n    anonymous.__proto__ = this;\n    return anonymous;\n});\nThenableGeneratorFunction.create = function create(fn) {\n    return new ThenableGeneratorFunction(fn);\n};\nObject.setPrototypeOf(ThenableGeneratorFunction, Function);\nObject.setPrototypeOf(ThenableGeneratorFunction.prototype, Function.prototype);\nexport const create = ThenableGeneratorFunction.create;\nexport default create;\nfunction isAsyncGenerator(obj) {\n    return obj !== null\n        && typeof obj === \"object\"\n        && typeof obj.next === \"function\"\n        && typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\"\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\nfunction processIterator(iterator) {\n    return new Promise((resolve, reject) => {\n        function fulfilled(value) {\n            try {\n                step(iterator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            var _a;\n            try {\n                step((_a = iterator.throw) === null || _a === void 0 ? void 0 : _a.call(iterator, value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(item) {\n            Promise.resolve(item).then(result => {\n                result.done ? resolve(result.value) : new Promise(resolve => {\n                    resolve(result.value);\n                }).then(fulfilled, rejected);\n            });\n        }\n        step(iterator.next());\n    });\n}\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (returns instanceof ThenableAsyncGenerator) {\n        // special case\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\nexport function isFunction(val) {\n    return typeof val === \"function\";\n}\n//# sourceMappingURL=try.js.map","/**\n * Wraps a function inside another function and returns a new function that\n * copies the original function's name and other properties.\n *\n * @example\n * ```ts\n * import wrap from \"@ayonli/jsext/wrap\";\n *\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","const Cache = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = Promise.resolve(returns).finally(() => {\n                    cache.result = { value: cache.pending };\n                    cache.pending = undefined;\n                    cache.expires = Date.now() + duration;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (key === null || key === undefined || key === \"\") {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = Cache.get(key);\n        if (!cache) {\n            cache = { for: key };\n            Cache.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","const registry = new Map();\nexport default function debounce(handler, options, reducer = undefined) {\n    const delay = typeof options === \"number\" ? options : options.delay;\n    const key = typeof options === \"number\" ? null : options.for;\n    const hasKey = key !== null && key !== undefined && key !== \"\";\n    let _cache = hasKey ? registry.get(key) : undefined;\n    if (!_cache) {\n        _cache = {\n            for: key,\n            tasks: [],\n            data: undefined,\n            timer: undefined,\n        };\n        if (hasKey) {\n            registry.set(key, _cache);\n        }\n    }\n    const cache = _cache;\n    return async function (data) {\n        if (typeof reducer === \"function\" && cache.data !== undefined) {\n            cache.data = reducer(cache.data, data);\n        }\n        else {\n            cache.data = data;\n        }\n        cache.timer && clearTimeout(cache.timer);\n        cache.timer = setTimeout(() => {\n            // Move tasks and cached data to new variables, so during the middle\n            // of handler running, new calls won't affect the running process.\n            const _tasks = cache.tasks;\n            const _data = cache.data;\n            cache.tasks = [];\n            cache.data = undefined;\n            if (hasKey) {\n                registry.delete(key);\n            }\n            const resolve = (result) => {\n                _tasks.forEach(({ resolve }) => resolve(result));\n            };\n            const reject = (err) => {\n                _tasks.forEach(({ reject }) => reject(err));\n            };\n            try {\n                const res = handler.call(this, _data);\n                if (typeof (res === null || res === void 0 ? void 0 : res.then) === \"function\") {\n                    res.then(resolve, reject);\n                }\n                else {\n                    resolve(res);\n                }\n            }\n            catch (err) {\n                reject(err);\n            }\n        }, delay);\n        return await new Promise((resolve, reject) => {\n            cache.tasks.push({ resolve, reject });\n        });\n    };\n}\n//# sourceMappingURL=debounce.js.map","import { hasOwn } from \"./object/index.ts\";\nimport { isSubclassOf } from \"./isclass.ts\";\nexport { \n/**\n * @deprecated This is a redundant re-export of the `isSubclassOf` from `@ayonli/jsext/isclass`.\n */\nisSubclassOf };\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport default function mixins(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n//# sourceMappingURL=mixins.js.map","var _a;\nimport { sequence } from \"./number/index.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst idGenerator = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nexport const id = Symbol.for(\"id\");\nexport class Channel {\n    constructor(capacity = 0) {\n        this[_a] = idGenerator.next().value;\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.error = null;\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a\n     *  receiver is available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed\n     *        to the buffer.\n     *      - Otherwise, this function will block until there is new space for\n     *        the data in the buffer.\n     */\n    push(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block\n     * until new data is available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error\n     *   immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    pop() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will\n            // be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = null;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the\n     * receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no\n     * longer used, it will be automatically released by the GC. However, if\n     * the channel is used in a `for await...of...` loop, closing the channel\n     * will allow the loop to break automatically.\n     *\n     * Moreover, if the channel is used between parallel threads, it will no\n     * longer be able to release automatically, must explicitly call this\n     * function in order to release for GC.\n     */\n    close(err = null) {\n        if (this.state !== 1) {\n            // prevent duplicated call\n            return;\n        }\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [(_a = id, Symbol.asyncIterator)]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const queueSize = channel.producers.length;\n                const value = await channel.pop();\n                return {\n                    value: value,\n                    done: channel.state === 0 && !bufSize && !queueSize,\n                };\n            }\n        };\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Inspired by Golang, cerates a {@link Channel} that can be used to transfer\n * data across routines.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a\n * non-buffered channel, the sender and receiver must be present at the same\n * time (theoretically), otherwise, the channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered\n * channel, data will be queued in the buffer first and then consumed by the\n * receiver in FIFO order. Once the buffer size reaches the capacity limit, no\n * more data will be sent unless there is new space available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to\n * never block and behave like a message queue.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will\n * always be delivered, even if there is no receiver at the moment.\n *\n * Also, unlike Golang, `await channel.pop()` does not prevent the program from\n * exiting.\n *\n * Channels can be used to send and receive streaming data between main thread\n * and worker threads wrapped by `parallel()`, but once used that way,\n * `channel.close()` must be explicitly called in order to release the channel\n * for garbage collection.\n *\n * @example\n * ```ts\n * // non-buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.push(123);\n * })();\n *\n * const num = await channel.pop();\n * console.log(num); // 123\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * // buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>(3);\n *\n * await channel.push(123);\n * await channel.push(456);\n * await channel.push(789);\n *\n * const num1 = await channel.pop();\n * const num2 = await channel.pop();\n * const num3 = await channel.pop();\n *\n * console.log(num1); // 123\n * console.log(num2); // 456\n * console.log(num3); // 789\n * ```\n *\n * @example\n * ```ts\n * // iterable\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of sequence(1, 5)) {\n *         await channel.push(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","import chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.push(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents\n * concurrency conflicts, it returns a {@link Queue} instance that we can push\n * data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once\n * reached, the push operation will block until there is new space available.\n * By default, this option is not set and use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * import queue from \"@ayonli/jsext/queue\";\n *\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","var _a;\nimport BiMap from \"./collections/BiMap.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst _queue = Symbol.for(\"queue\");\nconst _value = Symbol.for(\"value\");\nconst _mutex = Symbol.for(\"mutex\");\nconst _unlocked = Symbol.for(\"unlocked\");\n/**\n * Mutual Exclusion prevents multiple coroutines from accessing the same shared\n * resource simultaneously.\n *\n * @remarks\n * Currently, the Mutex instance can not be used across multiple threads, but is\n * considering adding support for `parallel` threads.\n *\n * @example\n * ```ts\n * import { Mutex } from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n * import { random } from \"@ayonli/jsext/number\";\n * import { sleep } from \"@ayonli/jsext/promise\";\n *\n * const mutex = new Mutex(1);\n *\n * const concurrentOperation = func(async (defer) => {\n *     const shared = await mutex.lock();\n *     defer(() => shared.unlock()); // don't forget to unlock\n *\n *     const value1 = shared.value;\n *\n *     await otherAsyncOperations();\n *\n *     shared.value += 1\n *     const value2 = shared.value;\n *\n *     // Without mutex lock, the shared value may have been modified by other\n *     // calls during `await otherAsyncOperation()`, and the following\n *     // assertion will fail.\n *     console.assert(value1 + 1 === value2);\n * });\n *\n * async function otherAsyncOperations() {\n *     await sleep(100 * random(1, 10));\n * }\n *\n * await Promise.all([\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n * ]);\n * ```\n */\nexport class Mutex {\n    /**\n     * @param value The data associated to the mutex instance.\n     */\n    constructor(value) {\n        this[_a] = [];\n        this[_value] = value;\n    }\n    /**\n     * Acquires the lock of the mutex, optionally for modifying the shared\n     * resource.\n     */\n    async lock() {\n        await new Promise(resolve => {\n            if (this[_queue].length) {\n                this[_queue].push(resolve);\n            }\n            else {\n                this[_queue].push(resolve);\n                resolve();\n            }\n        });\n        const lock = Object.create(Mutex.Lock.prototype);\n        lock[_mutex] = this;\n        return lock;\n    }\n}\n_a = _queue;\n(function (Mutex) {\n    var _b;\n    class Lock {\n        constructor(mutex) {\n            this[_b] = false;\n            this[_mutex] = mutex;\n        }\n        /** Accesses the data associated to the mutex instance. */\n        get value() {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            return this[_mutex][_value];\n        }\n        set value(v) {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            this[_mutex][_value] = v;\n        }\n        /** Releases the current lock of the mutex. */\n        unlock() {\n            this[_unlocked] = true;\n            const queue = this[_mutex][_queue];\n            queue.shift();\n            const next = queue[0];\n            if (next) {\n                next();\n            }\n            else if (registry.hasValue(this[_mutex])) {\n                registry.deleteValue(this[_mutex]);\n            }\n        }\n        [(_b = _unlocked, Symbol.dispose)]() {\n            this.unlock();\n        }\n    }\n    Mutex.Lock = Lock;\n})(Mutex || (Mutex = {}));\nconst registry = new BiMap();\n/**\n * Acquires a mutex lock for the given key in order to perform concurrent\n * operations and prevent conflicts.\n *\n * If the key is currently being locked by other coroutines, this function will\n * block until the lock becomes available again.\n *\n * @example\n * ```ts\n * import lock from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n *\n * const key = \"lock_key\";\n *\n * export const concurrentOperation = func(async (defer) => {\n *     const ctx = await lock(key);\n *     defer(() => ctx.unlock()); // don't forget to unlock\n *\n *     // This block will never be run if there are other coroutines holding\n *     // the lock.\n *     //\n *     // Other coroutines trying to lock the same key will also never be run\n *     // before `unlock()`.\n * });\n * ```\n */\nexport default async function lock(key) {\n    let mutex = registry.get(key);\n    if (!mutex) {\n        registry.set(key, mutex = new Mutex(void 0));\n    }\n    return await mutex.lock();\n}\n//# sourceMappingURL=lock.js.map","var _a;\nimport { Channel, id } from \"./chan.ts\";\nexport const isDeno = typeof Deno === \"object\";\nexport const isBun = typeof Bun === \"object\";\nexport const isNode = !isDeno && !isBun && typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nexport const isNodePrior14 = isNode && parseInt(process.version.slice(1)) < 14;\nexport const IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\n// In Node.js, `process.argv` contains `--worker-thread` when the current thread is used as\n// a worker.\nconst isNodeWorkerThread = isNode && process.argv.includes(\"--worker-thread\");\nexport const isMainThread = !isNodeWorkerThread\n    && (isBun ? Bun.isMainThread : typeof WorkerGlobalScope === \"undefined\");\nconst moduleCache = new Map();\nconst channelStore = new Map();\nexport async function resolveModule(modId, baseUrl = undefined) {\n    let module;\n    if (isNode || isBun) {\n        const { fileURLToPath } = await import(\"url\");\n        const path = baseUrl ? fileURLToPath(new URL(modId, baseUrl).href) : modId;\n        module = await import(path);\n    }\n    else {\n        const url = new URL(modId, baseUrl).href;\n        module = moduleCache.get(url);\n        if (!module) {\n            if (isDeno) {\n                module = await import(url);\n                moduleCache.set(url, module);\n            }\n            else {\n                try {\n                    module = await import(url);\n                    moduleCache.set(url, module);\n                }\n                catch (err) {\n                    if (String(err).includes(\"Failed\")) {\n                        // The content-type of the response isn't application/javascript, try to\n                        // download it and load it with object URL.\n                        const res = await fetch(url);\n                        const buf = await res.arrayBuffer();\n                        const blob = new Blob([new Uint8Array(buf)], {\n                            type: \"application/javascript\",\n                        });\n                        const _url = URL.createObjectURL(blob);\n                        module = await import(_url);\n                        moduleCache.set(url, module);\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n        }\n    }\n    if (typeof module[\"default\"] === \"object\" && typeof module[\"default\"].default !== \"undefined\") {\n        module = module[\"default\"]; // CommonJS module with exports.default\n    }\n    return module;\n}\nexport function isChannelMessage(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"push\", \"close\"].includes(msg.type)\n        && typeof msg.channelId === \"number\";\n}\nexport async function handleChannelMessage(msg) {\n    const record = channelStore.get(msg.channelId);\n    if (!record)\n        return;\n    if (msg.type === \"push\") {\n        await record.raw.push(msg.value);\n    }\n    else if (msg.type === \"close\") {\n        const { value: err, channelId } = msg;\n        record.raw.close(err);\n        channelStore.delete(channelId);\n        if (isMainThread && record.writers.length > 1) {\n            // distribute the channel close event to all threads\n            record.writers.forEach(write => {\n                write(\"close\", err, channelId);\n            });\n        }\n    }\n}\nfunction wireChannel(channel, channelWrite) {\n    const channelId = channel[id];\n    if (!channelStore.has(channelId)) {\n        const push = channel.push.bind(channel);\n        const close = channel.close.bind(channel);\n        channelStore.set(channelId, {\n            channel,\n            raw: { push, close },\n            writers: [channelWrite],\n            counter: 0,\n        });\n        Object.defineProperties(channel, {\n            push: {\n                configurable: true,\n                writable: true,\n                value: async (data) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        const channel = record.channel;\n                        if (channel[\"state\"] !== 1) {\n                            throw new Error(\"the channel is closed\");\n                        }\n                        const write = record.writers[record.counter++ % record.writers.length];\n                        await Promise.resolve(write(\"push\", data, channelId));\n                    }\n                },\n            },\n            close: {\n                configurable: true,\n                writable: true,\n                value: (err = null) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        channelStore.delete(channelId);\n                        const channel = record.channel;\n                        record.writers.forEach(write => {\n                            write(\"close\", err, channelId);\n                        });\n                        // recover to the original methods\n                        Object.defineProperties(channel, {\n                            push: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.push,\n                            },\n                            close: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.close,\n                            },\n                        });\n                        channel.close(err);\n                    }\n                },\n            },\n        });\n    }\n    else {\n        const record = channelStore.get(channelId);\n        record.writers.push(channelWrite);\n    }\n}\nexport function wrapChannel(channel, channelWrite) {\n    wireChannel(channel, channelWrite);\n    return { \"@@type\": \"Channel\", \"@@id\": channel[id], \"capacity\": channel.capacity };\n}\nexport function unwrapChannel(obj, channelWrite) {\n    var _a, _b;\n    const channelId = obj[\"@@id\"];\n    let channel = (_a = channelStore.get(channelId)) === null || _a === void 0 ? void 0 : _a.channel;\n    if (!channel) {\n        channel = Object.assign(Object.create(Channel.prototype), {\n            [id]: channelId,\n            capacity: (_b = obj.capacity) !== null && _b !== void 0 ? _b : 0,\n            buffer: [],\n            producers: [],\n            consumers: [],\n            error: null,\n            state: 1,\n        });\n    }\n    wireChannel(channel, channelWrite);\n    return channel;\n}\n//# sourceMappingURL=util.js.map","import { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { Exception, fromErrorEvent, fromObject, isAggregateError, isDOMException, toObject } from \"./error/index.ts\";\nimport { isBun, isDeno, isNodePrior14, isNode, IsPath, isMainThread, resolveModule, isChannelMessage, handleChannelMessage, wrapChannel } from \"./util.ts\";\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst remoteTasks = new Map;\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\nlet gcTimer;\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let offset = \"import(\".length;\n        let start = str.lastIndexOf(\"import(\");\n        if (start === -1) {\n            offset = \"require(\".length;\n            start = str.lastIndexOf(\"require(\");\n        }\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += offset;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if ((isNode || isBun) && IsPath.test(_id)) {\n        if (!/\\.[cm]?(js|ts|)x?$/.test(_id)) { // if omitted suffix, add suffix\n            _id += isBun ? \".ts\" : \".js\";\n        }\n        else if (isNode) { // replace .ts/.mts/.cts to .js/.mjs/.cjs in Node.js\n            if (_id.endsWith(\".ts\")) {\n                _id = _id.slice(0, -3) + \".js\";\n            }\n            else if (_id.endsWith(\".mts\")) {\n                _id = _id.slice(0, -4) + \".mjs\";\n            }\n            else if (_id.endsWith(\".cts\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".cjs\";\n            }\n            else if (_id.endsWith(\".tsx\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".js\";\n            }\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport function isCallResponse(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options = {}) {\n    var _a;\n    let { adapter = \"worker_threads\" } = options;\n    let entry = parallel.workerEntry;\n    if (isNode || isBun) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules\n                // (hope it exists).\n                if (isBun) {\n                    entry = \"./node_modules/@ayonli/jsext/worker.ts\";\n                }\n                else {\n                    entry = \"./node_modules/@ayonli/jsext/bundle/worker-node.mjs\";\n                }\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if ([\n                    path.join(\"jsext\", \"cjs\"),\n                    path.join(\"jsext\", \"esm\"),\n                    path.join(\"jsext\", \"bundle\")\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this\n                    // module, redirect to the root directory of this package.\n                    _dirname = path.dirname(_dirname);\n                }\n                if (isBun) {\n                    entry = path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker-node.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isNodePrior14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        if (isDeno) {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    entry = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n                }\n                else {\n                    entry = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker.ts\"\n                    ].join(\"/\");\n                    // The application imports the compiled version of this\n                    // module, redirect to the source worker entry.\n                    if (entry.endsWith(\"/esm/worker.ts\")) {\n                        entry = entry.slice(0, -14) + \"/worker.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can\n            // bypass CORS security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nasync function acquireWorker(taskId) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker()).worker;\n                const handleMessage = (msg) => {\n                    var _a, _b, _c, _d;\n                    if (isChannelMessage(msg)) {\n                        handleChannelMessage(msg);\n                    }\n                    else if (isCallResponse(msg) && msg.taskId) {\n                        const task = remoteTasks.get(msg.taskId);\n                        if (!task)\n                            return;\n                        if (msg.type === \"return\" || msg.type === \"error\") {\n                            if (msg.type === \"error\") {\n                                const err = isPlainObject(msg.error)\n                                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                                    : msg.error;\n                                if (err instanceof Error &&\n                                    (err.message.includes(\"not be cloned\")\n                                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                                    )) {\n                                    Object.defineProperty(err, \"stack\", {\n                                        configurable: true,\n                                        enumerable: false,\n                                        writable: true,\n                                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                            + `at ${task.fn} (${task.module})`,\n                                    });\n                                }\n                                if (task.resolver) {\n                                    task.resolver.reject(err);\n                                    if (task.channel) {\n                                        task.channel.close();\n                                    }\n                                }\n                                else if (task.channel) {\n                                    task.channel.close(err);\n                                }\n                                else {\n                                    task.error = err;\n                                }\n                            }\n                            else {\n                                const value = unwrapReturnValue(msg.value);\n                                if (task.resolver) {\n                                    task.resolver.resolve(value);\n                                }\n                                else {\n                                    task.result = { value };\n                                }\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            poolRecord.tasks.delete(msg.taskId);\n                            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                                // Allow the main thread to exit if the event\n                                // loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        else if (msg.type === \"yield\") {\n                            const value = unwrapReturnValue(msg.value);\n                            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.push({ value, done: msg.done });\n                            if (msg.done) {\n                                // The final message of yield event is the\n                                // return value.\n                                handleMessage({\n                                    type: \"return\",\n                                    value,\n                                    taskId: msg.taskId,\n                                });\n                            }\n                        }\n                        else if (msg.type === \"gen\") {\n                            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n                        }\n                    }\n                };\n                const handleClose = (err) => {\n                    for (const taskId of poolRecord.tasks) {\n                        poolRecord.tasks.delete(taskId);\n                        const task = remoteTasks.get(taskId);\n                        if (task) {\n                            if (task.resolver) {\n                                task.resolver.reject(err);\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            else if (task.channel) {\n                                task.channel.close(err);\n                            }\n                            else {\n                                task.error = err;\n                            }\n                        }\n                    }\n                    workerPool = workerPool.filter(item => item !== poolRecord);\n                };\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to\n                            // the channel in the worker thread when the thread\n                            // is terminated. This situation often occurs when\n                            // using `run()` to call function and the `result()`\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if ((arg instanceof Exception)\n            || isDOMException(arg)\n            || isAggregateError(arg)) {\n            return toObject(arg);\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n                else if ((value instanceof Exception)\n                    || isDOMException(value)\n                    || isAggregateError(value)) {\n                    arg[key] = toObject(value);\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            arg = arg.map(item => {\n                if (item instanceof ArrayBuffer) {\n                    transferable.push(item);\n                    return item;\n                }\n                else if ((item instanceof Exception)\n                    || isDOMException(item)\n                    || isAggregateError(item)) {\n                    return toObject(item);\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nexport function unwrapReturnValue(value) {\n    if (isPlainObject(value) && (value[\"@@type\"] === \"Exception\" ||\n        value[\"@@type\"] === \"DOMException\" ||\n        value[\"@@type\"] === \"AggregateError\")) {\n        return fromObject(value);\n    }\n    return value;\n}\nasync function safeRemoteCall(worker, req, transferable, taskId) {\n    try {\n        worker.postMessage(req, transferable);\n    }\n    catch (err) {\n        remoteTasks.delete(taskId);\n        if (typeof worker[\"unref\"] === \"function\") {\n            worker.unref();\n        }\n        throw err;\n    }\n}\nfunction createRemoteCall(module, fn, args) {\n    const taskId = taskIdCounter.next().value;\n    remoteTasks.set(taskId, { module, fn });\n    let getWorker = acquireWorker(taskId);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then(async (worker) => {\n        await safeRemoteCall(worker, {\n            type: \"call\",\n            module,\n            fn,\n            args: _args,\n            taskId,\n        }, transferable, taskId);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                remoteTasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                remoteTasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return getWorker.then(() => new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            remoteTasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            remoteTasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                })).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                remoteTasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                remoteTasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                const { args, transferable } = wrapArgs([input], getWorker);\n                await safeRemoteCall(worker, {\n                    type: \"next\",\n                    args: args,\n                    taskId,\n                }, transferable, taskId);\n                return await task.channel.pop();\n            }\n        },\n        async return(value) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            const { args, transferable } = wrapArgs([value], getWorker);\n            await safeRemoteCall(worker, {\n                type: \"return\",\n                args: args,\n                taskId,\n            }, transferable, taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            await safeRemoteCall(worker, {\n                type: \"throw\",\n                args: [err],\n                taskId,\n            }, transferable, taskId);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(module, fn, args) {\n    const getReturns = resolveModule(module).then(mod => {\n        return mod[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    let lines = stackTrace.split(\"\\n\");\n    const offset = lines.findIndex(line => line === \"Error\");\n    if (offset !== -1) {\n        lines = lines.slice(offset); // fix for tsx in Node.js v16\n    }\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            if (IsPath.test(baseUrl)) {\n                baseUrl = \"file://\" + baseUrl;\n            }\n            else if (isDeno) {\n                baseUrl = \"file://\" + Deno.cwd() + \"/\";\n            }\n            else if (isNode || isBun) {\n                baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n            else if (typeof location === \"object\") {\n                baseUrl = location.href;\n            }\n            else {\n                baseUrl = \"\";\n            }\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module so its functions will be run in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS\n * module, **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * Data are cloned and transferred between threads via **Structured Clone**\n * **Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel}\n * can also be used to transfer data between threads. To do so, just passed a\n * channel instance to the threaded function. But be aware, channel can only be\n * used as a parameter, return a channel from the threaded function is not\n * allowed. Once passed, the data can only be transferred into and out-from the\n * function.\n *\n * The difference between using a channel and a generator function for streaming\n * processing is, for a generator function, `next(value)` is coupled with a\n * `yield value`, the process is blocked between **next** calls, channel doesn't\n * have this limit, we can use it to stream all the data into the function\n * before processing and receiving any result.\n *\n * The threaded function also supports `ArrayBuffer`s as transferable objects.\n * If an array buffer is presented as an argument or the direct property of an\n * argument (assume it's a plain object), or the array buffer is the return\n * value or the direct property of the return value (assume it's a plain object),\n * it automatically becomes a transferrable object and will be transferred to\n * the other thread instead of being cloned. This strategy allows us to easily\n * compose objects like `Request` and `Response` instances into plain objects\n * and pass them between threads without overhead.\n *\n * @remarks\n * If the current module is already in a worker thread, use this function won't\n * create another worker thread.\n *\n * @remarks\n * Cloning and transferring data between the main thread and worker threads are\n * very heavy and slow, worker threads are only intended to run CPU-intensive\n * tasks or divide tasks among multiple threads, they have no advantage when\n * performing IO-intensive tasks such as handling HTTP requests, always prefer\n * `cluster` module for that kind of purpose.\n *\n * @remarks\n * For error instances, only the following types are guaranteed to be sent and\n * received properly between threads.\n *\n * - `Error`\n * - `EvalError`\n * - `RangeError`\n * - `ReferenceError`\n * - `SyntaxError`\n * - `TypeError`\n * - `URIError`\n * - `AggregateError` (as arguments, return values, thrown values, or shallow\n *   object properties)\n * - `Exception` (as arguments, return values, thrown values, or shallow object\n *   properties)\n * - `DOMException` (as arguments, return values, thrown values, or shallow\n *   object properties)\n *\n * In order to handle errors properly between threads, throw well-known error\n * types or use `Exception` (or `DOMException`) with error names in the threaded\n * function.\n *\n * @example\n * ```ts\n * // regular or async function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * // generator or async generator function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // use channel\n * import parallel from \"@ayonli/jsext/parallel\";\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n * import { readAll } from \"@ayonli/jsext/read\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<{ value: number; done: boolean; }>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);      // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * console.log(await length); // 10\n * ```\n *\n * @example\n * ```ts\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * // use transferrable\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const arr = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n * const length = await mod.transfer(arr.buffer);\n *\n * console.log(length);     // 10\n * console.log(arr.length); // 0\n * ```\n *\n * @remarks\n * If the application is to be bundled, use the following syntax to link the\n * module instead, it will prevent the bundler from including the file and\n * rewriting the path.\n *\n * ```ts\n * const mod = parallel<typeof import(\"./examples/worker.mjs\")>(\"./examples/worker.mjs\");\n * ```\n */\nfunction parallel(module) {\n    let modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    return new Proxy(Object.create(null), {\n        get: (target, prop) => {\n            if (Reflect.has(target, prop)) {\n                return target[prop];\n            }\n            else if (typeof prop === \"symbol\") {\n                return undefined;\n            }\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not\n     * set, the program by default uses CPU core numbers as the limit.\n     */\n    parallel.maxWorkers = undefined;\n    /**\n     * In browsers, by default, the program loads the worker entry directly from\n     * GitHub, which could be slow due to poor internet connection, we can copy\n     * the entry file `bundle/worker.mjs` to a local path of our website and set\n     * this option to that path so that it can be loaded locally.\n     *\n     * Or, if the code is bundled, the program won't be able to automatically\n     * locate the entry file in the file system, in such case, we can also copy\n     * the entry file (`bundle/worker.mjs` for Bun, Deno and the browser,\n     * `bundle/worker-node.mjs` for Node.js) to a local directory and supply\n     * this option instead.\n     */\n    parallel.workerEntry = undefined;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map","import chan from \"./chan.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { fromErrorEvent, fromObject } from \"./error/index.ts\";\nimport { handleChannelMessage, isChannelMessage, isNode, isBun, isDeno, IsPath, } from \"./util.ts\";\nimport parallel, { getMaxParallelism, sanitizeModuleId, createWorker, isCallResponse, wrapArgs, unwrapReturnValue, } from \"./parallel.ts\";\nconst workerPools = new Map();\nlet gcTimer;\n// The worker consumer queue is nothing but a callback list, once a worker is\n// available, the runner pop a consumer and run the callback, which will retry\n// gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs the given `script` in a worker thread and abort the task at any time.\n *\n * This function is similar to {@link parallel}(), many features applicable to\n * `parallel()` are also applicable to `run()`, except the following:\n *\n * 1. The `script` can only be a filename, and is relative to the current\n *   working directory (or the current URL) if not absolute.\n * 2. Only one task is allow to run at a time for one worker thread, set\n *   {@link run.maxWorkers} to allow more tasks to be run at the same time if\n *   needed.\n * 3. By default, the worker thread is dropped after the task settles, set\n *   `keepAlive` option in order to reused it.\n *\n * @example\n * ```ts\n * // result\n * import run from \"@ayonli/jsext/run\";\n *\n * const job1 = await run(\"examples/worker.mjs\", [\"World\"]);\n * console.log(await job1.result()); // Hello, World\n * ```\n *\n * @example\n * ```ts\n * // iterate\n * import run from \"@ayonli/jsext/run\";\n *\n * const job2 = await run<string, [string[]]>(\n *     \"examples/worker.mjs\",\n *     [[\"foo\", \"bar\"]],\n *     { fn: \"sequence\" }\n * );\n * for await (const word of job2.iterate()) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // abort\n * import run from \"@ayonli/jsext/run\";\n * import _try from \"@ayonli/jsext/try\";\n *\n * const job3 = await run<string, [string]>(\"examples/worker.mjs\", [\"foobar\"], {\n *    fn: \"takeTooLong\",\n * });\n * await job3.abort();\n * const [err, res] = await _try(job3.result());\n * console.assert(err === null);\n * console.assert(res === undefined);\n * ```\n */\nasync function run(script, args, options) {\n    var _a;\n    const maxWorkers = run.maxWorkers || parallel.maxWorkers || await getMaxParallelism;\n    const fn = (options === null || options === void 0 ? void 0 : options.fn) || \"default\";\n    let modId = sanitizeModuleId(script);\n    let baseUrl = undefined;\n    if (isDeno) {\n        baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode || isBun) {\n        if (IsPath.test(modId)) {\n            // Only set baseUrl for relative modules, don't set it for node modules.\n            baseUrl = \"file://\" + process.cwd() + \"/\";\n        }\n    }\n    else if (typeof location === \"object\") {\n        baseUrl = location.href;\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    const req = {\n        type: \"call\",\n        module: modId,\n        fn,\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    const adapter = (options === null || options === void 0 ? void 0 : options.adapter) || \"worker_threads\";\n    const workerPool = (_a = workerPools.get(adapter)) !== null && _a !== void 0 ? _a : workerPools.set(adapter, []).get(adapter);\n    let poolRecord = workerPool.find(item => !item.busy);\n    if (poolRecord) {\n        poolRecord.busy = true;\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        // Fill the worker pool regardless the current call should keep-alive\n        // or not, this will make sure that the total number of workers will not\n        // exceed the `run.maxWorkers`. If the the call doesn't keep-alive the\n        // worker, it will be cleaned after the call.\n        workerPool.push(poolRecord = {\n            getWorker: createWorker({ adapter }),\n            adapter,\n            busy: true,\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                workerPools.forEach((workerPool, adapter) => {\n                    // GC: clean long-time unused workers\n                    const now = Date.now();\n                    const idealItems = [];\n                    workerPools.set(adapter, workerPool.filter(item => {\n                        const ideal = !item.busy\n                            && (now - item.lastAccess) >= 10000;\n                        if (ideal) {\n                            idealItems.push(item);\n                        }\n                        return !ideal;\n                    }));\n                    idealItems.forEach(async (item) => {\n                        const { worker } = await item.getWorker;\n                        if (typeof worker[\"terminate\"] === \"function\") {\n                            await worker\n                                .terminate();\n                        }\n                        else {\n                            worker.kill();\n                        }\n                    });\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        // Put the current call in the consumer queue if there are no workers\n        // available, once an existing call finishes, the queue will pop the its\n        // head consumer and retry.\n        return new Promise((resolve) => {\n            workerConsumerQueue.push(resolve);\n        }).then(() => run(modId, args, options));\n    }\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(async () => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        error = err;\n        await terminate();\n        handleClose(err, true);\n    }, options.timeout) : null;\n    const handleMessage = async (msg) => {\n        var _a, _b;\n        if (isChannelMessage(msg)) {\n            await handleChannelMessage(msg);\n        }\n        else if (isCallResponse(msg)) {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"return\" || msg.type === \"error\") {\n                if (msg.type === \"error\") {\n                    const err = isPlainObject(msg.error)\n                        ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                        : msg.error;\n                    if (err instanceof Error &&\n                        (err.message.includes(\"not be cloned\")\n                            || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                            || err.message.includes(\"Do not know how to serialize\") // JSON error\n                        )) {\n                        Object.defineProperty(err, \"stack\", {\n                            configurable: true,\n                            enumerable: false,\n                            writable: true,\n                            value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                + `at ${fn} (${modId})`,\n                        });\n                    }\n                    error = err;\n                }\n                else {\n                    result = { value: unwrapReturnValue(msg.value) };\n                }\n                (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n                handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            }\n            else if (msg.type === \"yield\") {\n                const value = unwrapReturnValue(msg.value);\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({\n                        type: \"return\",\n                        value,\n                    });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.push(value);\n                }\n            }\n        }\n    };\n    const handleClose = (err, terminated = false) => {\n        var _a, _b, _c;\n        timeout && clearTimeout(timeout);\n        if (!terminated) {\n            // Release before resolve.\n            release === null || release === void 0 ? void 0 : release();\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to gain the worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        else if (poolRecord) {\n            // Clean the pool before resolve.\n            // The `workerPool` of this key in the pool map may have been\n            // modified by other routines, we need to retrieve the newest value.\n            const remainItems = (_b = workerPools.get(adapter)) === null || _b === void 0 ? void 0 : _b.filter(record => record !== poolRecord);\n            if (remainItems === null || remainItems === void 0 ? void 0 : remainItems.length) {\n                workerPools.set(adapter, remainItems);\n            }\n            else {\n                workerPools.delete(adapter);\n            }\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_c = workerConsumerQueue.shift()) === null || _c === void 0 ? void 0 : _c();\n            }\n        }\n        if (err) {\n            error !== null && error !== void 0 ? error : (error = err);\n        }\n        if (error) {\n            if (resolver) {\n                resolver.reject(error);\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (channel) {\n                if (error instanceof Error) {\n                    channel.close(error);\n                }\n                else if (typeof error === \"string\") {\n                    channel.close(new Error(error));\n                }\n                else {\n                    // @ts-ignore\n                    channel.close(new Error(\"unknown error\", { cause: error }));\n                }\n            }\n        }\n        else {\n            result !== null && result !== void 0 ? result : (result = { value: void 0 });\n            if (resolver) {\n                resolver.resolve(result.value);\n            }\n            if (channel) {\n                channel.close();\n            }\n        }\n    };\n    const safeRemoteCall = async (worker, req, transferable = []) => {\n        try {\n            if (typeof worker[\"postMessage\"] === \"function\") {\n                worker.postMessage(req, transferable);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    worker.send(req, err => {\n                        err ? reject(err) : resolve();\n                    });\n                });\n            }\n        }\n        catch (err) {\n            if (typeof worker[\"unref\"] === \"function\") {\n                worker.unref();\n            }\n            error = err;\n            (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n            handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            throw err;\n        }\n    };\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            workerId = record.workerId;\n            worker.ref(); // prevent premature exit in the main thread\n            worker.on(\"message\", handleMessage);\n            worker.once(\"exit\", (code, signal) => {\n                if (!error && !result) {\n                    handleClose(new Error(`worker exited (${code !== null && code !== void 0 ? code : signal})`), true);\n                }\n            });\n            release = () => {\n                // allow the main thread to exit if the event loop is empty\n                worker.unref();\n                // Remove the event listener so that later calls will not mess\n                // up.\n                worker.off(\"message\", handleMessage);\n                worker.removeAllListeners(\"exit\");\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (error) {\n                // The worker take too long to start and timeout error already\n                // thrown.\n                await terminate();\n                throw error;\n            }\n            const { args } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req);\n        }\n        else if (isNode) {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleErrorEvent = (err) => {\n                if (!error && !result) {\n                    // In Node.js, worker will exit once erred.\n                    handleClose(err, true);\n                }\n            };\n            workerId = record.workerId;\n            worker.ref();\n            worker.on(\"message\", handleMessage);\n            worker.once(\"error\", handleErrorEvent);\n            release = () => {\n                worker.unref();\n                worker.off(\"message\", handleMessage);\n                worker.off(\"error\", handleErrorEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n        else { // isBun\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleCloseEvent = ((ev) => {\n                if (!error && !result) {\n                    handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"), true);\n                }\n            });\n            workerId = record.workerId;\n            worker.ref();\n            worker.onmessage = (ev) => handleMessage(ev.data);\n            worker.onerror = () => void worker.terminate(); // terminate once erred\n            worker.addEventListener(\"close\", handleCloseEvent);\n            release = () => {\n                worker.unref();\n                worker.onmessage = null;\n                worker.onerror = null;\n                worker.removeEventListener(\"close\", handleCloseEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n    }\n    else {\n        const record = await poolRecord.getWorker;\n        const worker = record.worker;\n        workerId = record.workerId;\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => {\n            var _a;\n            if (!error && !result) {\n                worker.terminate(); // ensure termination\n                handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"), true);\n            }\n        };\n        release = () => {\n            worker.onmessage = null;\n            worker.onerror = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = () => Promise.resolve(worker.terminate());\n        if (error) {\n            await terminate();\n            throw error;\n        }\n        const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n        req.args = args;\n        await safeRemoteCall(worker, req, transferable);\n    }\n    return {\n        workerId,\n        async abort(reason = undefined) {\n            timeout && clearTimeout(timeout);\n            if (reason) {\n                error = reason;\n            }\n            else {\n                result = { value: void 0 };\n            }\n            await terminate();\n            handleClose(null, true);\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n(function (run) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     * If not set, use the same setting as {@link parallel.maxWorkers}.\n     */\n    run.maxWorkers = undefined;\n})(run || (run = {}));\n// backward compatibility\nObject.defineProperties(run, {\n    workerEntry: {\n        set(v) {\n            parallel.workerEntry = v;\n        },\n        get() {\n            return parallel.workerEntry;\n        },\n    },\n});\nexport default run;\n//# sourceMappingURL=run.js.map","import wrap from \"./wrap.ts\";\nconst isBun = typeof Bun === \"object\";\nconst warnedRecord = new Map();\nexport default function deprecate(target, ...args) {\n    var _a, _b, _c, _d;\n    if (typeof target === \"function\") {\n        const tip = (_a = args[0]) !== null && _a !== void 0 ? _a : \"\";\n        const once = (_b = args[1]) !== null && _b !== void 0 ? _b : false;\n        return wrap(target, function wrapped(fn, ...args) {\n            emitWarning(fn.name + \"()\", wrapped, tip, once, isBun ? 1 : 2);\n            return fn.apply(this, args);\n        });\n    }\n    const forFn = args[0];\n    const tip = (_c = args[1]) !== null && _c !== void 0 ? _c : \"\";\n    const once = (_d = args[2]) !== null && _d !== void 0 ? _d : false;\n    return emitWarning(target, forFn, tip, once, 1);\n}\nfunction emitWarning(target, forFn, tip, once, lineNum) {\n    var _a;\n    if (!once || !warnedRecord.has(forFn)) {\n        let trace = {};\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(trace, forFn);\n        }\n        else {\n            trace = new Error(\"\");\n        }\n        let lines = trace.stack.split(\"\\n\");\n        const offset = lines.findIndex(line => line === \"Error\");\n        if (offset !== -1) {\n            lines = lines.slice(offset); // fix for tsx in Node.js v16\n        }\n        let line = (_a = lines[lineNum]) === null || _a === void 0 ? void 0 : _a.trim();\n        let warning = `${target} is deprecated`;\n        if (tip) {\n            warning += \", \" + tip;\n        }\n        if (line) {\n            let start = line.indexOf(\"(\");\n            if (start !== -1) {\n                start += 1;\n                const end = line.indexOf(\")\", start);\n                line = line.slice(start, end);\n            }\n            warning += \" (\" + line + \")\";\n        }\n        console.warn(\"DeprecationWarning:\", warning);\n        once && warnedRecord.set(forFn, true);\n    }\n}\n//# sourceMappingURL=deprecate.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport debounce from \"./debounce.ts\";\nimport mixins from \"./mixins.ts\";\nimport isClass, { isSubclassOf } from \"./isclass.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport lock, { Mutex } from \"./lock.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport run from \"./run.ts\";\nimport parallel from \"./parallel.ts\";\nimport example from \"./example.ts\";\nimport deprecate from \"./deprecate.ts\";\nexport { Channel, Queue, Mutex };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    debounce,\n    mixins,\n    isClass,\n    isSubclassOf,\n    chan,\n    queue,\n    lock,\n    read,\n    readAll,\n    run,\n    parallel,\n    example,\n    deprecate,\n};\nexport { jsext as default, _try, func, wrap, throttle, debounce, mixins, isClass, isSubclassOf, chan, queue, lock, read, readAll, run, parallel, example, deprecate, };\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which\n * can be used to carry deferred jobs that will be run after the main function\n * is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are\n * called in the LIFO order. Callbacks can be async functions if the main\n * function is an async function or an async generator function, and all the\n * running procedures will be awaited.\n *\n * @example\n * ```ts\n * import func from \"@ayonli/jsext/func\";\n * import * as fs from \"node:fs/promises\";\n *\n * export const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","import chan from \"./chan.ts\";\nimport { isFunction } from \"./try.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.push.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to\n            // make sure when it calls the close() function, the iterator is\n            // automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * import { readAll } from \"@ayonli/jsext/read\";\n * import * as fs from \"node:fs\";\n *\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n *\n * console.log(chunks);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Inspired by Golang's **Example as Test** design, creates a function that\n * carries example code with `// output:` comments, when the returned function\n * is called, it will automatically check if the actual output matches the one\n * declared in the comment.\n *\n * The example function receives a customized `console` object which will be\n * used to log outputs instead of using the built-in `console`.\n *\n * @remarks\n * This function is used to simplify the process of writing tests, currently,\n * it does not work in Bun, **tsx** and browsers, because Bun hasn't implement\n * the `Console` constructor and removes comments during runtime, **tsx** also\n * remove comments, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * import example from \"@ayonli/jsext/example\";\n *\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        });\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        }) !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk))\n                .join(\"\\n\")\n                .replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => {\n                                process.stdout.write(chunk, () => resolve());\n                            });\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","encoder","TextEncoder","_chars","chars","bytes","str","encode","Intl","Segmenter","segment","map","x","_trim","String","prototype","trim","_trimEnd","trimEnd","_trimStart","trimStart","call","indexOf","substring","random","min","max","floor","sequence","step","loop","id","isClass","value","Number","Boolean","BigInt","Symbol","includes","undefined","toString","name0","name","isSubclassOf","ctor1","ctor2","remove","splice","rand","orderBy","key","order","items","item","sort","a","b","isArray","_a","_b","reverse","sum","values","reduce","hasOwn","obj","Object","hasOwnProperty","pick","keys","result","omit","keptKeys","Reflect","ownKeys","filter","Error","forEach","isValid","is","NaN","Date","isPlainObject","proto","getPrototypeOf","compare","str1","str2","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","_bytes","words","matches","flat","_words","lines","_chunk","truncate","_truncate","stripEnd","suffix","endsWith","_stripEnd","stripStart","prefix","startsWith","_stripStart","byteLength","isAscii","every","byte","isFloat","isNaN","isFinite","isNumeric","strict","type","isBetween","first","last","_random","ele","another","_equals","_split","uniq","Set","uniqBy","fn","Map","has","set","_uniqBy","shuffle","j","_shuffle","toShuffled","toReversed","toSorted","_orderBy","groupBy","groups","list","get","_groupBy","keyBy","record","_keyBy","Uint8Array","copy","src","dest","subarray","concat","arrays","ele1","ele2","hasOwnMethod","method","getOwnPropertyDescriptor","patch","target","sources","source","as","TypeError","_type","primitiveMap","string","number","bigint","boolean","symbol","valueOf","typeOf","sanitize","options","deep","removeNulls","removeEmptyStrings","removeEmptyObjects","removeArrayItems","process","depth","create","sortKeys","getOwnPropertyNames","getOwnPropertySymbols","flatKeys","maxDepth","carrier","flatArrayIndices","path","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","test","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","deleteValue","delete","clear","CiMap","entries","callbackfn","thisArg","iterator","globalThis","Exception","message","code","defineProperty","configurable","enumerable","writable","cause","toObject","err","fromObject","DOMException","isAggregateError","isFirefoxOrSafari","navigator","userAgent","fromErrorEvent","event","error","shouldPatchStack","stack","filename","lineno","colno","isDOMException","AggregateError","toErrorEvent","line","callSite","find","start","lastIndexOf","end","index","parseInt","ErrorEvent","toJSON","typeRegistry","data","fromJSON","date","_c","Buffer","_d","_e","typeRecords","ins","assign","_f","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","JSON","parseAs","text","parse","prop","Thenable","_source","then","onfulfilled","onrejected","res","fulfilled","e","rejected","done","ThenableGenerator","args","ThenableAsyncGenerator","ThenableGeneratorFunction","anonymous","apply","__proto__","isFunction","val","wrap","wrapper","wrapped","bind","setPrototypeOf","Function","Cache","registry","mergeIfNotExists","mergeSuper","props","setProp","mergeHierarchy","mixin","_super","desc","dispose","idGenerator","MAX_SAFE_INTEGER","for","Channel","capacity","buffer","producers","consumers","state","RangeError","consume","shift","_data","pop","produce","close","channel","bufSize","queueSize","chan","Queue","handler","bufferSize","errorHandler","catch","onError","_queue","_value","_mutex","_unlocked","Mutex","lock","Lock","_a$1","mutex","ReferenceError","v","unlock","queue","isDeno","Deno","isBun","Bun","isNode","versions","node","isNodePrior14","version","IsPath","isMainThread","argv","WorkerGlobalScope","moduleCache","channelStore","isChannelMessage","msg","channelId","handleChannelMessage","raw","writers","write","wrapChannel","channelWrite","counter","defineProperties","wireChannel","taskIdCounter","remoteTasks","workerIdCounter","gcTimer","workerPool","getMaxParallelism","os","import","availableParallelism","cpus","hardwareConcurrency","sanitizeModuleId","_id","isCallResponse","createWorker","adapter","entry","parallel","workerEntry","fileURLToPath","_filename","document","location","require","pathToFileURL","__filename","href","_documentCurrentScript","URL","baseURI","_dirname","dirname","join","some","fork","worker","stdio","serialization","workerId","pid","once","off","kind","Worker","threadId","onerror","ev","addEventListener","url","fetch","blob","headers","buf","arrayBuffer","Blob","createObjectURL","wrapArgs","getWorker","transferable","arg","postMessage","send","ArrayBuffer","unwrapReturnValue","safeRemoteCall","req","taskId","unref","createRemoteCall","module","maxWorkers","poolRecord","tasks","lastAccess","now","handleMessage","task","resolver","generate","handleClose","on","_worker","onmessage","terminate","setInterval","idealItems","ideal","unrefTimer","add","ref","acquireWorker","_args","input","Infinity","createLocalCall","getReturns","modId","baseUrl","_url","default","resolveModule","mod","gen","extractBaseUrl","stackTrace","findIndex","cwd","captureStackTrace","trace","Proxy","parallel$1","workerPools","workerConsumerQueue","run","script","busy","kill","release","clearTimeout","keepAlive","terminated","remainItems","signal","removeAllListeners","handleErrorEvent","handleCloseEvent","removeEventListener","abort","iterate","run$1","warnedRecord","emitWarning","forFn","tip","lineNum","warning","console","warn","AsyncFunction","AsyncGeneratorFunction","jsext","try","_try","returns","func","callbacks","defer","cb","throttle","duration","noWait","handleCall","cache","pending","expires","finally","debounce","reducer","delay","hasKey","_cache","timer","_tasks","mixins","base","read","eventMap","handleBrowserErrorEvent","msgDesc","errDesc","closeDesc","cleanup","es","eventName","msgListener","_close","ws","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","readAll","example","expected","_expected","assert","Writable","Console","logs","decoder","TextDecoder","stdout","callback","_console","actual","decode","ok","suppress","handleResult","deprecate"],"mappings":"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"}