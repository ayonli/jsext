{"version":3,"file":"index.js","sources":["../array/base.ts","../string/index.ts","../number/index.ts","../object/index.ts","../mixins.ts","../array/index.ts","../math/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../uint8array/index.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../error/augment.ts","../json/index.ts","../external/check-iterable/index.mjs","../json/augment.ts","../external/thenable-generator/index.ts","../try.ts","../wrap.ts","../throttle.ts","../debounce.ts","../chan.ts","../queue.ts","../lock.ts","../util.ts","../parallel.ts","../run.ts","../deprecate.ts","../index.ts","../func.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array-like object. */\nexport function count(arr, ele) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === ele) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array-like object.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array-like object into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array-like object into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n//# sourceMappingURL=base.js.map","import { chunk as _chunk } from \"../array/base.ts\";\nconst encoder = new TextEncoder();\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a == b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/** Returns a random string, the charset matches `/[0-9a-zA-Z]/`. */\nexport function random(length) {\n    const chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * chars.length);\n        str += chars[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Returns the bytes of the given string. */\nexport function bytes(str) {\n    return encoder.encode(str);\n}\n/** Returns the characters of the string (emojis are supported). */\nexport function chars(str) {\n    if (typeof (Intl === null || Intl === void 0 ? void 0 : Intl.Segmenter) === \"function\") {\n        return Array.from(new Intl.Segmenter().segment(str))\n            .map((x) => x.segment);\n    }\n    else {\n        return Array.from(str);\n    }\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches].map(sub => sub.split(\"_\")).flat() : [];\n}\n/** Splits the string into lines by `\\n` or `\\r\\n`. */\nexport function lines(str) {\n    return str.split(/\\r?\\n/);\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst _trim = String.prototype.trim;\nconst _trimEnd = String.prototype.trimEnd;\nconst _trimStart = String.prototype.trimStart;\n/** Removes leading and trailing spaces or custom characters of the string. */\nexport function trim(str, chars = \"\") {\n    if (!chars) {\n        return _trim.call(str);\n    }\n    else {\n        return trimEnd(trimStart(str, chars), chars);\n    }\n}\n/** Removes trailing spaces or custom characters of the string. */\nexport function trimEnd(str, chars = \"\") {\n    if (!chars) {\n        return _trimEnd.call(str);\n    }\n    else {\n        let i = str.length;\n        while (i-- && chars.indexOf(str[i]) !== -1) { }\n        return str.substring(0, i + 1);\n    }\n}\n/** Removes leading spaces or custom characters of the string. */\nexport function trimStart(str, chars = \"\") {\n    if (!chars) {\n        return _trimStart.call(str);\n    }\n    else {\n        let i = 0;\n        do { } while (chars.indexOf(str[i]) !== -1 && ++i);\n        return str.substring(i);\n    }\n}\n/** Removes the given suffix of the string if present. */\nexport function stripEnd(str, suffix) {\n    if (str.endsWith(suffix)) {\n        return str.slice(0, -suffix.length);\n    }\n    return str;\n}\n/** Removes the given prefix of the string if present. */\nexport function stripStart(str, prefix) {\n    if (str.startsWith(prefix)) {\n        return str.slice(prefix.length);\n    }\n    return str;\n}\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return bytes(str).byteLength;\n}\n;\n/** Checks if all characters in this string are within the ASCII range. */\nexport function isAscii(str) {\n    return bytes(str).every(byte => byte >= 0 && byte <= 127);\n}\n//# sourceMappingURL=index.js.map","/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n *\n * @remarks `NaN` is not considered numeric.\n *\n * @param strict Only returns `true` when the value is of type `number`.\n */\nexport function isNumeric(value, strict = false) {\n    const type = typeof value;\n    if (strict) {\n        return type === \"number\" && !Number.isNaN(value);\n    }\n    else if (type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"number\") {\n        return !Number.isNaN(value);\n    }\n    else if (type === \"string\" && value) {\n        try {\n            BigInt(value);\n            return true;\n        }\n        catch (_a) {\n            return !Number.isNaN(Number(value));\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n;\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n;\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"stack\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n/**\n * Returns `true` is the given value is a plain object, that is, an object created by\n * the `Object` constructor or one with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value) {\n    if (typeof value !== \"object\" || value === null)\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === null || proto.constructor === Object;\n}\nexport function sanitize(obj, options = false) {\n    const deep = typeof options === \"object\" ? !!options.deep : !!options;\n    const removeNulls = typeof options === \"object\" ? !!options.removeNulls : false;\n    const removeEmptyStrings = typeof options === \"object\" ? !!options.removeEmptyStrings : false;\n    const removeEmptyObjects = typeof options === \"object\" ? !!(options === null || options === void 0 ? void 0 : options.removeEmptyObjects) : false;\n    const removeArrayItems = typeof options === \"object\" ? !!(options === null || options === void 0 ? void 0 : options.removeArrayItems) : false;\n    return (function process(target, depth) {\n        if (typeof target === \"string\") {\n            return target.trim();\n        }\n        else if (Array.isArray(target)) {\n            const arr = !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n            if (removeArrayItems) {\n                return arr.filter(value => {\n                    if (value === null) {\n                        return !removeNulls;\n                    }\n                    else if (value === \"\") {\n                        return !removeEmptyStrings;\n                    }\n                    else if (isValid(value)) {\n                        if (typeof value !== \"object\") {\n                            return true;\n                        }\n                        else if (Array.isArray(value)) {\n                            return value.length > 0 || !removeEmptyObjects;\n                        }\n                        else if (isPlainObject(value)) {\n                            return Reflect.ownKeys(value).length > 0 || !removeEmptyObjects;\n                        }\n                        else {\n                            return true;\n                        }\n                    }\n                    else {\n                        return false;\n                    }\n                });\n            }\n            else {\n                return arr;\n            }\n        }\n        else if (isPlainObject(target)) {\n            return !depth || deep ? Reflect.ownKeys(target).reduce((result, key) => {\n                const value = process(target[key], depth + 1);\n                if (value === null) {\n                    if (!removeNulls) {\n                        result[key] = value;\n                    }\n                }\n                else if (value === \"\") {\n                    if (!removeEmptyStrings) {\n                        result[key] = value;\n                    }\n                }\n                else if (isValid(value)) {\n                    if (typeof value !== \"object\") {\n                        result[key] = value;\n                    }\n                    else if (Array.isArray(value)) {\n                        if (value.length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else if (isPlainObject(value)) {\n                        if (Reflect.ownKeys(value).length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else {\n                        result[key] = value;\n                    }\n                }\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Creates an object with sorted keys (in ascending order) of the original object.\n *\n * @remarks Symbol keys are not sorted and remain their original order.\n * @remarks This function only operates on plain objects and arrays.\n */\nexport function sortKeys(obj, deep = false) {\n    return (function process(target, depth) {\n        if (isPlainObject(target)) {\n            return !depth || deep ? [\n                ...Object.getOwnPropertyNames(target).sort(),\n                ...Object.getOwnPropertySymbols(target)\n            ].reduce((result, key) => {\n                result[key] = process(target[key], depth + 1);\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else if (Array.isArray(target)) {\n            return !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Create an object with flatted keys of the original object, the children\n * nodes' properties will be transformed to a string-represented path.\n *\n * @remarks This function only operates on plain objects and arrays.\n *\n * @param depth Default value: `1`.\n * @example\n * ```ts\n * const obj = flatKeys({ foo: { bar: \"hello\", baz: \"world\" } });\n * console.log(obj);\n * // { \"foo.bar\": \"hello\", \"foo.baz\": \"world\" }\n * ```\n */\nexport function flatKeys(obj, depth = 1, options = {}) {\n    var _a;\n    const maxDepth = depth;\n    const carrier = obj.constructor ? {} : Object.create(null);\n    const flatArrayIndices = (_a = options === null || options === void 0 ? void 0 : options.flatArrayIndices) !== null && _a !== void 0 ? _a : false;\n    if (!isPlainObject(obj) && (!Array.isArray(obj) || !flatArrayIndices)) {\n        return obj;\n    }\n    (function process(target, path, depth) {\n        if (depth === maxDepth) {\n            carrier[path] = target;\n        }\n        else if (Array.isArray(target) && depth) {\n            if (!flatArrayIndices) {\n                carrier[path] = target;\n            }\n            else {\n                target.forEach((value, i) => {\n                    process(value, path ? `${path}.${i}` : String(i), path ? depth + 1 : depth);\n                });\n            }\n        }\n        else if (isPlainObject(target) || (Array.isArray(target) && !depth)) {\n            Reflect.ownKeys(target).forEach(key => {\n                const value = target[key];\n                if (typeof key === \"symbol\") {\n                    if (depth === 0) { // only allow top-level symbol properties\n                        carrier[key] = value;\n                    }\n                }\n                else {\n                    process(value, path ? `${path}.${key}` : key, path ? depth + 1 : depth);\n                }\n            });\n        }\n        else {\n            carrier[path] = target;\n        }\n    })(obj, \"\", 0);\n    return carrier;\n}\n//# sourceMappingURL=index.js.map","import { hasOwn } from \"./object/index.ts\";\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport default function mixins(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * import { isSubclassOf } from \"@ayonli/jsext/mixins\";\n *\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n//# sourceMappingURL=mixins.js.map","import { isSubclassOf } from \"../mixins.ts\";\nimport { random as rand } from \"../number/index.ts\";\nimport { count as _count, equals as _equals, split as _split, chunk as _chunk, } from \"./base.ts\";\n/** Returns the first element of the array, or `undefined` if the array is empty. */\nexport function first(arr) {\n    return arr[0];\n}\n/** Returns the last element of the array, or `undefined` if the array is empty. */\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n/** Returns a random element of the array, or `undefined` if the array is empty. */\nexport function random(arr, remove = false) {\n    if (!arr.length) {\n        return undefined;\n    }\n    else if (arr.length === 1) {\n        if (remove) {\n            return arr.splice(0, 1)[0];\n        }\n        else {\n            return arr[0];\n        }\n    }\n    const i = rand(0, arr.length - 1);\n    if (remove) {\n        return arr.splice(i, 1)[0];\n    }\n    else {\n        return arr[i];\n    }\n}\n/** Counts the occurrence of the element in the array. */\nexport function count(arr, ele) {\n    return _count(arr, ele);\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Returns a subset of the array that contains only unique items filtered by the\n * given callback function.\n */\nexport function uniqBy(arr, fn) {\n    const map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        const key = fn(item, i);\n        map.has(key) || map.set(key, item);\n    }\n    return [...map.values()];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    if (typeof key === \"function\") {\n        return orderBy(items.map((item, i) => ({\n            key: key(item, i),\n            value: item,\n        })), \"key\", order).map(({ value }) => value);\n    }\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const groups = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\nexport function keyBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const map = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            map.set(key, item);\n        }\n        return map;\n    }\n    else {\n        const record = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            record[key] = item;\n        }\n        return record;\n    }\n}\n//# sourceMappingURL=index.js.map","/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import { compare, random, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, bytes as _bytes, chars as _chars, words as _words, lines as _lines, trim as _trim, trimEnd as _trimEnd, trimStart as _trimStart, stripEnd as _stripEnd, stripStart as _stripStart, byteLength as _byteLength, isAscii as _isAscii, } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.bytes = function bytes() {\n    return _bytes(String(this));\n};\nString.prototype.chars = function chars() {\n    return _chars(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.lines = function lines() {\n    return _lines(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.trim = function trim(chars = \"\") {\n    return _trim(String(this), chars);\n};\nString.prototype.trimEnd = function trimEnd(chars = \"\") {\n    return _trimEnd(String(this), chars);\n};\nString.prototype.trimStart = function trimStart(chars = \"\") {\n    return _trimStart(String(this), chars);\n};\nString.prototype.stripEnd = function stripEnd(suffix) {\n    return _stripEnd(String(this), suffix);\n};\nString.prototype.stripStart = function stripStart(prefix) {\n    return _stripStart(String(this), prefix);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\nString.prototype.isAscii = function isAscii() {\n    return _isAscii(String(this));\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { first as _first, last as _last, chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, keyBy as _keyBy, orderBy as _orderBy, random as _random, shuffle as _shuffle, split as _split, uniq as _uniq, uniqBy as _uniqBy, } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return _first(this);\n};\nArray.prototype.last = function last() {\n    return _last(this);\n};\nArray.prototype.random = function random(remove = false) {\n    return _random(this, remove);\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.uniqBy = function uniqBy(fn) {\n    return _uniqBy(this, fn);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function groupBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\nArray.prototype.keyBy = function keyBy(fn, type = Object) {\n    return _keyBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk, concat, copy } from \"./index.ts\";\nUint8Array.copy = copy;\nUint8Array.concat = concat;\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","import { equals as _equals, split as _split, chunk as _chunk } from \"../array/base.ts\";\nimport { sum } from \"../math/index.ts\";\n/** Copies bytes from `src` array to `dest` and returns the number of bytes copied. */\nexport function copy(src, dest) {\n    if (src.length > dest.length) {\n        src = src.subarray(0, dest.length);\n    }\n    dest.set(src);\n    return src.length;\n}\n/** Like `Buffer.concat` but for pure `Uint8Array`. */\nexport function concat(...arrays) {\n    const length = sum(...arrays.map(arr => arr.length));\n    const ctor = arrays[0].constructor;\n    const result = new ctor(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    ;\n    return result;\n}\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compares this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, isValid, isPlainObject, sanitize, sortKeys, flatKeys, } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.isValid = isValid;\nObject.isPlainObject = isPlainObject;\nObject.sanitize = sanitize;\nObject.sortKeys = sortKeys;\nObject.flatKeys = flatKeys;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test passes. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        super.set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = super.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return super.has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return super.delete(id);\n    }\n    *entries() {\n        for (const { key, value } of super.values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of super.values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of super.values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        super.forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else if (typeof options === \"string\") {\n            Object.defineProperty(this, \"name\", {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: options,\n            });\n        }\n        else {\n            if (options.name) {\n                Object.defineProperty(this, \"name\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.name,\n                });\n            }\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","import { isPlainObject, omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    if (!(err instanceof Error) && err[\"name\"] && err[\"message\"]) { // Error-like\n        err = fromObject(err, Error);\n    }\n    const obj = {\n        \"@@type\": err.constructor.name,\n        ...omit(err, [\"toString\", \"toJSON\", \"__callSiteEvals\"]),\n    };\n    if (obj[\"@@type\"] === \"AggregateError\" && Array.isArray(obj[\"errors\"])) {\n        obj[\"errors\"] = obj[\"errors\"].map(item => {\n            return item instanceof Error ? toObject(item) : item;\n        });\n    }\n    return obj;\n}\nexport function fromObject(obj, ctor = undefined) {\n    var _a, _b;\n    // @ts-ignore\n    if (!(obj === null || obj === void 0 ? void 0 : obj.name)) {\n        return null;\n    }\n    // @ts-ignore\n    ctor || (ctor = (globalThis[obj[\"@@type\"] || obj.name] || globalThis[obj.name]));\n    if (!ctor) {\n        if (obj[\"@@type\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    let err;\n    if (ctor.name === \"DOMException\" && typeof DOMException === \"function\") {\n        err = new ctor((_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\", obj[\"name\"]);\n    }\n    else {\n        err = Object.create(ctor.prototype, {\n            message: {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: (_b = obj[\"message\"]) !== null && _b !== void 0 ? _b : \"\",\n            },\n        });\n    }\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\n        \"@@type\",\n        \"name\",\n        \"message\",\n        \"stack\",\n        \"cause\"\n    ].includes(key));\n    otherKeys.forEach(key => {\n        var _a;\n        // @ts-ignore\n        (_a = err[key]) !== null && _a !== void 0 ? _a : (err[key] = obj[key]);\n    });\n    // @ts-ignore\n    if (isAggregateError(err) && Array.isArray(err[\"errors\"])) {\n        err[\"errors\"] = err[\"errors\"].map(item => {\n            return isPlainObject(item) ? fromObject(item) : item;\n        });\n    }\n    return err;\n}\n/** Creates an `ErrorEvent` instance based on the given error. */\nexport function toErrorEvent(err, type = \"error\") {\n    let filename = \"\";\n    let lineno = 0;\n    let colno = 0;\n    if (err.stack) {\n        const lines = err.stack.split(\"\\n\").map(line => line.trim());\n        let callSite = lines.find(line => line.startsWith(\"at \"));\n        if (callSite) {\n            callSite = callSite.slice(3);\n        }\n        else if (callSite = lines.find(line => line.includes(\"@\") && line.length > 1)) {\n            callSite = callSite.slice(callSite.indexOf(\"@\") + 1);\n        }\n        if (callSite) {\n            let start = callSite.lastIndexOf(\"(\");\n            let end = 0;\n            if (start !== -1) {\n                start += 1;\n                end = callSite.indexOf(\")\", start);\n                callSite = callSite.slice(start, end);\n            }\n            const matches = callSite.match(/:(\\d+):(\\d+)$/);\n            if (matches) {\n                filename = callSite.slice(0, matches.index);\n                lineno = parseInt(matches[1]);\n                colno = parseInt(matches[2]);\n            }\n        }\n    }\n    return new ErrorEvent(type, {\n        error: err,\n        message: err.message,\n        filename,\n        lineno,\n        colno,\n    });\n}\nconst isFirefoxOrSafari = typeof navigator === \"object\" && /Firefox|Safari/.test(navigator.userAgent);\n/** Creates an error instance based on the given `ErrorEvent` instance. */\nexport function fromErrorEvent(event) {\n    if (event.error instanceof Error) {\n        return event.error;\n    }\n    let err;\n    let shouldPatchStack = false;\n    if (event.error\n        && typeof event.error === \"object\"\n        && event.error[\"name\"]\n        && event.error[\"message\"]) { // Error-like\n        err = fromObject(event.error, Error);\n        shouldPatchStack = !err.stack;\n    }\n    else if (event.message) {\n        err = new Error(event.message);\n        shouldPatchStack = true;\n    }\n    else {\n        return null;\n    }\n    if (shouldPatchStack) {\n        let stack = \"\";\n        if (event.filename) {\n            if (isFirefoxOrSafari) {\n                stack = \"@\" + event.filename;\n            }\n            else {\n                stack = `Error: ${event.message}\\n    at ${event.filename}`;\n            }\n            if (event.lineno) {\n                stack += \":\" + event.lineno;\n            }\n            if (event.colno) {\n                stack += \":\" + event.colno;\n            }\n        }\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: stack,\n        });\n    }\n    return err;\n}\n/** @inner */\nexport function isDOMException(value) {\n    return ((typeof DOMException === \"function\") && (value instanceof DOMException))\n        || (value instanceof Error && value.constructor.name === \"DOMException\"); // Node.js v16-\n}\n/** @inner */\nexport function isAggregateError(value) {\n    // @ts-ignore\n    return (typeof AggregateError === \"function\" && value instanceof AggregateError)\n        || (value instanceof Error && value.constructor.name === \"AggregateError\");\n}\n//# sourceMappingURL=index.js.map","import { Exception, toErrorEvent, fromObject, toObject, fromErrorEvent } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.toErrorEvent = toErrorEvent;\nError.fromErrorEvent = fromErrorEvent;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","import { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nconst typeRegistry = new Map();\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    return as(data, type);\n}\nexport function as(data, type) {\n    if (data === null || data === undefined) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (data.type === \"Buffer\" && Array.isArray(data.data)) { // Node.js Buffer\n            if (typeof Buffer === \"function\" && type === Buffer) {\n                try {\n                    return Buffer.from(data.data);\n                }\n                catch (_d) {\n                    return null;\n                }\n            }\n            else if (typeof type.prototype[Symbol.iterator] === \"function\"\n                && typeof type[\"from\"] === \"function\") {\n                try {\n                    // Convert Node.js Buffer to TypedArray.\n                    return type.from(data.data);\n                }\n                catch (_e) {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        const keys = Object.getOwnPropertyNames(data);\n        const values = Object.values(data);\n        if (keys.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            values.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") {\n            // Assert the data is a TypedArray.\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            const err = fromObject(data);\n            if (err) {\n                // Support @JSON.type() decorator in Error constructors.\n                const typeRecords = typeRegistry.get(type.prototype);\n                if (typeRecords) {\n                    for (const key of Reflect.ownKeys(data)) {\n                        const ctor = typeRecords[key];\n                        if (ctor) {\n                            err[key] = as(data[key], ctor);\n                        }\n                    }\n                }\n            }\n            return err;\n        }\n        else {\n            const ins = Object.create(type.prototype);\n            const typeRecords = typeRegistry.get(type.prototype);\n            if (typeRecords) {\n                for (const key of Reflect.ownKeys(data)) {\n                    const ctor = typeRecords[key];\n                    ins[key] = ctor ? as(data[key], ctor) : data[key];\n                }\n            }\n            else {\n                Object.assign(ins, data);\n            }\n            return ins;\n        }\n    }\n    else {\n        return null;\n    }\n}\n/**\n * A decorator to instruct that the target property in the class is of a specific type.\n *\n * When parsing JSON via {@link parseAs}, this property is guaranteed to be of the given type.\n *\n * @remarks This decorator only supports TypeScript's `experimentalDecorators`.\n *\n * @example\n * ```ts\n * class Example {\n *     \\@type(Date)\n *     date: Date;\n * }\n * ```\n */\nexport function type(ctor) {\n    return (proto, prop) => {\n        const record = typeRegistry.get(proto);\n        if (record) {\n            record[prop] = ctor;\n        }\n        else {\n            typeRegistry.set(proto, { [prop]: ctor });\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    // @ts-ignore\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @param {any} obj\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @param {any} obj\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @param {any} obj\n * @returns {obj is { [x: string | symbol]: any; next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n * @param {any} obj\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @param {any} obj\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @param {any} obj\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @param {any} obj\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * @param {any} obj \n */\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { as, parseAs, type } from \"./index.ts\";\nJSON.parseAs = parseAs;\nJSON.as = as;\nJSON.type = type;\n//# sourceMappingURL=augment.js.map","if (!Symbol.asyncIterator) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol(\"Symbol.asyncIterator\")\n    });\n}\nexport const source = Symbol(\"GeneratorSource\");\nexport const status = Symbol(\"GeneratorStatus\");\nexport const result = Symbol(\"GeneratorResult\");\nexport class Thenable {\n    constructor(_source) {\n        this[source] = _source;\n        this[status] = \"suspended\";\n        this[result] = void 0;\n    }\n    then(onfulfilled, onrejected) {\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve(this[result]);\n        }\n        else if (this[status] === \"erred\") {\n            res = Promise.reject(this[source]);\n        }\n        else if (typeof this[source].then === \"function\") {\n            res = Promise.resolve(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = processIterator(this[source]);\n        }\n        else {\n            res = Promise.resolve(this[source]);\n        }\n        this[status] = \"closed\";\n        return res\n            .then(value => (this[result] = value))\n            .then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return Promise.resolve(this).then(null, onrejected);\n    }\n}\nexport class ThenableGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = { value: void 0, done: true };\n        }\n        else if (this[status] === \"erred\") {\n            return this.throw(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = this[source].next(value);\n        }\n        else {\n            res = { value: this[source], done: true };\n        }\n        if (res.done === true) {\n            this[status] = \"closed\";\n            this[result] = res.value;\n        }\n        return res;\n    }\n    return(value) {\n        this[status] = \"closed\";\n        this[result] = value;\n        if (this[source] && typeof this[source].return === \"function\") {\n            return this[source].return(value);\n        }\n        else {\n            return { value, done: true };\n        }\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return this[source].throw(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    ;\n}\nexport class ThenableAsyncGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve({ value: void 0, done: true });\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = Promise.resolve(this[source].next(value));\n        }\n        else {\n            res = Promise.resolve(this[source]).then(value => {\n                return { value, done: true };\n            });\n        }\n        return res.then(res => {\n            if (res.done === true) {\n                this[status] = \"closed\";\n                this[result] = res.value;\n            }\n            return res;\n        });\n    }\n    return(value) {\n        this[status] = \"closed\";\n        // The input value may be a promise-like object, using Promise.resolve()\n        // to guarantee the value is resolved.\n        return Promise.resolve(value).then(value => {\n            this[result] = value;\n            if (this[source] && typeof this[source].return === \"function\") {\n                return Promise.resolve(this[source].return(value));\n            }\n            else {\n                return Promise.resolve({ value, done: true });\n            }\n        });\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return Promise.resolve(this[source].throw(err));\n        }\n        else {\n            return Promise.reject(err);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport const ThenableGeneratorFunction = (function (fn) {\n    if (!(this instanceof ThenableGeneratorFunction)) {\n        return new ThenableGeneratorFunction(fn);\n    }\n    function anonymous(...args) {\n        try {\n            const source = fn.apply(this, args);\n            if (typeof source.then === \"function\" || isAsyncGenerator(source)) {\n                return new ThenableAsyncGenerator(source);\n            }\n            else {\n                return new ThenableGenerator(source);\n            }\n        }\n        catch (err) {\n            return Object.assign(new ThenableGenerator(err), {\n                [status]: \"erred\"\n            });\n        }\n    }\n    // HACK, let the returning function be an instance of\n    // ThenableGeneratorFunction.\n    anonymous.prototype = ThenableGeneratorFunction;\n    anonymous.__proto__ = this;\n    return anonymous;\n});\nThenableGeneratorFunction.create = function create(fn) {\n    return new ThenableGeneratorFunction(fn);\n};\nObject.setPrototypeOf(ThenableGeneratorFunction, Function);\nObject.setPrototypeOf(ThenableGeneratorFunction.prototype, Function.prototype);\nexport const create = ThenableGeneratorFunction.create;\nexport default create;\nfunction isAsyncGenerator(obj) {\n    return obj !== null\n        && typeof obj === \"object\"\n        && typeof obj.next === \"function\"\n        && typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\"\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\nfunction processIterator(iterator) {\n    return new Promise((resolve, reject) => {\n        function fulfilled(value) {\n            try {\n                step(iterator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            var _a;\n            try {\n                step((_a = iterator.throw) === null || _a === void 0 ? void 0 : _a.call(iterator, value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(item) {\n            Promise.resolve(item).then(result => {\n                result.done ? resolve(result.value) : new Promise(resolve => {\n                    resolve(result.value);\n                }).then(fulfilled, rejected);\n            });\n        }\n        step(iterator.next());\n    });\n}\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (returns instanceof ThenableAsyncGenerator) {\n        // special case\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\nexport function isFunction(val) {\n    return typeof val === \"function\";\n}\n//# sourceMappingURL=try.js.map","/**\n * Wraps a function inside another function and returns a new function that\n * copies the original function's name and other properties.\n *\n * @example\n * ```ts\n * import wrap from \"@ayonli/jsext/wrap\";\n *\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","const Cache = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = Promise.resolve(returns).finally(() => {\n                    cache.result = { value: cache.pending };\n                    cache.pending = undefined;\n                    cache.expires = Date.now() + duration;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (key === null || key === undefined || key === \"\") {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = Cache.get(key);\n        if (!cache) {\n            cache = { for: key };\n            Cache.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","const registry = new Map();\nexport default function debounce(handler, options, reducer = undefined) {\n    const delay = typeof options === \"number\" ? options : options.delay;\n    const key = typeof options === \"number\" ? null : options.for;\n    const hasKey = key !== null && key !== undefined && key !== \"\";\n    let _cache = hasKey ? registry.get(key) : undefined;\n    if (!_cache) {\n        _cache = {\n            for: key,\n            tasks: [],\n            data: undefined,\n            timer: undefined,\n        };\n        if (hasKey) {\n            registry.set(key, _cache);\n        }\n    }\n    const cache = _cache;\n    return async function (data) {\n        if (typeof reducer === \"function\" && cache.data !== undefined) {\n            cache.data = reducer(cache.data, data);\n        }\n        else {\n            cache.data = data;\n        }\n        cache.timer && clearTimeout(cache.timer);\n        cache.timer = setTimeout(() => {\n            // Move tasks and cached data to new variables, so during the middle\n            // of handler running, new calls won't affect the running process.\n            const _tasks = cache.tasks;\n            const _data = cache.data;\n            cache.tasks = [];\n            cache.data = undefined;\n            if (hasKey) {\n                registry.delete(key);\n            }\n            const resolve = (result) => {\n                _tasks.forEach(({ resolve }) => resolve(result));\n            };\n            const reject = (err) => {\n                _tasks.forEach(({ reject }) => reject(err));\n            };\n            try {\n                const res = handler.call(this, _data);\n                if (typeof (res === null || res === void 0 ? void 0 : res.then) === \"function\") {\n                    res.then(resolve, reject);\n                }\n                else {\n                    resolve(res);\n                }\n            }\n            catch (err) {\n                reject(err);\n            }\n        }, delay);\n        return await new Promise((resolve, reject) => {\n            cache.tasks.push({ resolve, reject });\n        });\n    };\n}\n//# sourceMappingURL=debounce.js.map","var _a;\nimport { sequence } from \"./number/index.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst idGenerator = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nexport const id = Symbol.for(\"id\");\nexport class Channel {\n    constructor(capacity = 0) {\n        this[_a] = idGenerator.next().value;\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.error = null;\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a\n     *  receiver is available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed\n     *        to the buffer.\n     *      - Otherwise, this function will block until there is new space for\n     *        the data in the buffer.\n     */\n    push(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block\n     * until new data is available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error\n     *   immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    pop() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will\n            // be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = null;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the\n     * receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no\n     * longer used, it will be automatically released by the GC. However, if\n     * the channel is used in a `for await...of...` loop, closing the channel\n     * will allow the loop to break automatically.\n     *\n     * Moreover, if the channel is used between parallel threads, it will no\n     * longer be able to release automatically, must explicitly call this\n     * function in order to release for GC.\n     */\n    close(err = null) {\n        if (this.state !== 1) {\n            // prevent duplicated call\n            return;\n        }\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [(_a = id, Symbol.asyncIterator)]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const queueSize = channel.producers.length;\n                const value = await channel.pop();\n                return {\n                    value: value,\n                    done: channel.state === 0 && !bufSize && !queueSize,\n                };\n            }\n        };\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Inspired by Golang, cerates a {@link Channel} that can be used to transfer\n * data across routines.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a\n * non-buffered channel, the sender and receiver must be present at the same\n * time (theoretically), otherwise, the channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered\n * channel, data will be queued in the buffer first and then consumed by the\n * receiver in FIFO order. Once the buffer size reaches the capacity limit, no\n * more data will be sent unless there is new space available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to\n * never block and behave like a message queue.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will\n * always be delivered, even if there is no receiver at the moment.\n *\n * Also, unlike Golang, `await channel.pop()` does not prevent the program from\n * exiting.\n *\n * Channels can be used to send and receive streaming data between main thread\n * and worker threads wrapped by `parallel()`, but once used that way,\n * `channel.close()` must be explicitly called in order to release the channel\n * for garbage collection.\n *\n * @example\n * ```ts\n * // non-buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.push(123);\n * })();\n *\n * const num = await channel.pop();\n * console.log(num); // 123\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * // buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>(3);\n *\n * await channel.push(123);\n * await channel.push(456);\n * await channel.push(789);\n *\n * const num1 = await channel.pop();\n * const num2 = await channel.pop();\n * const num3 = await channel.pop();\n *\n * console.log(num1); // 123\n * console.log(num2); // 456\n * console.log(num3); // 789\n * ```\n *\n * @example\n * ```ts\n * // iterable\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of sequence(1, 5)) {\n *         await channel.push(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","import chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.push(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents\n * concurrency conflicts, it returns a {@link Queue} instance that we can push\n * data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once\n * reached, the push operation will block until there is new space available.\n * By default, this option is not set and use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * import queue from \"@ayonli/jsext/queue\";\n *\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","var _a;\nimport BiMap from \"./collections/BiMap.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst _queue = Symbol.for(\"queue\");\nconst _value = Symbol.for(\"value\");\nconst _mutex = Symbol.for(\"mutex\");\nconst _unlocked = Symbol.for(\"unlocked\");\n/**\n * Mutual Exclusion prevents multiple coroutines from accessing the same shared\n * resource simultaneously.\n *\n * @remarks\n * Currently, the Mutex instance can not be used across multiple threads, but is\n * considering adding support for `parallel` threads.\n *\n * @example\n * ```ts\n * import { Mutex } from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n * import { random } from \"@ayonli/jsext/number\";\n * import { sleep } from \"@ayonli/jsext/promise\";\n *\n * const mutex = new Mutex(1);\n *\n * const concurrentOperation = func(async (defer) => {\n *     const shared = await mutex.lock();\n *     defer(() => shared.unlock()); // don't forget to unlock\n *\n *     const value1 = shared.value;\n *\n *     await otherAsyncOperations();\n *\n *     shared.value += 1\n *     const value2 = shared.value;\n *\n *     // Without mutex lock, the shared value may have been modified by other\n *     // calls during `await otherAsyncOperation()`, and the following\n *     // assertion will fail.\n *     console.assert(value1 + 1 === value2);\n * });\n *\n * async function otherAsyncOperations() {\n *     await sleep(100 * random(1, 10));\n * }\n *\n * await Promise.all([\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n * ]);\n * ```\n */\nexport class Mutex {\n    /**\n     * @param value The data associated to the mutex instance.\n     */\n    constructor(value) {\n        this[_a] = [];\n        this[_value] = value;\n    }\n    /**\n     * Acquires the lock of the mutex, optionally for modifying the shared\n     * resource.\n     */\n    async lock() {\n        await new Promise(resolve => {\n            if (this[_queue].length) {\n                this[_queue].push(resolve);\n            }\n            else {\n                this[_queue].push(resolve);\n                resolve();\n            }\n        });\n        const lock = Object.create(Mutex.Lock.prototype);\n        lock[_mutex] = this;\n        return lock;\n    }\n}\n_a = _queue;\n(function (Mutex) {\n    var _b;\n    class Lock {\n        constructor(mutex) {\n            this[_b] = false;\n            this[_mutex] = mutex;\n        }\n        /** Accesses the data associated to the mutex instance. */\n        get value() {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            return this[_mutex][_value];\n        }\n        set value(v) {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            this[_mutex][_value] = v;\n        }\n        /** Releases the current lock of the mutex. */\n        unlock() {\n            this[_unlocked] = true;\n            const queue = this[_mutex][_queue];\n            queue.shift();\n            const next = queue[0];\n            if (next) {\n                next();\n            }\n            else if (registry.hasValue(this[_mutex])) {\n                registry.deleteValue(this[_mutex]);\n            }\n        }\n        [(_b = _unlocked, Symbol.dispose)]() {\n            this.unlock();\n        }\n    }\n    Mutex.Lock = Lock;\n})(Mutex || (Mutex = {}));\nconst registry = new BiMap();\n/**\n * Acquires a mutex lock for the given key in order to perform concurrent\n * operations and prevent conflicts.\n *\n * If the key is currently being locked by other coroutines, this function will\n * block until the lock becomes available again.\n *\n * @example\n * ```ts\n * import lock from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n *\n * const key = \"lock_key\";\n *\n * export const concurrentOperation = func(async (defer) => {\n *     const ctx = await lock(key);\n *     defer(() => ctx.unlock()); // don't forget to unlock\n *\n *     // This block will never be run if there are other coroutines holding\n *     // the lock.\n *     //\n *     // Other coroutines trying to lock the same key will also never be run\n *     // before `unlock()`.\n * });\n * ```\n */\nexport default async function lock(key) {\n    let mutex = registry.get(key);\n    if (!mutex) {\n        registry.set(key, mutex = new Mutex(void 0));\n    }\n    return await mutex.lock();\n}\n//# sourceMappingURL=lock.js.map","var _a;\nimport { Channel, id } from \"./chan.ts\";\nexport const isDeno = typeof Deno === \"object\";\nexport const isBun = typeof Bun === \"object\";\nexport const isNode = !isDeno && !isBun && typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nexport const isNodePrior14 = isNode && parseInt(process.version.slice(1)) < 14;\nexport const IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\n// In Node.js, `process.argv` contains `--worker-thread` when the current thread is used as\n// a worker.\nconst isNodeWorkerThread = isNode && process.argv.includes(\"--worker-thread\");\nexport const isMainThread = !isNodeWorkerThread\n    && (isBun ? Bun.isMainThread : typeof WorkerGlobalScope === \"undefined\");\nconst moduleCache = new Map();\nconst channelStore = new Map();\nexport async function resolveModule(modId, baseUrl = undefined) {\n    let module;\n    if (isNode || isBun) {\n        const { fileURLToPath } = await import(\"url\");\n        const path = baseUrl ? fileURLToPath(new URL(modId, baseUrl).href) : modId;\n        module = await import(path);\n    }\n    else {\n        const url = new URL(modId, baseUrl).href;\n        module = moduleCache.get(url);\n        if (!module) {\n            if (isDeno) {\n                module = await import(url);\n                moduleCache.set(url, module);\n            }\n            else {\n                try {\n                    module = await import(url);\n                    moduleCache.set(url, module);\n                }\n                catch (err) {\n                    if (String(err).includes(\"Failed\")) {\n                        // The content-type of the response isn't application/javascript, try to\n                        // download it and load it with object URL.\n                        const res = await fetch(url);\n                        const buf = await res.arrayBuffer();\n                        const blob = new Blob([new Uint8Array(buf)], {\n                            type: \"application/javascript\",\n                        });\n                        const _url = URL.createObjectURL(blob);\n                        module = await import(_url);\n                        moduleCache.set(url, module);\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n        }\n    }\n    if (typeof module[\"default\"] === \"object\" && typeof module[\"default\"].default !== \"undefined\") {\n        module = module[\"default\"]; // CommonJS module with exports.default\n    }\n    return module;\n}\nexport function isChannelMessage(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"push\", \"close\"].includes(msg.type)\n        && typeof msg.channelId === \"number\";\n}\nexport async function handleChannelMessage(msg) {\n    const record = channelStore.get(msg.channelId);\n    if (!record)\n        return;\n    if (msg.type === \"push\") {\n        await record.raw.push(msg.value);\n    }\n    else if (msg.type === \"close\") {\n        const { value: err, channelId } = msg;\n        record.raw.close(err);\n        channelStore.delete(channelId);\n        if (isMainThread && record.writers.length > 1) {\n            // distribute the channel close event to all threads\n            record.writers.forEach(write => {\n                write(\"close\", err, channelId);\n            });\n        }\n    }\n}\nfunction wireChannel(channel, channelWrite) {\n    const channelId = channel[id];\n    if (!channelStore.has(channelId)) {\n        const push = channel.push.bind(channel);\n        const close = channel.close.bind(channel);\n        channelStore.set(channelId, {\n            channel,\n            raw: { push, close },\n            writers: [channelWrite],\n            counter: 0,\n        });\n        Object.defineProperties(channel, {\n            push: {\n                configurable: true,\n                writable: true,\n                value: async (data) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        const channel = record.channel;\n                        if (channel[\"state\"] !== 1) {\n                            throw new Error(\"the channel is closed\");\n                        }\n                        const write = record.writers[record.counter++ % record.writers.length];\n                        await Promise.resolve(write(\"push\", data, channelId));\n                    }\n                },\n            },\n            close: {\n                configurable: true,\n                writable: true,\n                value: (err = null) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        channelStore.delete(channelId);\n                        const channel = record.channel;\n                        record.writers.forEach(write => {\n                            write(\"close\", err, channelId);\n                        });\n                        // recover to the original methods\n                        Object.defineProperties(channel, {\n                            push: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.push,\n                            },\n                            close: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.close,\n                            },\n                        });\n                        channel.close(err);\n                    }\n                },\n            },\n        });\n    }\n    else {\n        const record = channelStore.get(channelId);\n        record.writers.push(channelWrite);\n    }\n}\nexport function wrapChannel(channel, channelWrite) {\n    wireChannel(channel, channelWrite);\n    return { \"@@type\": \"Channel\", \"@@id\": channel[id], \"capacity\": channel.capacity };\n}\nexport function unwrapChannel(obj, channelWrite) {\n    var _a, _b;\n    const channelId = obj[\"@@id\"];\n    let channel = (_a = channelStore.get(channelId)) === null || _a === void 0 ? void 0 : _a.channel;\n    if (!channel) {\n        channel = Object.assign(Object.create(Channel.prototype), {\n            [id]: channelId,\n            capacity: (_b = obj.capacity) !== null && _b !== void 0 ? _b : 0,\n            buffer: [],\n            producers: [],\n            consumers: [],\n            error: null,\n            state: 1,\n        });\n    }\n    wireChannel(channel, channelWrite);\n    return channel;\n}\n//# sourceMappingURL=util.js.map","import { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { Exception, fromErrorEvent, fromObject, isAggregateError, isDOMException, toObject } from \"./error/index.ts\";\nimport { isBun, isDeno, isNodePrior14, isNode, IsPath, isMainThread, resolveModule, isChannelMessage, handleChannelMessage, wrapChannel } from \"./util.ts\";\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst remoteTasks = new Map;\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\nlet gcTimer;\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let offset = \"import(\".length;\n        let start = str.lastIndexOf(\"import(\");\n        if (start === -1) {\n            offset = \"require(\".length;\n            start = str.lastIndexOf(\"require(\");\n        }\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += offset;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if ((isNode || isBun) && IsPath.test(_id)) {\n        if (!/\\.[cm]?(js|ts|)x?$/.test(_id)) { // if omitted suffix, add suffix\n            _id += isBun ? \".ts\" : \".js\";\n        }\n        else if (isNode) { // replace .ts/.mts/.cts to .js/.mjs/.cjs in Node.js\n            if (_id.endsWith(\".ts\")) {\n                _id = _id.slice(0, -3) + \".js\";\n            }\n            else if (_id.endsWith(\".mts\")) {\n                _id = _id.slice(0, -4) + \".mjs\";\n            }\n            else if (_id.endsWith(\".cts\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".cjs\";\n            }\n            else if (_id.endsWith(\".tsx\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".js\";\n            }\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport function isCallResponse(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options = {}) {\n    var _a;\n    let { adapter = \"worker_threads\" } = options;\n    let entry = parallel.workerEntry;\n    if (isNode || isBun) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules\n                // (hope it exists).\n                if (isBun) {\n                    entry = \"./node_modules/@ayonli/jsext/worker.ts\";\n                }\n                else {\n                    entry = \"./node_modules/@ayonli/jsext/bundle/worker-node.mjs\";\n                }\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if ([\n                    path.join(\"jsext\", \"cjs\"),\n                    path.join(\"jsext\", \"esm\"),\n                    path.join(\"jsext\", \"bundle\")\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this\n                    // module, redirect to the root directory of this package.\n                    _dirname = path.dirname(_dirname);\n                }\n                if (isBun) {\n                    entry = path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker-node.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isNodePrior14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        if (isDeno) {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    entry = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n                }\n                else {\n                    entry = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker.ts\"\n                    ].join(\"/\");\n                    // The application imports the compiled version of this\n                    // module, redirect to the source worker entry.\n                    if (entry.endsWith(\"/esm/worker.ts\")) {\n                        entry = entry.slice(0, -14) + \"/worker.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can\n            // bypass CORS security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nasync function acquireWorker(taskId) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker()).worker;\n                const handleMessage = (msg) => {\n                    var _a, _b, _c, _d;\n                    if (isChannelMessage(msg)) {\n                        handleChannelMessage(msg);\n                    }\n                    else if (isCallResponse(msg) && msg.taskId) {\n                        const task = remoteTasks.get(msg.taskId);\n                        if (!task)\n                            return;\n                        if (msg.type === \"return\" || msg.type === \"error\") {\n                            if (msg.type === \"error\") {\n                                const err = isPlainObject(msg.error)\n                                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                                    : msg.error;\n                                if (err instanceof Error &&\n                                    (err.message.includes(\"not be cloned\")\n                                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                                    )) {\n                                    Object.defineProperty(err, \"stack\", {\n                                        configurable: true,\n                                        enumerable: false,\n                                        writable: true,\n                                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                            + `at ${task.fn} (${task.module})`,\n                                    });\n                                }\n                                if (task.resolver) {\n                                    task.resolver.reject(err);\n                                    if (task.channel) {\n                                        task.channel.close();\n                                    }\n                                }\n                                else if (task.channel) {\n                                    task.channel.close(err);\n                                }\n                                else {\n                                    task.error = err;\n                                }\n                            }\n                            else {\n                                const value = unwrapReturnValue(msg.value);\n                                if (task.resolver) {\n                                    task.resolver.resolve(value);\n                                }\n                                else {\n                                    task.result = { value };\n                                }\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            poolRecord.tasks.delete(msg.taskId);\n                            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                                // Allow the main thread to exit if the event\n                                // loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        else if (msg.type === \"yield\") {\n                            const value = unwrapReturnValue(msg.value);\n                            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.push({ value, done: msg.done });\n                            if (msg.done) {\n                                // The final message of yield event is the\n                                // return value.\n                                handleMessage({\n                                    type: \"return\",\n                                    value,\n                                    taskId: msg.taskId,\n                                });\n                            }\n                        }\n                        else if (msg.type === \"gen\") {\n                            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n                        }\n                    }\n                };\n                const handleClose = (err) => {\n                    for (const taskId of poolRecord.tasks) {\n                        poolRecord.tasks.delete(taskId);\n                        const task = remoteTasks.get(taskId);\n                        if (task) {\n                            if (task.resolver) {\n                                task.resolver.reject(err);\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            else if (task.channel) {\n                                task.channel.close(err);\n                            }\n                            else {\n                                task.error = err;\n                            }\n                        }\n                    }\n                    workerPool = workerPool.filter(item => item !== poolRecord);\n                };\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to\n                            // the channel in the worker thread when the thread\n                            // is terminated. This situation often occurs when\n                            // using `run()` to call function and the `result()`\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if ((arg instanceof Exception)\n            || isDOMException(arg)\n            || isAggregateError(arg)) {\n            return toObject(arg);\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n                else if ((value instanceof Exception)\n                    || isDOMException(value)\n                    || isAggregateError(value)) {\n                    arg[key] = toObject(value);\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            arg = arg.map(item => {\n                if (item instanceof ArrayBuffer) {\n                    transferable.push(item);\n                    return item;\n                }\n                else if ((item instanceof Exception)\n                    || isDOMException(item)\n                    || isAggregateError(item)) {\n                    return toObject(item);\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nexport function unwrapReturnValue(value) {\n    if (isPlainObject(value) && (value[\"@@type\"] === \"Exception\" ||\n        value[\"@@type\"] === \"DOMException\" ||\n        value[\"@@type\"] === \"AggregateError\")) {\n        return fromObject(value);\n    }\n    return value;\n}\nasync function safeRemoteCall(worker, req, transferable, taskId) {\n    try {\n        worker.postMessage(req, transferable);\n    }\n    catch (err) {\n        remoteTasks.delete(taskId);\n        if (typeof worker[\"unref\"] === \"function\") {\n            worker.unref();\n        }\n        throw err;\n    }\n}\nfunction createRemoteCall(module, fn, args) {\n    const taskId = taskIdCounter.next().value;\n    remoteTasks.set(taskId, { module, fn });\n    let getWorker = acquireWorker(taskId);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then(async (worker) => {\n        await safeRemoteCall(worker, {\n            type: \"call\",\n            module,\n            fn,\n            args: _args,\n            taskId,\n        }, transferable, taskId);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                remoteTasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                remoteTasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return getWorker.then(() => new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            remoteTasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            remoteTasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                })).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                remoteTasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                remoteTasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                const { args, transferable } = wrapArgs([input], getWorker);\n                await safeRemoteCall(worker, {\n                    type: \"next\",\n                    args: args,\n                    taskId,\n                }, transferable, taskId);\n                return await task.channel.pop();\n            }\n        },\n        async return(value) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            const { args, transferable } = wrapArgs([value], getWorker);\n            await safeRemoteCall(worker, {\n                type: \"return\",\n                args: args,\n                taskId,\n            }, transferable, taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            await safeRemoteCall(worker, {\n                type: \"throw\",\n                args: [err],\n                taskId,\n            }, transferable, taskId);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(module, fn, args) {\n    const getReturns = resolveModule(module).then(mod => {\n        return mod[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    let lines = stackTrace.split(\"\\n\");\n    const offset = lines.findIndex(line => line === \"Error\");\n    if (offset !== -1) {\n        lines = lines.slice(offset); // fix for tsx in Node.js v16\n    }\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            if (IsPath.test(baseUrl)) {\n                baseUrl = \"file://\" + baseUrl;\n            }\n            else if (isDeno) {\n                baseUrl = \"file://\" + Deno.cwd() + \"/\";\n            }\n            else if (isNode || isBun) {\n                baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n            else if (typeof location === \"object\") {\n                baseUrl = location.href;\n            }\n            else {\n                baseUrl = \"\";\n            }\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module so its functions will be run in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS\n * module, **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * Data are cloned and transferred between threads via **Structured Clone**\n * **Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel}\n * can also be used to transfer data between threads. To do so, just passed a\n * channel instance to the threaded function. But be aware, channel can only be\n * used as a parameter, return a channel from the threaded function is not\n * allowed. Once passed, the data can only be transferred into and out-from the\n * function.\n *\n * The difference between using a channel and a generator function for streaming\n * processing is, for a generator function, `next(value)` is coupled with a\n * `yield value`, the process is blocked between **next** calls, channel doesn't\n * have this limit, we can use it to stream all the data into the function\n * before processing and receiving any result.\n *\n * The threaded function also supports `ArrayBuffer`s as transferable objects.\n * If an array buffer is presented as an argument or the direct property of an\n * argument (assume it's a plain object), or the array buffer is the return\n * value or the direct property of the return value (assume it's a plain object),\n * it automatically becomes a transferrable object and will be transferred to\n * the other thread instead of being cloned. This strategy allows us to easily\n * compose objects like `Request` and `Response` instances into plain objects\n * and pass them between threads without overhead.\n *\n * @remarks\n * If the current module is already in a worker thread, use this function won't\n * create another worker thread.\n *\n * @remarks\n * Cloning and transferring data between the main thread and worker threads are\n * very heavy and slow, worker threads are only intended to run CPU-intensive\n * tasks or divide tasks among multiple threads, they have no advantage when\n * performing IO-intensive tasks such as handling HTTP requests, always prefer\n * `cluster` module for that kind of purpose.\n *\n * @remarks\n * For error instances, only the following types are guaranteed to be sent and\n * received properly between threads.\n *\n * - `Error`\n * - `EvalError`\n * - `RangeError`\n * - `ReferenceError`\n * - `SyntaxError`\n * - `TypeError`\n * - `URIError`\n * - `AggregateError` (as arguments, return values, thrown values, or shallow\n *   object properties)\n * - `Exception` (as arguments, return values, thrown values, or shallow object\n *   properties)\n * - `DOMException` (as arguments, return values, thrown values, or shallow\n *   object properties)\n *\n * In order to handle errors properly between threads, throw well-known error\n * types or use `Exception` (or `DOMException`) with error names in the threaded\n * function.\n *\n * @example\n * ```ts\n * // regular or async function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * // generator or async generator function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // use channel\n * import parallel from \"@ayonli/jsext/parallel\";\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n * import { readAll } from \"@ayonli/jsext/read\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<{ value: number; done: boolean; }>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);      // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * console.log(await length); // 10\n * ```\n *\n * @example\n * ```ts\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * // use transferrable\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const arr = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n * const length = await mod.transfer(arr.buffer);\n *\n * console.log(length);     // 10\n * console.log(arr.length); // 0\n * ```\n *\n * @remarks\n * If the application is to be bundled, use the following syntax to link the\n * module instead, it will prevent the bundler from including the file and\n * rewriting the path.\n *\n * ```ts\n * const mod = parallel<typeof import(\"./examples/worker.mjs\")>(\"./examples/worker.mjs\");\n * ```\n */\nfunction parallel(module) {\n    let modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    return new Proxy(Object.create(null), {\n        get: (target, prop) => {\n            if (Reflect.has(target, prop)) {\n                return target[prop];\n            }\n            else if (typeof prop === \"symbol\") {\n                return undefined;\n            }\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not\n     * set, the program by default uses CPU core numbers as the limit.\n     */\n    parallel.maxWorkers = undefined;\n    /**\n     * In browsers, by default, the program loads the worker entry directly from\n     * GitHub, which could be slow due to poor internet connection, we can copy\n     * the entry file `bundle/worker.mjs` to a local path of our website and set\n     * this option to that path so that it can be loaded locally.\n     *\n     * Or, if the code is bundled, the program won't be able to automatically\n     * locate the entry file in the file system, in such case, we can also copy\n     * the entry file (`bundle/worker.mjs` for Bun, Deno and the browser,\n     * `bundle/worker-node.mjs` for Node.js) to a local directory and supply\n     * this option instead.\n     */\n    parallel.workerEntry = undefined;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map","import chan from \"./chan.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { fromErrorEvent, fromObject } from \"./error/index.ts\";\nimport { handleChannelMessage, isChannelMessage, isNode, isBun, isDeno, IsPath, } from \"./util.ts\";\nimport parallel, { getMaxParallelism, sanitizeModuleId, createWorker, isCallResponse, wrapArgs, unwrapReturnValue, } from \"./parallel.ts\";\nconst workerPools = new Map();\nlet gcTimer;\n// The worker consumer queue is nothing but a callback list, once a worker is\n// available, the runner pop a consumer and run the callback, which will retry\n// gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs the given `script` in a worker thread and abort the task at any time.\n *\n * This function is similar to {@link parallel}(), many features applicable to\n * `parallel()` are also applicable to `run()`, except the following:\n *\n * 1. The `script` can only be a filename, and is relative to the current\n *   working directory (or the current URL) if not absolute.\n * 2. Only one task is allow to run at a time for one worker thread, set\n *   {@link run.maxWorkers} to allow more tasks to be run at the same time if\n *   needed.\n * 3. By default, the worker thread is dropped after the task settles, set\n *   `keepAlive` option in order to reused it.\n *\n * @example\n * ```ts\n * // result\n * import run from \"@ayonli/jsext/run\";\n *\n * const job1 = await run(\"examples/worker.mjs\", [\"World\"]);\n * console.log(await job1.result()); // Hello, World\n * ```\n *\n * @example\n * ```ts\n * // iterate\n * import run from \"@ayonli/jsext/run\";\n *\n * const job2 = await run<string, [string[]]>(\n *     \"examples/worker.mjs\",\n *     [[\"foo\", \"bar\"]],\n *     { fn: \"sequence\" }\n * );\n * for await (const word of job2.iterate()) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // abort\n * import run from \"@ayonli/jsext/run\";\n * import _try from \"@ayonli/jsext/try\";\n *\n * const job3 = await run<string, [string]>(\"examples/worker.mjs\", [\"foobar\"], {\n *    fn: \"takeTooLong\",\n * });\n * await job3.abort();\n * const [err, res] = await _try(job3.result());\n * console.assert(err === null);\n * console.assert(res === undefined);\n * ```\n */\nasync function run(script, args, options) {\n    var _a;\n    const maxWorkers = run.maxWorkers || parallel.maxWorkers || await getMaxParallelism;\n    const fn = (options === null || options === void 0 ? void 0 : options.fn) || \"default\";\n    let modId = sanitizeModuleId(script);\n    let baseUrl = undefined;\n    if (isDeno) {\n        baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode || isBun) {\n        if (IsPath.test(modId)) {\n            // Only set baseUrl for relative modules, don't set it for node modules.\n            baseUrl = \"file://\" + process.cwd() + \"/\";\n        }\n    }\n    else if (typeof location === \"object\") {\n        baseUrl = location.href;\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    const req = {\n        type: \"call\",\n        module: modId,\n        fn,\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    const adapter = (options === null || options === void 0 ? void 0 : options.adapter) || \"worker_threads\";\n    const workerPool = (_a = workerPools.get(adapter)) !== null && _a !== void 0 ? _a : workerPools.set(adapter, []).get(adapter);\n    let poolRecord = workerPool.find(item => !item.busy);\n    if (poolRecord) {\n        poolRecord.busy = true;\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        // Fill the worker pool regardless the current call should keep-alive\n        // or not, this will make sure that the total number of workers will not\n        // exceed the `run.maxWorkers`. If the the call doesn't keep-alive the\n        // worker, it will be cleaned after the call.\n        workerPool.push(poolRecord = {\n            getWorker: createWorker({ adapter }),\n            adapter,\n            busy: true,\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                workerPools.forEach((workerPool, adapter) => {\n                    // GC: clean long-time unused workers\n                    const now = Date.now();\n                    const idealItems = [];\n                    workerPools.set(adapter, workerPool.filter(item => {\n                        const ideal = !item.busy\n                            && (now - item.lastAccess) >= 10000;\n                        if (ideal) {\n                            idealItems.push(item);\n                        }\n                        return !ideal;\n                    }));\n                    idealItems.forEach(async (item) => {\n                        const { worker } = await item.getWorker;\n                        if (typeof worker[\"terminate\"] === \"function\") {\n                            await worker\n                                .terminate();\n                        }\n                        else {\n                            worker.kill();\n                        }\n                    });\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        // Put the current call in the consumer queue if there are no workers\n        // available, once an existing call finishes, the queue will pop the its\n        // head consumer and retry.\n        return new Promise((resolve) => {\n            workerConsumerQueue.push(resolve);\n        }).then(() => run(modId, args, options));\n    }\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(async () => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        error = err;\n        await terminate();\n        handleClose(err, true);\n    }, options.timeout) : null;\n    const handleMessage = async (msg) => {\n        var _a, _b;\n        if (isChannelMessage(msg)) {\n            await handleChannelMessage(msg);\n        }\n        else if (isCallResponse(msg)) {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"return\" || msg.type === \"error\") {\n                if (msg.type === \"error\") {\n                    const err = isPlainObject(msg.error)\n                        ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                        : msg.error;\n                    if (err instanceof Error &&\n                        (err.message.includes(\"not be cloned\")\n                            || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                            || err.message.includes(\"Do not know how to serialize\") // JSON error\n                        )) {\n                        Object.defineProperty(err, \"stack\", {\n                            configurable: true,\n                            enumerable: false,\n                            writable: true,\n                            value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                + `at ${fn} (${modId})`,\n                        });\n                    }\n                    error = err;\n                }\n                else {\n                    result = { value: unwrapReturnValue(msg.value) };\n                }\n                (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n                handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            }\n            else if (msg.type === \"yield\") {\n                const value = unwrapReturnValue(msg.value);\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({\n                        type: \"return\",\n                        value,\n                    });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.push(value);\n                }\n            }\n        }\n    };\n    const handleClose = (err, terminated = false) => {\n        var _a, _b, _c;\n        timeout && clearTimeout(timeout);\n        if (!terminated) {\n            // Release before resolve.\n            release === null || release === void 0 ? void 0 : release();\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to gain the worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        else if (poolRecord) {\n            // Clean the pool before resolve.\n            // The `workerPool` of this key in the pool map may have been\n            // modified by other routines, we need to retrieve the newest value.\n            const remainItems = (_b = workerPools.get(adapter)) === null || _b === void 0 ? void 0 : _b.filter(record => record !== poolRecord);\n            if (remainItems === null || remainItems === void 0 ? void 0 : remainItems.length) {\n                workerPools.set(adapter, remainItems);\n            }\n            else {\n                workerPools.delete(adapter);\n            }\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_c = workerConsumerQueue.shift()) === null || _c === void 0 ? void 0 : _c();\n            }\n        }\n        if (err) {\n            error !== null && error !== void 0 ? error : (error = err);\n        }\n        if (error) {\n            if (resolver) {\n                resolver.reject(error);\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (channel) {\n                if (error instanceof Error) {\n                    channel.close(error);\n                }\n                else if (typeof error === \"string\") {\n                    channel.close(new Error(error));\n                }\n                else {\n                    // @ts-ignore\n                    channel.close(new Error(\"unknown error\", { cause: error }));\n                }\n            }\n        }\n        else {\n            result !== null && result !== void 0 ? result : (result = { value: void 0 });\n            if (resolver) {\n                resolver.resolve(result.value);\n            }\n            if (channel) {\n                channel.close();\n            }\n        }\n    };\n    const safeRemoteCall = async (worker, req, transferable = []) => {\n        try {\n            if (typeof worker[\"postMessage\"] === \"function\") {\n                worker.postMessage(req, transferable);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    worker.send(req, err => {\n                        err ? reject(err) : resolve();\n                    });\n                });\n            }\n        }\n        catch (err) {\n            if (typeof worker[\"unref\"] === \"function\") {\n                worker.unref();\n            }\n            error = err;\n            (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n            handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            throw err;\n        }\n    };\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            workerId = record.workerId;\n            worker.ref(); // prevent premature exit in the main thread\n            worker.on(\"message\", handleMessage);\n            worker.once(\"exit\", (code, signal) => {\n                if (!error && !result) {\n                    handleClose(new Error(`worker exited (${code !== null && code !== void 0 ? code : signal})`), true);\n                }\n            });\n            release = () => {\n                // allow the main thread to exit if the event loop is empty\n                worker.unref();\n                // Remove the event listener so that later calls will not mess\n                // up.\n                worker.off(\"message\", handleMessage);\n                worker.removeAllListeners(\"exit\");\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (error) {\n                // The worker take too long to start and timeout error already\n                // thrown.\n                await terminate();\n                throw error;\n            }\n            const { args } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req);\n        }\n        else if (isNode) {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleErrorEvent = (err) => {\n                if (!error && !result) {\n                    // In Node.js, worker will exit once erred.\n                    handleClose(err, true);\n                }\n            };\n            workerId = record.workerId;\n            worker.ref();\n            worker.on(\"message\", handleMessage);\n            worker.once(\"error\", handleErrorEvent);\n            release = () => {\n                worker.unref();\n                worker.off(\"message\", handleMessage);\n                worker.off(\"error\", handleErrorEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n        else { // isBun\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleCloseEvent = ((ev) => {\n                if (!error && !result) {\n                    handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"), true);\n                }\n            });\n            workerId = record.workerId;\n            worker.ref();\n            worker.onmessage = (ev) => handleMessage(ev.data);\n            worker.onerror = () => void worker.terminate(); // terminate once erred\n            worker.addEventListener(\"close\", handleCloseEvent);\n            release = () => {\n                worker.unref();\n                worker.onmessage = null;\n                worker.onerror = null;\n                worker.removeEventListener(\"close\", handleCloseEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n    }\n    else {\n        const record = await poolRecord.getWorker;\n        const worker = record.worker;\n        workerId = record.workerId;\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => {\n            var _a;\n            if (!error && !result) {\n                worker.terminate(); // ensure termination\n                handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"), true);\n            }\n        };\n        release = () => {\n            worker.onmessage = null;\n            worker.onerror = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = () => Promise.resolve(worker.terminate());\n        if (error) {\n            await terminate();\n            throw error;\n        }\n        const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n        req.args = args;\n        await safeRemoteCall(worker, req, transferable);\n    }\n    return {\n        workerId,\n        async abort(reason = undefined) {\n            timeout && clearTimeout(timeout);\n            if (reason) {\n                error = reason;\n            }\n            else {\n                result = { value: void 0 };\n            }\n            await terminate();\n            handleClose(null, true);\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n(function (run) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     * If not set, use the same setting as {@link parallel.maxWorkers}.\n     */\n    run.maxWorkers = undefined;\n})(run || (run = {}));\n// backward compatibility\nObject.defineProperties(run, {\n    workerEntry: {\n        set(v) {\n            parallel.workerEntry = v;\n        },\n        get() {\n            return parallel.workerEntry;\n        },\n    },\n});\nexport default run;\n//# sourceMappingURL=run.js.map","import wrap from \"./wrap.ts\";\nconst isBun = typeof Bun === \"object\";\nconst warnedRecord = new Map();\nexport default function deprecate(target, ...args) {\n    var _a, _b, _c, _d;\n    if (typeof target === \"function\") {\n        const tip = (_a = args[0]) !== null && _a !== void 0 ? _a : \"\";\n        const once = (_b = args[1]) !== null && _b !== void 0 ? _b : false;\n        return wrap(target, function wrapped(fn, ...args) {\n            emitWarning(fn.name + \"()\", wrapped, tip, once, isBun ? 1 : 2);\n            return fn.apply(this, args);\n        });\n    }\n    const forFn = args[0];\n    const tip = (_c = args[1]) !== null && _c !== void 0 ? _c : \"\";\n    const once = (_d = args[2]) !== null && _d !== void 0 ? _d : false;\n    return emitWarning(target, forFn, tip, once, 1);\n}\nfunction emitWarning(target, forFn, tip, once, lineNum) {\n    var _a;\n    if (!once || !warnedRecord.has(forFn)) {\n        let trace = {};\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(trace, forFn);\n        }\n        else {\n            trace = new Error(\"\");\n        }\n        let lines = trace.stack.split(\"\\n\");\n        const offset = lines.findIndex(line => line === \"Error\");\n        if (offset !== -1) {\n            lines = lines.slice(offset); // fix for tsx in Node.js v16\n        }\n        let line = (_a = lines[lineNum]) === null || _a === void 0 ? void 0 : _a.trim();\n        let warning = `${target} is deprecated`;\n        if (tip) {\n            warning += \", \" + tip;\n        }\n        if (line) {\n            let start = line.indexOf(\"(\");\n            if (start !== -1) {\n                start += 1;\n                const end = line.indexOf(\")\", start);\n                line = line.slice(start, end);\n            }\n            warning += \" (\" + line + \")\";\n        }\n        console.warn(\"DeprecationWarning:\", warning);\n        once && warnedRecord.set(forFn, true);\n    }\n}\n//# sourceMappingURL=deprecate.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport debounce from \"./debounce.ts\";\nimport mixins, { isSubclassOf } from \"./mixins.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport lock, { Mutex } from \"./lock.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport run from \"./run.ts\";\nimport parallel from \"./parallel.ts\";\nimport example from \"./example.ts\";\nimport deprecate from \"./deprecate.ts\";\nexport { Channel, Queue, Mutex };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    debounce,\n    mixins,\n    isSubclassOf,\n    chan,\n    queue,\n    lock,\n    read,\n    readAll,\n    run,\n    parallel,\n    example,\n    deprecate,\n};\nexport { jsext as default, _try, func, wrap, throttle, debounce, mixins, isSubclassOf, chan, queue, lock, read, readAll, run, parallel, example, deprecate, };\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which\n * can be used to carry deferred jobs that will be run after the main function\n * is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are\n * called in the LIFO order. Callbacks can be async functions if the main\n * function is an async function or an async generator function, and all the\n * running procedures will be awaited.\n *\n * @example\n * ```ts\n * import func from \"@ayonli/jsext/func\";\n * import * as fs from \"node:fs/promises\";\n *\n * export const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","import chan from \"./chan.ts\";\nimport { isFunction } from \"./try.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.push.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to\n            // make sure when it calls the close() function, the iterator is\n            // automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * import { readAll } from \"@ayonli/jsext/read\";\n * import * as fs from \"node:fs\";\n *\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n *\n * console.log(chunks);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Inspired by Golang's **Example as Test** design, creates a function that\n * carries example code with `// output:` comments, when the returned function\n * is called, it will automatically check if the actual output matches the one\n * declared in the comment.\n *\n * The example function receives a customized `console` object which will be\n * used to log outputs instead of using the built-in `console`.\n *\n * @remarks\n * This function is used to simplify the process of writing tests, currently,\n * it does not work in Bun, **tsx** and browsers, because Bun hasn't implement\n * the `Console` constructor and removes comments during runtime, **tsx** also\n * remove comments, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * import example from \"@ayonli/jsext/example\";\n *\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        });\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        }) !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk))\n                .join(\"\\n\")\n                .replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => {\n                                process.stdout.write(chunk, () => resolve());\n                            });\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","encoder","TextEncoder","bytes","str","encode","_trim","String","prototype","trim","_trimEnd","trimEnd","_trimStart","trimStart","chars","call","indexOf","substring","random","min","max","floor","sequence","step","loop","id","hasOwn","obj","key","Object","hasOwnProperty","pick","keys","reduce","result","undefined","omit","keptKeys","Reflect","ownKeys","filter","includes","Error","forEach","isValid","value","is","NaN","Date","toString","isPlainObject","proto","getPrototypeOf","mergeIfNotExists","source","mergeSuper","props","prop","setProp","mergeHierarchy","mixin","_super","name","desc","getOwnPropertyDescriptor","defineProperty","isSubclassOf","ctor1","ctor2","remove","splice","rand","orderBy","order","items","map","item","sort","a","b","isArray","_a","_b","reverse","sum","values","compare","str1","str2","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","_bytes","Intl","Segmenter","segment","x","words","matches","flat","_words","lines","_chunk","truncate","_truncate","stripEnd","suffix","endsWith","_stripEnd","stripStart","prefix","startsWith","_stripStart","byteLength","isAscii","every","byte","Number","isFloat","isNaN","isFinite","isNumeric","strict","type","BigInt","isBetween","first","last","_random","ele","another","_equals","_split","uniq","Set","uniqBy","fn","Map","has","set","_uniqBy","shuffle","j","_shuffle","toShuffled","toReversed","toSorted","_orderBy","groupBy","groups","list","get","_groupBy","keyBy","record","_keyBy","Uint8Array","copy","src","dest","subarray","concat","arrays","ele1","ele2","hasOwnMethod","method","patch","target","sources","as","TypeError","_type","primitiveMap","string","number","bigint","boolean","Boolean","symbol","Symbol","valueOf","sanitize","options","deep","removeNulls","removeEmptyStrings","removeEmptyObjects","removeArrayItems","process","depth","create","sortKeys","getOwnPropertyNames","getOwnPropertySymbols","flatKeys","maxDepth","carrier","flatArrayIndices","path","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","test","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","deleteValue","delete","clear","CiMap","entries","callbackfn","thisArg","iterator","globalThis","Exception","message","code","configurable","enumerable","writable","cause","toObject","err","fromObject","DOMException","isAggregateError","isFirefoxOrSafari","navigator","userAgent","fromErrorEvent","event","error","shouldPatchStack","stack","filename","lineno","colno","isDOMException","AggregateError","toErrorEvent","line","callSite","find","start","lastIndexOf","end","index","parseInt","ErrorEvent","toJSON","typeRegistry","data","fromJSON","date","_c","Buffer","_d","_e","typeRecords","ins","assign","_f","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","JSON","parseAs","text","parse","Thenable","_source","then","onfulfilled","onrejected","res","fulfilled","e","rejected","done","ThenableGenerator","args","ThenableAsyncGenerator","ThenableGeneratorFunction","anonymous","apply","__proto__","isFunction","val","wrap","wrapper","wrapped","bind","setPrototypeOf","Function","Cache","registry","dispose","idGenerator","MAX_SAFE_INTEGER","for","Channel","capacity","buffer","producers","consumers","state","RangeError","consume","shift","_data","pop","produce","close","channel","bufSize","queueSize","chan","Queue","handler","bufferSize","errorHandler","catch","onError","_queue","_value","_mutex","_unlocked","Mutex","lock","Lock","_a$1","mutex","ReferenceError","v","unlock","queue","isDeno","Deno","isBun","Bun","isNode","versions","node","isNodePrior14","version","IsPath","isMainThread","argv","WorkerGlobalScope","moduleCache","channelStore","isChannelMessage","msg","channelId","handleChannelMessage","raw","writers","write","wrapChannel","channelWrite","counter","defineProperties","wireChannel","taskIdCounter","remoteTasks","workerIdCounter","gcTimer","workerPool","getMaxParallelism","os","import","availableParallelism","cpus","hardwareConcurrency","sanitizeModuleId","_id","isCallResponse","createWorker","adapter","entry","parallel","workerEntry","fileURLToPath","_filename","document","location","require","pathToFileURL","__filename","href","_documentCurrentScript","URL","baseURI","_dirname","dirname","join","some","fork","worker","stdio","serialization","workerId","pid","once","off","kind","Worker","threadId","onerror","ev","addEventListener","url","fetch","blob","headers","buf","arrayBuffer","Blob","createObjectURL","wrapArgs","getWorker","transferable","arg","postMessage","send","ArrayBuffer","unwrapReturnValue","safeRemoteCall","req","taskId","unref","createRemoteCall","module","maxWorkers","poolRecord","tasks","lastAccess","now","handleMessage","task","resolver","generate","handleClose","on","_worker","onmessage","terminate","setInterval","idealItems","ideal","unrefTimer","add","ref","acquireWorker","_args","input","Infinity","createLocalCall","getReturns","modId","baseUrl","_url","default","resolveModule","mod","gen","extractBaseUrl","stackTrace","findIndex","cwd","captureStackTrace","trace","Proxy","parallel$1","workerPools","workerConsumerQueue","run","script","busy","kill","release","clearTimeout","keepAlive","terminated","remainItems","signal","removeAllListeners","handleErrorEvent","handleCloseEvent","removeEventListener","abort","iterate","run$1","warnedRecord","emitWarning","forFn","tip","lineNum","warning","console","warn","AsyncFunction","AsyncGeneratorFunction","jsext","try","_try","returns","func","callbacks","defer","cb","throttle","duration","noWait","handleCall","cache","pending","expires","finally","debounce","reducer","delay","hasKey","_cache","timer","_tasks","mixins","base","read","eventMap","handleBrowserErrorEvent","msgDesc","errDesc","closeDesc","cleanup","es","eventName","msgListener","_close","ws","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","readAll","example","expected","_expected","assert","Writable","Console","logs","decoder","TextDecoder","stdout","callback","_console","actual","decode","ok","suppress","handleResult","deprecate"],"mappings":"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"}