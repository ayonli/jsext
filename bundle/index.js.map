{"version":3,"file":"index.js","sources":["../array/index.ts","../string/index.ts","../number/index.ts","../uint8array/index.ts","../object/index.ts","../math/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../external/check-iterable/index.mjs","../try.ts","../error/augment.ts","../json/augment.ts","../json/index.ts","../throttle.ts","../mixins.ts","../chan.ts","../queue.ts","../run.ts","../index.ts","../func.ts","../wrap.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array. */\nexport function count(arr, ele) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === ele) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n/**\n * Orders the items of the array according to the specified comparable `key` (whose value\n * must either be a numeric or string).\n */\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map) {\n        const groups = new Map();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\n//# sourceMappingURL=index.js.map","import { chunk as _chunk } from \"../array/index.ts\";\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a == b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/** Returns a random string, the charset matches `/[0-9a-zA-Z]/`. */\nexport function random(length) {\n    const chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * chars.length);\n        str += chars[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches] : [];\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst encoder = new TextEncoder();\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return encoder.encode(str).byteLength;\n}\n;\n//# sourceMappingURL=index.js.map","/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n */\nexport function isNumeric(value) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"string\") {\n        if (!Number.isNaN(value)) {\n            return true;\n        }\n        else {\n            try {\n                BigInt(value);\n                return true;\n            }\n            catch (_a) {\n                return false;\n            }\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { equals as _equals, split as _split, chunk as _chunk } from \"../array/index.ts\";\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compare this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","export function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n;\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n;\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns `true` if the given value is valid. Thee following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n//# sourceMappingURL=index.js.map","/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import { compare, random, byteLength as _byteLength, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, words as _words } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, orderBy as _orderBy, shuffle as _shuffle, split as _split, uniq as _uniq } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return this[0];\n};\nArray.prototype.last = function last() {\n    return this[this.length - 1];\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function orderBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk } from \"./index.ts\";\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, isValid } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.isValid = isValid;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test is passed. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","const internal = Symbol(\"internal\");\n/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    get size() {\n        return this[internal].size;\n    }\n    constructor(iterable = null) {\n        this[internal] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        this[internal].set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = this[internal].get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return this[internal].has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return this[internal].delete(id);\n    }\n    clear() {\n        this[internal].clear();\n    }\n    *entries() {\n        for (const { key, value } of this[internal].values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of this[internal].values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of this[internal].values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        this[internal].forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else {\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","import { omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    return omit(err, []);\n}\nexport function fromObject(obj) {\n    var _a;\n    // @ts-ignore\n    let ctor = globalThis[obj.name];\n    if (!ctor) {\n        if (obj[\"name\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    const err = Object.create(ctor.prototype, {\n        message: {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: (_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\",\n        },\n    });\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\"name\", \"message\", \"stack\", \"cause\"].includes(key));\n    otherKeys.forEach(key => {\n        // @ts-ignore\n        err[key] = obj[key];\n    });\n    return err;\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @returns {obj is { next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns.then((value) => [null, value]);\n        return Promise.resolve(returns).catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\nexport function isFunction(val) {\n    return typeof val === \"function\";\n}\n//# sourceMappingURL=try.js.map","import { Exception, fromObject, toObject } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","import { parseAs } from \"./index.ts\";\nJSON.parseAs = parseAs;\n//# sourceMappingURL=augment.js.map","import { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    if (data === null) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (typeof Buffer === \"function\" &&\n            type === Buffer &&\n            data.type === \"Buffer\" &&\n            Array.isArray(data.data)) {\n            try {\n                return Buffer.from(data.data);\n            }\n            catch (_d) {\n                return null;\n            }\n        }\n        else if (type === Uint8Array && data.type === \"Buffer\" && Array.isArray(data.data)) {\n            try {\n                // convert Node.js Buffer to Uint8Array\n                return Uint8Array.from(data.data);\n            }\n            catch (_e) {\n                return null;\n            }\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\" &&\n            Object.getOwnPropertyNames(data).map(Number).every(i => !Number.isNaN(i))) { // TypedArray\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            return fromObject(data);\n        }\n        else {\n            return Object.assign(Object.create(type.prototype), data);\n        }\n    }\n    else {\n        return null;\n    }\n}\n//# sourceMappingURL=index.js.map","const throttleCaches = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = returns.then(value => {\n                    cache.pending = undefined;\n                    cache.result = { value };\n                    cache.expires = Date.now() + duration;\n                    return value;\n                }).catch(error => {\n                    cache.pending = undefined;\n                    cache.result = { error };\n                    cache.expires = Date.now() + duration;\n                    throw error;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (!key) {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = throttleCaches.get(key);\n        if (!cache) {\n            cache = { for: key };\n            throttleCaches.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { hasOwn } from \"./object/index.ts\";\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport default function mixins(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n//# sourceMappingURL=mixins.js.map","export class Channel {\n    constructor(capacity = 0) {\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a receiver is\n     *  available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed to the buffer.\n     *      - Otherwise, this function will block until there is new space for the data in the\n     *          buffer.\n     */\n    push(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block until new data is\n     * available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    pop() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = undefined;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no longer used, it\n     * will be automatically released by the GC. However, if the channel is used in a\n     * `for await...of...` loop, closing the channel will allow the loop to break automatically.\n     */\n    close(err = null) {\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const value = await channel.pop();\n                return { value: value, done: channel.state === 0 && !bufSize };\n            }\n        };\n    }\n}\n/**\n * Inspired by Golang, cerates a channel that can be used to transfer data within the program.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will always be delivered,\n * even if there is no receiver at the moment.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a non-buffered channel,\n * the sender and receiver must be present at the same time (theoretically), otherwise, the\n * channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered channel, data will\n * be queued in the buffer first and then consumed by the receiver in FIFO order. Once the\n * buffer size reaches the capacity limit, no more data will be sent unless there is new space\n * available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to never block and\n * behave like a message queue.\n *\n * @example\n * ```ts\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.push(123);\n * })();\n *\n * const num = await channel.pop();\n * console.log(num);\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * const channel = chan<number>(3);\n *\n * await channel.push(123);\n * await channel.push(456);\n * await channel.push(789);\n *\n * const num1 = await channel.pop();\n * const num2 = await channel.pop();\n * const num3 = await channel.pop();\n *\n * console.log(num1);\n * console.log(num2);\n * console.log(num3);\n * // output:\n * // 123\n * // 456\n * // 789\n * ```\n *\n * @example\n * ```ts\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of Number.sequence(1, 5)) {\n *         await channel.push(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","import chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.push(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents concurrency\n * conflicts, it returns a queue instance that we can push data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once reached, the push\n * operation will block until there is new space available. Bu default, this option is not set and\n * use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","var _a;\nimport { sequence } from \"./number/index.ts\";\nimport chan from \"./chan.ts\";\nconst isNode = typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\n/**\n * The maximum number of workers allowed to exist at the same time.\n *\n * The primary purpose of the workers is not mean to run tasks in parallel, but run them in separate\n * from the main thread, so that aborting tasks can be achieved by terminating the worker thread and\n * it will not affect the main thread.\n *\n * That said, the worker thread can still be used to achieve parallelism, but it should be noticed\n * that only the numbers of tasks that equals to the CPU core numbers will be run at the same time.\n */\nconst maxWorkerNum = 16;\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\n// The worker consumer queue is nothing but a callback list, once a worker is available, the runner\n// pop a consumer and run the callback, which will retry gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs a `script` in a worker thread or child process that can be aborted during runtime.\n *\n * In Node.js and Bun, the `script` can be either a CommonJS module or an ES module, and is relative\n * to the current working directory if not absolute.\n *\n * In browser and Deno, the `script` can only be an ES module, and is relative to the current URL\n * (or working directory for Deno) if not absolute.\n *\n * @example\n * ```ts\n * const job1 = await run(\"./job-example.mjs\", [\"World\"]);\n * console.log(await job1.result()); // Hello, World\n * ```\n *\n * @example\n * ```ts\n * const job2 = await run<string, [string[]]>(\"./job-example.mjs\", [[\"foo\", \"bar\"]], {\n *     fn: \"sequence\",\n * });\n * for await (const word of job2.iterate()) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * const job3 = await run<string, [string]>(\"./job-example.mjs\", [\"foobar\"], {\n *    fn: \"takeTooLong\",\n * });\n * await job3.abort();\n * const [err, res] = await _try(job3.result());\n * console.assert(err === null);\n * console.assert(res === undefined);\n * ```\n */\nexport default async function run(script, args = undefined, options = undefined) {\n    var _a, _b;\n    const msg = {\n        type: \"ffi\",\n        script,\n        baseUrl: \"\",\n        fn: (options === null || options === void 0 ? void 0 : options.fn) || \"default\",\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    if (typeof Deno === \"object\") {\n        msg.baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode) {\n        msg.baseUrl = \"file://\" + process.cwd() + \"/\";\n    }\n    else if (typeof location === \"object\") {\n        msg.baseUrl = location.href;\n    }\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let poolRecord;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(() => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        if (resolver) {\n            resolver.reject(err);\n        }\n        else {\n            error = err;\n        }\n        terminate();\n    }, options.timeout) : null;\n    const handleMessage = (msg) => {\n        var _a;\n        if (msg && typeof msg === \"object\" && typeof msg.type === \"string\") {\n            if (msg.type === \"error\") {\n                return handleError(msg.error);\n            }\n            else if (msg.type === \"return\") {\n                if (options === null || options === void 0 ? void 0 : options.keepAlive) {\n                    // Release before resolve.\n                    release === null || release === void 0 ? void 0 : release();\n                    if (workerConsumerQueue.length) {\n                        // Queued consumer now has chance to gain the worker.\n                        (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n                    }\n                }\n                else {\n                    terminate();\n                }\n                if (resolver) {\n                    resolver.resolve(msg.value);\n                }\n                else {\n                    result = { value: msg.value };\n                }\n            }\n            else if (msg.type === \"yield\") {\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({ type: \"return\", value: msg.value });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.push(msg.value);\n                }\n            }\n        }\n    };\n    const handleError = (err) => {\n        if (resolver) {\n            resolver.reject(err);\n        }\n        else if (channel) {\n            channel.close(err);\n        }\n        else {\n            error = err;\n        }\n    };\n    const handleExit = () => {\n        var _a;\n        if (poolRecord) {\n            // Clean the pool before resolve.\n            workerPool = workerPool.filter(record => record !== poolRecord);\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        if (resolver) {\n            resolver.resolve(void 0);\n        }\n        else if (channel) {\n            channel.close();\n        }\n        else if (!error && !result) {\n            result = { value: void 0 };\n        }\n    };\n    if (isNode) {\n        let entry = options === null || options === void 0 ? void 0 : options.workerEntry;\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const dirname = path.dirname(fileURLToPath(import.meta.url));\n            if ([\"cjs\", \"esm\"].includes(path.basename(dirname))) { // compiled\n                entry = path.join(path.dirname(dirname), \"bundle\", \"worker.mjs\");\n            }\n            else {\n                entry = path.join(dirname, \"worker.mjs\");\n            }\n        }\n        if ((options === null || options === void 0 ? void 0 : options.adapter) === \"child_process\") {\n            let worker;\n            let ok = true;\n            poolRecord = workerPool.find(item => {\n                return item.adapter === \"child_process\" && !item.busy;\n            });\n            if (poolRecord) {\n                worker = poolRecord.worker;\n                workerId = poolRecord.workerId;\n                poolRecord.busy = true;\n            }\n            else if (workerPool.length < maxWorkerNum) {\n                const { fork } = await import(\"child_process\");\n                const isPrior14 = parseInt(process.version.slice(1)) < 14;\n                worker = fork(entry, {\n                    stdio: \"inherit\",\n                    serialization: isPrior14 ? \"advanced\" : \"json\",\n                });\n                workerId = worker.pid;\n                ok = await new Promise((resolve) => {\n                    worker.once(\"exit\", () => {\n                        if (error) {\n                            // The child process took too long to start and cause timeout error.\n                            resolve(false);\n                        }\n                    });\n                    worker.once(\"message\", () => {\n                        worker.removeAllListeners(\"exit\");\n                        resolve(true);\n                    });\n                });\n                // Fill the worker pool regardless the current call should keep-alive or not,\n                // this will make sure that the total number of workers will not exceed the\n                // maxWorkerNum. If the the call doesn't keep-alive the worker, it will be\n                // cleaned after the call.\n                ok && workerPool.push(poolRecord = {\n                    workerId,\n                    worker,\n                    adapter: \"child_process\",\n                    busy: true,\n                });\n            }\n            else {\n                // Put the current call in the consumer queue if there are no workers available,\n                // once an existing call finishes, the queue will pop the its head consumer and\n                // retry.\n                return new Promise((resolve) => {\n                    workerConsumerQueue.push(resolve);\n                }).then(() => run(script, args, options));\n            }\n            release = () => {\n                // Remove the event listener so that later calls will not mess up.\n                worker.off(\"message\", handleMessage);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (ok) {\n                worker.send(msg);\n                worker.on(\"message\", handleMessage);\n                worker.once(\"error\", handleError);\n                worker.once(\"exit\", handleExit);\n            }\n        }\n        else {\n            let worker;\n            let ok = true;\n            poolRecord = workerPool.find(item => {\n                return item.adapter === \"worker_threads\" && !item.busy;\n            });\n            if (poolRecord) {\n                worker = poolRecord.worker;\n                workerId = poolRecord.workerId;\n                poolRecord.busy = true;\n            }\n            else if (workerPool.length < maxWorkerNum) {\n                const { Worker } = await import(\"worker_threads\");\n                worker = new Worker(entry);\n                // `threadId` may not exist in Bun.\n                workerId = (_a = worker.threadId) !== null && _a !== void 0 ? _a : workerIdCounter.next().value;\n                ok = await new Promise((resolve) => {\n                    worker.once(\"exit\", () => {\n                        if (error) {\n                            // The child process took too long to start and cause timeout error.\n                            resolve(false);\n                        }\n                    });\n                    worker.once(\"online\", () => {\n                        worker.removeAllListeners(\"exit\");\n                        resolve(true);\n                    });\n                });\n                ok && workerPool.push(poolRecord = {\n                    workerId,\n                    worker,\n                    adapter: \"worker_threads\",\n                    busy: true,\n                });\n            }\n            else {\n                return new Promise((resolve) => {\n                    workerConsumerQueue.push(resolve);\n                }).then(() => run(script, args, options));\n            }\n            release = () => {\n                worker.off(\"message\", handleMessage);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (ok) {\n                worker.postMessage(msg);\n                worker.on(\"message\", handleMessage);\n                worker.once(\"error\", handleError);\n                worker.once(\"messageerror\", handleError);\n                worker.once(\"exit\", handleExit);\n            }\n        }\n    }\n    else {\n        let worker;\n        poolRecord = workerPool.find(item => {\n            return item.adapter === \"worker_threads\" && !item.busy;\n        });\n        if (poolRecord) {\n            worker = poolRecord.worker;\n            workerId = poolRecord.workerId;\n            poolRecord.busy = true;\n        }\n        else if (workerPool.length < maxWorkerNum) {\n            let url;\n            if (typeof Deno === \"object\") {\n                // Deno can load the module regardless of MINE type.\n                url = [\n                    ...(import.meta.url.split(\"/\").slice(0, -1)),\n                    \"worker-web.mjs\"\n                ].join(\"/\");\n            }\n            else {\n                const _url = (options === null || options === void 0 ? void 0 : options.workerEntry)\n                    || \"https://raw.githubusercontent.com/ayonli/jsext/main/bundle/worker-web.mjs\";\n                const res = await fetch(_url);\n                let blob;\n                if ((_b = res.headers.get(\"content-type\")) === null || _b === void 0 ? void 0 : _b.startsWith(\"application/javascript\")) {\n                    blob = await res.blob();\n                }\n                else {\n                    const buf = await res.arrayBuffer();\n                    blob = new Blob([new Uint8Array(buf)], {\n                        type: \"application/javascript\",\n                    });\n                }\n                url = URL.createObjectURL(blob);\n            }\n            worker = new Worker(url, { type: \"module\" });\n            workerId = workerIdCounter.next().value;\n            workerPool.push(poolRecord = {\n                workerId,\n                worker,\n                adapter: \"worker_threads\",\n                busy: true,\n            });\n        }\n        else {\n            return new Promise((resolve) => {\n                workerConsumerQueue.push(resolve);\n            }).then(() => run(script, args, options));\n        }\n        release = () => {\n            worker.onmessage = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = async () => {\n            await Promise.resolve(worker.terminate());\n            handleExit();\n        };\n        worker.postMessage(msg);\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => handleMessage(ev.error || new Error(ev.message));\n        worker.onmessageerror = () => {\n            handleError(new Error(\"unable to deserialize the message\"));\n        };\n    }\n    return {\n        workerId,\n        async abort() {\n            timeout && clearTimeout(timeout);\n            await terminate();\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n//# sourceMappingURL=run.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport mixins, { isSubclassOf } from \"./mixins.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport run from \"./run.ts\";\nimport example from \"./example.ts\";\nexport { Channel, Queue };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    mixins,\n    isSubclassOf,\n    chan,\n    queue,\n    read,\n    readAll,\n    run,\n    example,\n};\nexport { jsext as default, _try, func, wrap, throttle, mixins, isSubclassOf, chan, queue, read, readAll, run, example, };\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which can be used\n * to carry deferred jobs that will be run after the main function is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are called in the\n * LIFO order. Callbacks can be async functions if the main function is an async function or\n * an async generator function, and all the running procedures will be awaited.\n *\n * @example\n * ```ts\n * const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","/**\n * Wraps a function inside another function and returns a new function that copies the original\n * function's name and other properties.\n *\n * @example\n * ```ts\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","import chan from \"./chan.ts\";\nimport { isFunction } from \"./try.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.push.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to make sure when\n            // it calls the close() function, the iterator is automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Inspired by Golang's **Example as Test** design, creates a function that carries example code\n * with `// output:` comments, when the returned function is called, it will automatically check if\n * the actual output matches the one declared in the comment.\n *\n * The example function receives a customized `console` object which will be used to log outputs\n * instead of using the built-in `console`.\n *\n * NOTE: this function is used to simplify the process of writing tests, it does not work in Bun and\n * browsers currently, because Bun hasn't implement the `Console` constructor and removes comments\n * during runtime, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => line.trim().toLowerCase() === \"// output:\");\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => line.trim().toLowerCase() === \"// output:\") !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk)).join(\"\\n\").replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => process.stdout.write(chunk, () => resolve()));\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","encoder","TextEncoder","sequence","min","max","step","loop","id","Uint8Array","_equals","_split","hasOwn","obj","key","Object","prototype","hasOwnProperty","call","pick","keys","reduce","result","undefined","omit","keptKeys","Reflect","ownKeys","filter","includes","Error","forEach","isValid","value","is","NaN","Date","toString","sum","values","String","compare","str1","str2","random","chars","str","floor","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","words","matches","_words","_chunk","truncate","_truncate","byteLength","encode","Number","isFloat","isNaN","isFinite","isNumeric","type","BigInt","_a","isBetween","first","last","ele","another","uniq","Set","shuffle","j","_shuffle","toShuffled","toReversed","reverse","toSorted","fn","sort","orderBy","order","items","a","b","isArray","_b","_orderBy","groupBy","Map","groups","item","list","get","set","_groupBy","ele1","ele2","hasOwnMethod","method","proto","getPrototypeOf","getOwnPropertyDescriptor","patch","target","sources","source","as","TypeError","_type","primitiveMap","string","number","bigint","boolean","Boolean","symbol","Symbol","valueOf","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","test","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","has","deleteValue","delete","clear","internal","CiMap","entries","callbackfn","thisArg","iterator","globalThis","Exception","message","options","code","cause","defineProperty","configurable","enumerable","writable","toObject","err","fromObject","name","create","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","isFunction","val","toJSON","JSON","parseAs","text","data","parse","fromJSON","date","_c","Buffer","_d","_e","getOwnPropertyNames","map","every","assign","_f","throttleCaches","mergeIfNotExists","mergeSuper","props","prop","setProp","mergeHierarchy","mixin","_super","desc","Channel","capacity","buffer","producers","consumers","state","RangeError","consume","shift","_data","pop","produce","error","close","channel","bufSize","done","chan","Queue","handler","bufferSize","errorHandler","catch","onError","isNode","process","versions","node","workerIdCounter","MAX_SAFE_INTEGER","workerPool","workerConsumerQueue","AsyncFunction","AsyncGeneratorFunction","jsext","try","_try","args","apply","returns","input","then","func","callbacks","defer","cb","gen","wrap","wrapper","wrapped","bind","throttle","for","duration","noWait","handleCall","cache","pending","now","expires","mixins","base","isSubclassOf","ctor1","ctor2","queue","read","eventMap","Infinity","handleMessage","handleClose","handleBrowserErrorEvent","ev","ErrorEvent","msgDesc","errDesc","closeDesc","cleanup","event","es","eventName","msgListener","addEventListener","removeEventListener","_close","ws","onmessage","onerror","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","on","once","off","readAll","run","script","msg","baseUrl","Deno","cwd","location","href","resolver","workerId","poolRecord","release","terminate","handleError","keepAlive","handleExit","record","entry","workerEntry","path","import","fileURLToPath","dirname","document","require","pathToFileURL","__filename","_documentCurrentScript","src","URL","baseURI","basename","join","adapter","worker","ok","find","busy","fork","isPrior14","parseInt","version","stdio","serialization","pid","removeAllListeners","kill","send","Worker","threadId","postMessage","url","_url","res","fetch","blob","headers","startsWith","buf","arrayBuffer","Blob","createObjectURL","onmessageerror","abort","clearTimeout","iterate","example","captureStackTrace","lines","findIndex","line","trim","expected","trimStart","_expected","assert","Writable","Console","logs","decoder","TextDecoder","stdout","write","callback","_console","end","actual","decode","suppress","stack","handleResult"],"mappings":"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"}