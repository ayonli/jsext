{"version":3,"file":"index.js","sources":["../array/index.ts","../string/index.ts","../number/index.ts","../uint8array/index.ts","../object/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../object/augment.ts","../math/augment.ts","../math/index.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../external/check-iterable/index.mjs","../error/augment.ts","../throttle.ts","../mixins.ts","../read.ts","../run.ts","../index.ts","../try.ts","../func.ts","../wrap.ts","../isSubclassOf.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array. */\nexport function count(arr, ele) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === ele) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n/**\n * Orders the items of the array according to the specified comparable `key` (whose value\n * must either be a numeric or string).\n */\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map) {\n        const groups = new Map();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\n//# sourceMappingURL=index.js.map","import { chunk as _chunk } from \"../array/index.ts\";\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a == b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/** Returns a random string, the charset matches `/[0-9a-zA-Z]/` */\nexport function random(length) {\n    const chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * chars.length);\n        str += chars[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches] : [];\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst encoder = new TextEncoder();\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return encoder.encode(str).byteLength;\n}\n;\n//# sourceMappingURL=index.js.map","/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n */\nexport function isNumeric(value) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"string\") {\n        if (!Number.isNaN(value)) {\n            return true;\n        }\n        else {\n            try {\n                BigInt(value);\n                return true;\n            }\n            catch (_a) {\n                return false;\n            }\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max`. */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if (id >= max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n        else {\n            id += step;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","import { equals as _equals, split as _split, chunk as _chunk } from \"../array/index.ts\";\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compare this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","export function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n;\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n;\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns `true` if the given value is valid. Thee following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n//# sourceMappingURL=index.js.map","import { compare, random, byteLength as _byteLength, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, words as _words } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, orderBy as _orderBy, shuffle as _shuffle, split as _split, uniq as _uniq } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return this[0];\n};\nArray.prototype.last = function last() {\n    return this[this.length - 1];\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function orderBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk } from \"./index.ts\";\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, isValid } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.isValid = isValid;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return Math.sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test is passed. */\nexport async function until(test) {\n    if (typeof globalThis.setImmediate === \"undefined\") {\n        // @ts-ignore\n        globalThis.setImmediate = (cb) => setTimeout(cb, 0);\n    }\n    do {\n        await new Promise(globalThis.setImmediate);\n    } while ((await test()) == false);\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","const internal = Symbol(\"internal\");\n/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    get size() {\n        return this[internal].size;\n    }\n    constructor(iterable = null) {\n        this[internal] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        this[internal].set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = this[internal].get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return this[internal].has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return this[internal].delete(id);\n    }\n    clear() {\n        this[internal].clear();\n    }\n    *entries() {\n        for (const { key, value } of this[internal].values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of this[internal].values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of this[internal].values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        this[internal].forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else {\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","import { omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    return omit(err, []);\n}\nexport function fromObject(obj) {\n    var _a;\n    // @ts-ignore\n    let ctor = globalThis[obj.name];\n    if (!ctor) {\n        if (obj[\"name\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    const err = Object.create(ctor.prototype, {\n        message: {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: (_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\",\n        },\n    });\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\"name\", \"message\", \"stack\", \"cause\"].includes(key));\n    otherKeys.forEach(key => {\n        // @ts-ignore\n        err[key] = obj[key];\n    });\n    return err;\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @returns {obj is { next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { Exception, fromObject, toObject } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","const throttleCaches = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0)) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            cache.result = { value: returns };\n            cache.expires = Date.now() + duration;\n            return returns;\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (!key) {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = throttleCaches.get(key);\n        if (!cache) {\n            cache = { for: key };\n            throttleCaches.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { hasOwn } from \"./object/index.ts\";\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport default function mixins(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n//# sourceMappingURL=mixins.js.map","export default function read(source, eventMap = undefined) {\n    var _a;\n    if (typeof source[Symbol.asyncIterator] === \"function\") {\n        return source;\n    }\n    const iterable = {\n        ended: false,\n        error: null,\n        queue: [],\n        consumers: [],\n        next() {\n            return new Promise((resolve, reject) => {\n                if (this.error && !this.ended) {\n                    // If there is error occurred during the last transmission and the iterator\n                    // hasn't been closed, reject that error and stop the iterator immediately.\n                    reject(this.error);\n                    this.ended = true;\n                }\n                else if (this.ended && !this.queue.length) {\n                    // If the iterator has is closed, resolve the pending consumer with void\n                    // value.\n                    resolve({ value: void 0, done: true });\n                }\n                else if (this.queue.length > 0) {\n                    // If there are data in the queue, resolve the the first piece immediately.\n                    resolve({ value: this.queue.shift(), done: false });\n                }\n                else {\n                    // If there are no queued data, push the consumer to a waiting queue.\n                    this.consumers.push({ resolve, reject });\n                }\n            });\n        }\n    };\n    const handleMessage = (data) => {\n        var _a;\n        if (iterable.consumers.length > 0) {\n            (_a = iterable.consumers.shift()) === null || _a === void 0 ? void 0 : _a.resolve({ value: data, done: false });\n        }\n        else {\n            iterable.queue.push(data);\n        }\n    };\n    const handleClose = () => {\n        iterable.ended = true;\n        let consumer;\n        while (consumer = iterable.consumers.shift()) {\n            consumer.resolve({ value: undefined, done: true });\n        }\n    };\n    const handleError = (err) => {\n        iterable.error = err;\n        if (iterable.consumers.length > 0) {\n            iterable.consumers.forEach(item => {\n                item.reject(err);\n            });\n            iterable.consumers = [];\n        }\n    };\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleError(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && typeof source.close === \"function\") { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            typeof source[\"addEventListener\"] === \"function\") { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && typeof source.close === \"function\") { // EventSource\n            // EventSource by default does not trigger close event, we need to make sure when\n            // it calls the close() function, the iterator is automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (typeof source.send === \"function\" && typeof source.close === \"function\") {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (typeof source[\"addEventListener\"] === \"function\") { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (typeof source[\"on\"] === \"function\") { // EventEmitter\n        const target = source;\n        const dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const endEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleError);\n        target.once(endEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(dataEvent, handleError);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]() {\n            return iterable;\n        }\n    };\n}\n//# sourceMappingURL=read.js.map","var _a;\nimport { sequence } from \"./number/index.ts\";\nimport read from \"./read.ts\";\nconst isNode = typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\n/**\n * The maximum number of workers allowed to exist at the same time.\n *\n * The primary purpose of the workers is not mean to run tasks in parallel, but run them in separate\n * from the main thread, so that aborting tasks can be achieved by terminating the worker thread and\n * it will not affect the main thread.\n *\n * That said, the worker thread can still be used to achieve parallelism, but it should be noticed\n * that only the numbers of tasks that equals to the CPU core numbers will be run at the same time.\n */\nconst maxWorkerNum = 16;\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\n// The worker consumer queue is nothing but a callback list, once a worker is available, the runner\n// pop a consumer and run the callback, which will retry gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs a task in the `script` in a worker thread that can be aborted during runtime.\n *\n * In Node.js, the `script` can be either a CommonJS module or an ES module, and is relative to\n * the current working directory if not absolute.\n *\n * In browser or Deno, the `script` can only be an ES module, and is relative to the current URL\n * (or working directory for Deno) if not absolute.\n */\nexport default async function run(script, args = undefined, options = undefined) {\n    var _a, _b;\n    const msg = {\n        type: \"ffi\",\n        script,\n        baseUrl: \"\",\n        fn: (options === null || options === void 0 ? void 0 : options.fn) || \"default\",\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    if (typeof Deno === \"object\") {\n        msg.baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode) {\n        msg.baseUrl = \"file://\" + process.cwd() + \"/\";\n    }\n    else if (typeof location === \"object\") {\n        msg.baseUrl = location.href;\n    }\n    // `buffer` is used to store data pieces yielded by generator functions before they are\n    // consumed. `error` and `result` serves similar purposes for function results.\n    const buffer = [];\n    let error = null;\n    let result;\n    let resolver;\n    let iterator;\n    let workerId;\n    let poolRecord;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(() => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        if (resolver) {\n            resolver.reject(err);\n        }\n        else {\n            error = err;\n        }\n        terminate();\n    }, options.timeout) : null;\n    const handleMessage = (msg) => {\n        var _a;\n        if (msg && typeof msg === \"object\" && typeof msg.type === \"string\") {\n            if (msg.type === \"error\") {\n                return handleError(msg.error);\n            }\n            else if (msg.type === \"return\") {\n                if (options === null || options === void 0 ? void 0 : options.keepAlive) {\n                    // Release before resolve.\n                    release === null || release === void 0 ? void 0 : release();\n                    if (workerConsumerQueue.length) {\n                        // Queued consumer now has chance to gain the worker.\n                        (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n                    }\n                }\n                else {\n                    terminate();\n                }\n                if (resolver) {\n                    resolver.resolve(msg.value);\n                }\n                else {\n                    result = { value: msg.value };\n                }\n            }\n            else if (msg.type === \"yield\") {\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({ type: \"return\", value: msg.value });\n                }\n                else {\n                    if (iterator) {\n                        if (typeof iterator.dispatchEvent === \"function\") {\n                            iterator.dispatchEvent(new MessageEvent(\"message\", { data: msg.value }));\n                        }\n                        else {\n                            iterator.emit(\"data\", msg.value);\n                        }\n                    }\n                    else {\n                        buffer.push(msg.value);\n                    }\n                }\n            }\n        }\n    };\n    const handleError = (err) => {\n        if (resolver) {\n            resolver.reject(err);\n        }\n        else if (iterator) {\n            if (typeof iterator.dispatchEvent === \"function\") {\n                iterator.dispatchEvent(new MessageEvent(\"error\", { data: err }));\n            }\n            else {\n                iterator.emit(\"error\", err);\n            }\n        }\n        else {\n            error = err;\n        }\n    };\n    const handleExit = () => {\n        var _a;\n        if (poolRecord) {\n            // Clean the pool before resolve.\n            workerPool = workerPool.filter(record => record !== poolRecord);\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        if (resolver) {\n            resolver.resolve(void 0);\n        }\n        else if (iterator) {\n            if (typeof iterator.dispatchEvent === \"function\") {\n                iterator.dispatchEvent(new MessageEvent(\"close\"));\n            }\n            else {\n                iterator.emit(\"close\");\n            }\n        }\n        else if (!error && !result) {\n            result = { value: void 0 };\n        }\n    };\n    if (isNode) {\n        let entry = options === null || options === void 0 ? void 0 : options.workerEntry;\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const dirname = path.dirname(fileURLToPath(import.meta.url));\n            if ([\"cjs\", \"esm\"].includes(path.basename(dirname))) { // compiled\n                entry = path.join(path.dirname(dirname), \"bundle\", \"worker.mjs\");\n            }\n            else {\n                entry = path.join(dirname, \"worker.mjs\");\n            }\n        }\n        if ((options === null || options === void 0 ? void 0 : options.adapter) === \"child_process\") {\n            let worker;\n            let ok = true;\n            poolRecord = workerPool.find(item => {\n                return item.adapter === \"child_process\" && !item.busy;\n            });\n            if (poolRecord) {\n                worker = poolRecord.worker;\n                workerId = poolRecord.workerId;\n                poolRecord.busy = true;\n            }\n            else if (workerPool.length < maxWorkerNum) {\n                const { fork } = await import(\"child_process\");\n                const isPrior14 = parseInt(process.version.slice(1)) < 14;\n                worker = fork(entry, {\n                    stdio: \"inherit\",\n                    serialization: isPrior14 ? \"advanced\" : \"json\",\n                });\n                workerId = worker.pid;\n                ok = await new Promise((resolve) => {\n                    worker.once(\"exit\", () => {\n                        if (error) {\n                            // The child process took too long to start and cause timeout error.\n                            resolve(false);\n                        }\n                    });\n                    worker.once(\"message\", () => {\n                        worker.removeAllListeners(\"exit\");\n                        resolve(true);\n                    });\n                });\n                // Fill the worker pool regardless the current call should keep-alive or not,\n                // this will make sure that the total number of workers will not exceed the\n                // maxWorkerNum. If the the call doesn't keep-alive the worker, it will be\n                // cleaned after the call.\n                ok && workerPool.push(poolRecord = {\n                    workerId,\n                    worker,\n                    adapter: \"child_process\",\n                    busy: true,\n                });\n            }\n            else {\n                // Put the current call in the consumer queue if there are no workers available,\n                // once an existing call finishes, the queue will pop the its head consumer and\n                // retry.\n                return new Promise((resolve) => {\n                    workerConsumerQueue.push(resolve);\n                }).then(() => run(script, args, options));\n            }\n            release = () => {\n                // Remove the event listener so that later calls will not mess up.\n                worker.off(\"message\", handleMessage);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (ok) {\n                worker.send(msg);\n                worker.on(\"message\", handleMessage);\n                worker.once(\"error\", handleError);\n                worker.once(\"exit\", handleExit);\n            }\n        }\n        else {\n            let worker;\n            let ok = true;\n            poolRecord = workerPool.find(item => {\n                return item.adapter === \"worker_threads\" && !item.busy;\n            });\n            if (poolRecord) {\n                worker = poolRecord.worker;\n                workerId = poolRecord.workerId;\n                poolRecord.busy = true;\n            }\n            else if (workerPool.length < maxWorkerNum) {\n                const { Worker } = await import(\"worker_threads\");\n                worker = new Worker(entry);\n                // `threadId` may not exist in Bun.\n                workerId = (_a = worker.threadId) !== null && _a !== void 0 ? _a : workerIdCounter.next().value;\n                ok = await new Promise((resolve) => {\n                    worker.once(\"exit\", () => {\n                        if (error) {\n                            // The child process took too long to start and cause timeout error.\n                            resolve(false);\n                        }\n                    });\n                    worker.once(\"online\", () => {\n                        worker.removeAllListeners(\"exit\");\n                        resolve(true);\n                    });\n                });\n                ok && workerPool.push(poolRecord = {\n                    workerId,\n                    worker,\n                    adapter: \"worker_threads\",\n                    busy: true,\n                });\n            }\n            else {\n                return new Promise((resolve) => {\n                    workerConsumerQueue.push(resolve);\n                }).then(() => run(script, args, options));\n            }\n            release = () => {\n                worker.off(\"message\", handleMessage);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (ok) {\n                worker.postMessage(msg);\n                worker.on(\"message\", handleMessage);\n                worker.once(\"error\", handleError);\n                worker.once(\"messageerror\", handleError);\n                worker.once(\"exit\", handleExit);\n            }\n        }\n    }\n    else {\n        let worker;\n        poolRecord = workerPool.find(item => {\n            return item.adapter === \"worker_threads\" && !item.busy;\n        });\n        if (poolRecord) {\n            worker = poolRecord.worker;\n            workerId = poolRecord.workerId;\n            poolRecord.busy = true;\n        }\n        else if (workerPool.length < maxWorkerNum) {\n            let url;\n            if (typeof Deno === \"object\") {\n                // Deno can load the module regardless of MINE type.\n                url = [\n                    ...(import.meta.url.split(\"/\").slice(0, -1)),\n                    \"worker-web.mjs\"\n                ].join(\"/\");\n            }\n            else {\n                const _url = (options === null || options === void 0 ? void 0 : options.workerEntry)\n                    || \"https://raw.githubusercontent.com/ayonli/jsext/main/bundle/worker-web.mjs\";\n                const res = await fetch(_url);\n                let blob;\n                if ((_b = res.headers.get(\"content-type\")) === null || _b === void 0 ? void 0 : _b.startsWith(\"application/javascript\")) {\n                    blob = await res.blob();\n                }\n                else {\n                    const buf = await res.arrayBuffer();\n                    blob = new Blob([new Uint8Array(buf)], {\n                        type: \"application/javascript\",\n                    });\n                }\n                url = URL.createObjectURL(blob);\n            }\n            worker = new Worker(url, { type: \"module\" });\n            workerId = workerIdCounter.next().value;\n            workerPool.push(poolRecord = {\n                workerId,\n                worker,\n                adapter: \"worker_threads\",\n                busy: true,\n            });\n        }\n        else {\n            return new Promise((resolve) => {\n                workerConsumerQueue.push(resolve);\n            }).then(() => run(script, args, options));\n        }\n        release = () => {\n            worker.onmessage = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = async () => {\n            await Promise.resolve(worker.terminate());\n            handleExit();\n        };\n        worker.postMessage(msg);\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => handleMessage(ev.error || new Error(ev.message));\n        worker.onmessageerror = () => {\n            handleError(new Error(\"unable to deserialize the message\"));\n        };\n    }\n    return {\n        workerId,\n        async abort() {\n            timeout && clearTimeout(timeout);\n            await terminate();\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        async *iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            if (typeof MessageEvent === \"function\" && typeof EventTarget === \"function\") {\n                iterator = new EventTarget();\n                if (buffer.length) {\n                    (async () => {\n                        await Promise.resolve(null);\n                        let msg;\n                        while (msg = buffer.shift()) {\n                            iterator.dispatchEvent(new MessageEvent(\"message\", { data: msg }));\n                        }\n                    })().catch(console.error);\n                }\n                for await (const msg of read(iterator)) {\n                    yield msg;\n                }\n            }\n            else {\n                const { EventEmitter } = await import(\"events\");\n                iterator = new EventEmitter();\n                if (buffer.length) {\n                    (async () => {\n                        await Promise.resolve(null);\n                        let msg;\n                        while (msg = buffer.shift()) {\n                            iterator.emit(\"data\", msg);\n                        }\n                    })().catch(console.error);\n                }\n                for await (const msg of read(iterator)) {\n                    yield msg;\n                }\n            }\n        },\n    };\n}\n//# sourceMappingURL=run.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport mixins from \"./mixins.ts\";\nimport isSubclassOf from \"./isSubclassOf.ts\";\nimport read from \"./read.ts\";\nimport run from \"./run.ts\";\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\nconst jsext = {\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    mixins,\n    isSubclassOf,\n    read,\n    run,\n};\nexport default jsext;\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nexport default function _try(fn, ...args) {\n    if (typeof fn === \"function\") {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (isAsyncGenerator(returns)) {\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n        returns = returns.then((value) => [null, value]);\n        return Promise.resolve(returns).catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\n//# sourceMappingURL=try.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` function which can be used\n * to carry deferred jobs that will be run after the main function is complete.\n *\n * Multiple calls of the `defer` function is supported, and the callbacks are called in the\n * LIFO order. Callbacks can be async functions if the main function is an async function or\n * an async generator function, and all the running procedures will be awaited.\n *\n * @example\n *  const getVersion = func(async (defer) => {\n *      const file = await fs.open(\"./package.json\", \"r\");\n *      defer(() => file.close());\n *\n *      const content = await file.readFile(\"utf8\");\n *      const pkg = JSON.parse(content);\n *\n *      return pkg.version as string;\n *  });\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","/**\n * Wraps a function inside another function and returns a new function that copies the original\n * function's name and other properties.\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","/** Checks if a class is a subclass of another class. */\nexport default function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n//# sourceMappingURL=isSubclassOf.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","encoder","TextEncoder","sequence","min","max","step","loop","id","Uint8Array","_equals","_split","hasOwn","obj","key","Object","prototype","hasOwnProperty","call","pick","keys","reduce","result","undefined","omit","keptKeys","Reflect","ownKeys","filter","includes","Error","forEach","String","compare","str1","str2","random","chars","str","floor","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","words","matches","_words","_chunk","truncate","_truncate","byteLength","encode","Number","isFloat","value","isNaN","isFinite","isNumeric","type","BigInt","_a","isBetween","first","last","ele","another","uniq","Set","shuffle","j","_shuffle","toShuffled","toReversed","reverse","toSorted","fn","sort","orderBy","order","items","a","b","isArray","_b","_orderBy","groupBy","Map","groups","item","list","get","set","_groupBy","ele1","ele2","hasOwnMethod","method","proto","getPrototypeOf","getOwnPropertyDescriptor","patch","target","sources","source","as","TypeError","_type","primitiveMap","string","number","bigint","boolean","Boolean","symbol","Symbol","valueOf","isValid","is","NaN","Date","toString","sum","values","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","test","globalThis","setImmediate","cb","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","has","deleteValue","delete","clear","internal","CiMap","entries","callbackfn","thisArg","iterator","Exception","message","options","code","cause","defineProperty","configurable","enumerable","writable","toObject","err","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","fromObject","name","create","toJSON","throttleCaches","mergeIfNotExists","mergeSuper","props","prop","setProp","mergeHierarchy","mixin","_super","desc","read","eventMap","ended","error","queue","consumers","done","shift","handleMessage","data","handleClose","consumer","handleError","handleBrowserErrorEvent","ev","ErrorEvent","msgDesc","close","errDesc","closeDesc","cleanup","event","es","eventName","msgListener","addEventListener","removeEventListener","_close","send","ws","onmessage","onerror","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","endEvent","on","once","off","isNode","process","versions","node","workerIdCounter","MAX_SAFE_INTEGER","workerPool","workerConsumerQueue","AsyncFunction","AsyncGeneratorFunction","jsext","try","_try","args","apply","returns","input","then","catch","func","callbacks","defer","gen","wrap","wrapper","wrapped","bind","throttle","handler","for","duration","handleCall","cache","now","expires","mixins","base","isSubclassOf","ctor1","ctor2","run","script","msg","baseUrl","Deno","cwd","location","href","buffer","resolver","workerId","poolRecord","release","terminate","keepAlive","dispatchEvent","emit","handleExit","record","entry","workerEntry","path","import","fileURLToPath","dirname","document","require","pathToFileURL","__filename","_documentCurrentScript","src","URL","baseURI","basename","join","adapter","worker","ok","find","busy","fork","isPrior14","parseInt","version","stdio","serialization","pid","removeAllListeners","kill","Worker","threadId","postMessage","url","_url","res","fetch","blob","headers","startsWith","buf","arrayBuffer","Blob","createObjectURL","onmessageerror","abort","clearTimeout","iterate","EventTarget","console","EventEmitter"],"mappings":"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"}