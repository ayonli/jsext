{"version":3,"file":"index.js","sources":["../array/index.ts","../string/index.ts","../number/index.ts","../math/index.ts","../uint8array/index.ts","../object/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../error/augment.ts","../json/index.ts","../external/check-iterable/index.mjs","../json/augment.ts","../external/thenable-generator/index.ts","../try.ts","../wrap.ts","../throttle.ts","../mixins.ts","../chan.ts","../queue.ts","../util.ts","../parallel.ts","../run.ts","../deprecate.ts","../index.ts","../func.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array. */\nexport function count(arr, ele) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === ele) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n/**\n * Orders the items of the array according to the specified comparable `key` (whose value\n * must either be a numeric or string).\n */\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map) {\n        const groups = new Map();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\n//# sourceMappingURL=index.js.map","import { chunk as _chunk } from \"../array/index.ts\";\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a == b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/** Returns a random string, the charset matches `/[0-9a-zA-Z]/`. */\nexport function random(length) {\n    const chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * chars.length);\n        str += chars[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches] : [];\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst _trim = String.prototype.trim;\nconst _trimEnd = String.prototype.trimEnd;\nconst _trimStart = String.prototype.trimStart;\n/** Removes leading and trailing spaces or custom characters of the string. */\nexport function trim(str, chars = \"\") {\n    if (!chars) {\n        return _trim.call(str);\n    }\n    else {\n        return trimEnd(trimStart(str, chars), chars);\n    }\n}\n/** Removes trailing spaces or custom characters of the string. */\nexport function trimEnd(str, chars = \"\") {\n    if (!chars) {\n        return _trimEnd.call(str);\n    }\n    else {\n        let i = str.length;\n        while (i-- && chars.indexOf(str[i]) !== -1) { }\n        return str.substring(0, i + 1);\n    }\n}\n/** Removes leading spaces or custom characters of the string. */\nexport function trimStart(str, chars = \"\") {\n    if (!chars) {\n        return _trimStart.call(str);\n    }\n    else {\n        let i = 0;\n        do { } while (chars.indexOf(str[i]) !== -1 && ++i);\n        return str.substring(i);\n    }\n}\nconst encoder = new TextEncoder();\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return encoder.encode(str).byteLength;\n}\n;\n//# sourceMappingURL=index.js.map","/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n */\nexport function isNumeric(value) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"string\") {\n        if (!Number.isNaN(value)) {\n            return true;\n        }\n        else {\n            try {\n                BigInt(value);\n                return true;\n            }\n            catch (_a) {\n                return false;\n            }\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import { equals as _equals, split as _split, chunk as _chunk } from \"../array/index.ts\";\nimport { sum } from \"../math/index.ts\";\n/** Copies bytes from `src` array to `dest` and returns the number of bytes copied. */\nexport function copy(src, dest) {\n    if (src.length > dest.length) {\n        src = src.subarray(0, dest.length);\n    }\n    dest.set(src);\n    return src.length;\n}\n/** Like `Buffer.concat` but for pure `Uint8Array`. */\nexport function concat(...arrays) {\n    const length = sum(...arrays.map(arr => arr.length));\n    const ctor = arrays[0].constructor;\n    const result = new ctor(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    ;\n    return result;\n}\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compares this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n;\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n;\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n/**\n * Returns `true` is the given value is a plain object, that is, an object created by\n * the `Object` constructor or one with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value) {\n    if (typeof value !== \"object\" || value === null)\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === null || proto.constructor === Object;\n}\n//# sourceMappingURL=index.js.map","import { compare, random, byteLength as _byteLength, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, words as _words, trim as _trim, trimEnd as _trimEnd, trimStart as _trimStart } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.trim = function trim(chars = \"\") {\n    return _trim(String(this), chars);\n};\nString.prototype.trimEnd = function trimEnd(chars = \"\") {\n    return _trimEnd(String(this), chars);\n};\nString.prototype.trimStart = function trimStart(chars = \"\") {\n    return _trimStart(String(this), chars);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, orderBy as _orderBy, shuffle as _shuffle, split as _split, uniq as _uniq } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return this[0];\n};\nArray.prototype.last = function last() {\n    return this[this.length - 1];\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function orderBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk, concat, copy } from \"./index.ts\";\nUint8Array.copy = copy;\nUint8Array.concat = concat;\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, isValid, isPlainObject } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.isValid = isValid;\nObject.isPlainObject = isPlainObject;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test passes. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","const internal = Symbol(\"internal\");\n/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    get size() {\n        return this[internal].size;\n    }\n    constructor(iterable = null) {\n        this[internal] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        this[internal].set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = this[internal].get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return this[internal].has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return this[internal].delete(id);\n    }\n    clear() {\n        this[internal].clear();\n    }\n    *entries() {\n        for (const { key, value } of this[internal].values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of this[internal].values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of this[internal].values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        this[internal].forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else {\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","import { omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    if (!(err instanceof Error) && err[\"name\"] && err[\"message\"]) { // Error-like\n        err = fromObject(err, Error);\n    }\n    return omit(err, [\"toString\", \"toJSON\"]);\n}\nexport function fromObject(obj, ctor = undefined) {\n    var _a, _b;\n    // @ts-ignore\n    if (!(obj === null || obj === void 0 ? void 0 : obj.name)) {\n        return null;\n    }\n    // @ts-ignore\n    ctor || (ctor = globalThis[obj.name]);\n    if (!ctor) {\n        if (obj[\"name\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    let err;\n    if (ctor.name === \"DOMException\") {\n        err = new ctor((_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\", obj[\"name\"]);\n    }\n    else {\n        err = Object.create(ctor.prototype, {\n            message: {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: (_b = obj[\"message\"]) !== null && _b !== void 0 ? _b : \"\",\n            },\n        });\n    }\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\"name\", \"message\", \"stack\", \"cause\"].includes(key));\n    otherKeys.forEach(key => {\n        var _a;\n        // @ts-ignore\n        (_a = err[key]) !== null && _a !== void 0 ? _a : (err[key] = obj[key]);\n    });\n    return err;\n}\n/** Creates an `ErrorEvent` instance based on the given error. */\nexport function toErrorEvent(err, type = \"error\") {\n    let filename = \"\";\n    let lineno = 0;\n    let colno = 0;\n    if (err.stack) {\n        const lines = err.stack.split(\"\\n\").map(line => line.trim());\n        let callSite = lines.find(line => line.startsWith(\"at \"));\n        if (callSite) {\n            callSite = callSite.slice(3);\n        }\n        else if (callSite = lines.find(line => line.includes(\"@\") && line.length > 1)) {\n            callSite = callSite.slice(callSite.indexOf(\"@\") + 1);\n        }\n        if (callSite) {\n            let start = callSite.lastIndexOf(\"(\");\n            let end = 0;\n            if (start !== -1) {\n                start += 1;\n                end = callSite.indexOf(\")\", start);\n                callSite = callSite.slice(start, end);\n            }\n            const matches = callSite.match(/:(\\d+):(\\d+)$/);\n            if (matches) {\n                filename = callSite.slice(0, matches.index);\n                lineno = parseInt(matches[1]);\n                colno = parseInt(matches[2]);\n            }\n        }\n    }\n    return new ErrorEvent(type, {\n        error: err,\n        message: err.message,\n        filename,\n        lineno,\n        colno,\n    });\n}\nconst isFirefoxOrSafari = typeof navigator === \"object\" && /Firefox|Safari/.test(navigator.userAgent);\n/** Creates an error instance based on the given `ErrorEvent` instance. */\nexport function fromErrorEvent(event) {\n    if (event.error instanceof Error) {\n        return event.error;\n    }\n    let err;\n    let shouldPatchStack = false;\n    if (event.error\n        && typeof event.error === \"object\"\n        && event.error[\"name\"]\n        && event.error[\"message\"]) { // Error-like\n        err = fromObject(event.error, Error);\n        shouldPatchStack = !err.stack;\n    }\n    else if (event.message) {\n        err = new Error(event.message);\n        shouldPatchStack = true;\n    }\n    else {\n        return null;\n    }\n    if (shouldPatchStack) {\n        let stack = \"\";\n        if (event.filename) {\n            if (isFirefoxOrSafari) {\n                stack = \"@\" + event.filename;\n            }\n            else {\n                stack = `Error: ${event.message}\\n    at ${event.filename}`;\n            }\n            if (event.lineno) {\n                stack += \":\" + event.lineno;\n            }\n            if (event.colno) {\n                stack += \":\" + event.colno;\n            }\n        }\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: stack,\n        });\n    }\n    return err;\n}\n//# sourceMappingURL=index.js.map","import { Exception, toErrorEvent, fromObject, toObject, fromErrorEvent } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.toErrorEvent = toErrorEvent;\nError.fromErrorEvent = fromErrorEvent;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","import { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nconst typeRegistry = new Map();\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    return as(data, type);\n}\nexport function as(data, type) {\n    if (data === null || data === undefined) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (data.type === \"Buffer\" && Array.isArray(data.data)) { // Node.js Buffer\n            if (typeof Buffer === \"function\" && type === Buffer) {\n                try {\n                    return Buffer.from(data.data);\n                }\n                catch (_d) {\n                    return null;\n                }\n            }\n            else if (typeof type.prototype[Symbol.iterator] === \"function\"\n                && typeof type[\"from\"] === \"function\") {\n                try {\n                    // Convert Node.js Buffer to TypedArray.\n                    return type.from(data.data);\n                }\n                catch (_e) {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        const keys = Object.getOwnPropertyNames(data);\n        const values = Object.values(data);\n        if (keys.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            values.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") {\n            // Assert the data is a TypedArray.\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            const err = fromObject(data);\n            if (err) {\n                // Support @JSON.type() decorator in Error constructors.\n                const typeRecords = typeRegistry.get(type.prototype);\n                if (typeRecords) {\n                    for (const key of Reflect.ownKeys(data)) {\n                        const ctor = typeRecords[key];\n                        if (ctor) {\n                            err[key] = as(data[key], ctor);\n                        }\n                    }\n                }\n            }\n            return err;\n        }\n        else {\n            const ins = Object.create(type.prototype);\n            const typeRecords = typeRegistry.get(type.prototype);\n            if (typeRecords) {\n                for (const key of Reflect.ownKeys(data)) {\n                    const ctor = typeRecords[key];\n                    ins[key] = ctor ? as(data[key], ctor) : data[key];\n                }\n            }\n            else {\n                Object.assign(ins, data);\n            }\n            return ins;\n        }\n    }\n    else {\n        return null;\n    }\n}\n/**\n * A decorator to instruct that the target property in the class is of a specific type.\n *\n * When parsing JSON via {@link parseAs}, this property is guaranteed to be of the given type.\n *\n * NOTE: this decorator only supports TypeScript's `experimentalDecorators`.\n *\n * @example\n * ```ts\n * class Example {\n *     \\@type(Date)\n *     date: Date;\n * }\n * ```\n */\nexport function type(ctor) {\n    return (proto, prop) => {\n        const record = typeRegistry.get(proto);\n        if (record) {\n            record[prop] = ctor;\n        }\n        else {\n            typeRegistry.set(proto, { [prop]: ctor });\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    // @ts-ignore\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @param {any} obj\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @param {any} obj\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @param {any} obj\n * @returns {obj is { [x: string | symbol]: any; next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n * @param {any} obj\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @param {any} obj\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @param {any} obj\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @param {any} obj\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * @param {any} obj \n */\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { as, parseAs, type } from \"./index.ts\";\nJSON.parseAs = parseAs;\nJSON.as = as;\nJSON.type = type;\n//# sourceMappingURL=augment.js.map","if (!Symbol.asyncIterator) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol(\"Symbol.asyncIterator\")\n    });\n}\nexport const source = Symbol(\"GeneratorSource\");\nexport const status = Symbol(\"GeneratorStatus\");\nexport const result = Symbol(\"GeneratorResult\");\nexport class Thenable {\n    constructor(_source) {\n        this[source] = _source;\n        this[status] = \"suspended\";\n        this[result] = void 0;\n    }\n    then(onfulfilled, onrejected) {\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve(this[result]);\n        }\n        else if (this[status] === \"erred\") {\n            res = Promise.reject(this[source]);\n        }\n        else if (typeof this[source].then === \"function\") {\n            res = Promise.resolve(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = processIterator(this[source]);\n        }\n        else {\n            res = Promise.resolve(this[source]);\n        }\n        this[status] = \"closed\";\n        return res\n            .then(value => (this[result] = value))\n            .then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return Promise.resolve(this).then(null, onrejected);\n    }\n}\nexport class ThenableGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = { value: void 0, done: true };\n        }\n        else if (this[status] === \"erred\") {\n            return this.throw(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = this[source].next(value);\n        }\n        else {\n            res = { value: this[source], done: true };\n        }\n        if (res.done === true) {\n            this[status] = \"closed\";\n            this[result] = res.value;\n        }\n        return res;\n    }\n    return(value) {\n        this[status] = \"closed\";\n        this[result] = value;\n        if (this[source] && typeof this[source].return === \"function\") {\n            return this[source].return(value);\n        }\n        else {\n            return { value, done: true };\n        }\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return this[source].throw(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    ;\n}\nexport class ThenableAsyncGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve({ value: void 0, done: true });\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = Promise.resolve(this[source].next(value));\n        }\n        else {\n            res = Promise.resolve(this[source]).then(value => {\n                return { value, done: true };\n            });\n        }\n        return res.then(res => {\n            if (res.done === true) {\n                this[status] = \"closed\";\n                this[result] = res.value;\n            }\n            return res;\n        });\n    }\n    return(value) {\n        this[status] = \"closed\";\n        // The input value may be a promise-like object, using Promise.resolve()\n        // to guarantee the value is resolved.\n        return Promise.resolve(value).then(value => {\n            this[result] = value;\n            if (this[source] && typeof this[source].return === \"function\") {\n                return Promise.resolve(this[source].return(value));\n            }\n            else {\n                return Promise.resolve({ value, done: true });\n            }\n        });\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return Promise.resolve(this[source].throw(err));\n        }\n        else {\n            return Promise.reject(err);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport const ThenableGeneratorFunction = (function (fn) {\n    if (!(this instanceof ThenableGeneratorFunction)) {\n        return new ThenableGeneratorFunction(fn);\n    }\n    function anonymous(...args) {\n        try {\n            const source = fn.apply(this, args);\n            if (typeof source.then === \"function\" || isAsyncGenerator(source)) {\n                return new ThenableAsyncGenerator(source);\n            }\n            else {\n                return new ThenableGenerator(source);\n            }\n        }\n        catch (err) {\n            return Object.assign(new ThenableGenerator(err), {\n                [status]: \"erred\"\n            });\n        }\n    }\n    // HACK, let the returning function be an instance of\n    // ThenableGeneratorFunction.\n    anonymous.prototype = ThenableGeneratorFunction;\n    anonymous.__proto__ = this;\n    return anonymous;\n});\nThenableGeneratorFunction.create = function create(fn) {\n    return new ThenableGeneratorFunction(fn);\n};\nObject.setPrototypeOf(ThenableGeneratorFunction, Function);\nObject.setPrototypeOf(ThenableGeneratorFunction.prototype, Function.prototype);\nexport const create = ThenableGeneratorFunction.create;\nexport default create;\nfunction isAsyncGenerator(obj) {\n    return obj !== null\n        && typeof obj === \"object\"\n        && typeof obj.next === \"function\"\n        && typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\"\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\nfunction processIterator(iterator) {\n    return new Promise((resolve, reject) => {\n        function fulfilled(value) {\n            try {\n                step(iterator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            var _a;\n            try {\n                step((_a = iterator.throw) === null || _a === void 0 ? void 0 : _a.call(iterator, value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(item) {\n            Promise.resolve(item).then(result => {\n                result.done ? resolve(result.value) : new Promise(resolve => {\n                    resolve(result.value);\n                }).then(fulfilled, rejected);\n            });\n        }\n        step(iterator.next());\n    });\n}\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (returns instanceof ThenableAsyncGenerator) {\n        // special case\n        returns = returns.then((value) => [null, value]);\n        return Promise.resolve(returns).catch((err) => [err, undefined]);\n    }\n    else if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns.then((value) => [null, value]);\n        return Promise.resolve(returns).catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\nexport function isFunction(val) {\n    return typeof val === \"function\";\n}\n//# sourceMappingURL=try.js.map","/**\n * Wraps a function inside another function and returns a new function that copies the original\n * function's name and other properties.\n *\n * @example\n * ```ts\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","const throttleCaches = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = returns.then(value => {\n                    cache.pending = undefined;\n                    cache.result = { value };\n                    cache.expires = Date.now() + duration;\n                    return value;\n                }).catch(error => {\n                    cache.pending = undefined;\n                    cache.result = { error };\n                    cache.expires = Date.now() + duration;\n                    throw error;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (!key) {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = throttleCaches.get(key);\n        if (!cache) {\n            cache = { for: key };\n            throttleCaches.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { hasOwn } from \"./object/index.ts\";\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport default function mixins(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n//# sourceMappingURL=mixins.js.map","var _a;\nimport { sequence } from \"./number/index.ts\";\nconst idGenerator = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nexport const id = Symbol.for(\"id\");\nexport class Channel {\n    constructor(capacity = 0) {\n        this[_a] = idGenerator.next().value;\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.error = null;\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a receiver is\n     *  available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed to the buffer.\n     *      - Otherwise, this function will block until there is new space for the data in the\n     *          buffer.\n     */\n    push(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block until new data is\n     * available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    pop() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = null;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no longer used, it\n     * will be automatically released by the GC. However, if the channel is used in a\n     * `for await...of...` loop, closing the channel will allow the loop to break automatically.\n     *\n     * Moreover, if the channel is used between parallel threads, it will no longer be able to\n     * release automatically, must explicitly call this function in order to release for GC.\n     */\n    close(err = null) {\n        if (this.state !== 1) {\n            // prevent duplicated call\n            return;\n        }\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [(_a = id, Symbol.asyncIterator)]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const queueSize = channel.producers.length;\n                const value = await channel.pop();\n                return {\n                    value: value,\n                    done: channel.state === 0 && !bufSize && !queueSize,\n                };\n            }\n        };\n    }\n}\n/**\n * Inspired by Golang, cerates a {@link Channel} that can be used to transfer data across routines.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a non-buffered channel,\n * the sender and receiver must be present at the same time (theoretically), otherwise, the\n * channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered channel, data will\n * be queued in the buffer first and then consumed by the receiver in FIFO order. Once the\n * buffer size reaches the capacity limit, no more data will be sent unless there is new space\n * available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to never block and\n * behave like a message queue.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will always be delivered,\n * even if there is no receiver at the moment.\n *\n * Also, unlike Golang, `await channel.pop()` does not prevent the process from exiting.\n *\n * Channels can be used to send and receive streaming data between main thread and worker threads\n * wrapped by `parallel()`, but once used that way, `channel.close()` must be explicitly called\n * in order to release the channel for garbage collection.\n *\n * @example\n * ```ts\n * // non-buffered\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.push(123);\n * })();\n *\n * const num = await channel.pop();\n * console.log(num); // 123\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * // buffered\n * const channel = chan<number>(3);\n *\n * await channel.push(123);\n * await channel.push(456);\n * await channel.push(789);\n *\n * const num1 = await channel.pop();\n * const num2 = await channel.pop();\n * const num3 = await channel.pop();\n *\n * console.log(num1); // 123\n * console.log(num2); // 456\n * console.log(num3); // 789\n * ```\n *\n * @example\n * ```ts\n * // iterable\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of Number.sequence(1, 5)) {\n *         await channel.push(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","import chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.push(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents concurrency\n * conflicts, it returns a {@link Queue} instance that we can push data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once reached, the push\n * operation will block until there is new space available. Bu default, this option is not set and\n * use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","var _a;\nimport { Channel, id } from \"./chan.ts\";\nexport const isDeno = typeof Deno === \"object\";\nexport const isBun = typeof Bun === \"object\";\nexport const isNode = !isDeno && !isBun && typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nexport const isBeforeNode14 = isNode && parseInt(process.version.slice(1)) < 14;\nexport const IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\n// In Node.js, `process.argv` contains `--worker-thread` when the current thread is used as\n// a worker.\nconst isNodeWorkerThread = isNode && process.argv.includes(\"--worker-thread\");\nexport const isMainThread = !isNodeWorkerThread\n    && (isBun ? Bun.isMainThread : typeof WorkerGlobalScope === \"undefined\");\nconst moduleCache = new Map();\nconst channelStore = new Map();\nexport async function resolveModule(modId, baseUrl = undefined) {\n    let module;\n    if (isNode || isBun) {\n        const { fileURLToPath } = await import(\"url\");\n        const path = baseUrl ? fileURLToPath(new URL(modId, baseUrl).href) : modId;\n        module = await import(path);\n    }\n    else {\n        const url = new URL(modId, baseUrl).href;\n        module = moduleCache.get(url);\n        if (!module) {\n            if (isDeno) {\n                module = await import(url);\n                moduleCache.set(url, module);\n            }\n            else {\n                try {\n                    module = await import(url);\n                    moduleCache.set(url, module);\n                }\n                catch (err) {\n                    if (String(err).includes(\"Failed\")) {\n                        // The content-type of the response isn't application/javascript, try to\n                        // download it and load it with object URL.\n                        const res = await fetch(url);\n                        const buf = await res.arrayBuffer();\n                        const blob = new Blob([new Uint8Array(buf)], {\n                            type: \"application/javascript\",\n                        });\n                        const _url = URL.createObjectURL(blob);\n                        module = await import(_url);\n                        moduleCache.set(url, module);\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n        }\n    }\n    if (typeof module[\"default\"] === \"object\" && typeof module[\"default\"].default !== \"undefined\") {\n        module = module[\"default\"]; // CommonJS module with exports.default\n    }\n    return module;\n}\nexport function isChannelMessage(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"push\", \"close\"].includes(msg.type)\n        && typeof msg.channelId === \"number\";\n}\nexport async function handleChannelMessage(msg) {\n    const record = channelStore.get(msg.channelId);\n    if (!record)\n        return;\n    if (msg.type === \"push\") {\n        await record.raw.push(msg.value);\n    }\n    else if (msg.type === \"close\") {\n        const { value: err, channelId } = msg;\n        record.raw.close(err);\n        channelStore.delete(channelId);\n        if (isMainThread && record.writers.length > 1) {\n            // distribute the channel close event to all threads\n            record.writers.forEach(write => {\n                write(\"close\", err, channelId);\n            });\n        }\n    }\n}\nfunction wireChannel(channel, channelWrite) {\n    const channelId = channel[id];\n    if (!channelStore.has(channelId)) {\n        const push = channel.push.bind(channel);\n        const close = channel.close.bind(channel);\n        channelStore.set(channelId, {\n            channel,\n            raw: { push, close },\n            writers: [channelWrite],\n            counter: 0,\n        });\n        Object.defineProperties(channel, {\n            push: {\n                configurable: true,\n                writable: true,\n                value: async (data) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        const channel = record.channel;\n                        if (channel[\"state\"] !== 1) {\n                            throw new Error(\"the channel is closed\");\n                        }\n                        const write = record.writers[record.counter++ % record.writers.length];\n                        await Promise.resolve(write(\"push\", data, channelId));\n                    }\n                },\n            },\n            close: {\n                configurable: true,\n                writable: true,\n                value: (err = null) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        channelStore.delete(channelId);\n                        const channel = record.channel;\n                        record.writers.forEach(write => {\n                            write(\"close\", err, channelId);\n                        });\n                        // recover to the original methods\n                        Object.defineProperties(channel, {\n                            push: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.push,\n                            },\n                            close: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.close,\n                            },\n                        });\n                        channel.close(err);\n                    }\n                },\n            },\n        });\n    }\n    else {\n        const record = channelStore.get(channelId);\n        record.writers.push(channelWrite);\n    }\n}\nexport function wrapChannel(channel, channelWrite) {\n    wireChannel(channel, channelWrite);\n    return { \"@@type\": \"Channel\", \"@@id\": channel[id], \"capacity\": channel.capacity };\n}\nexport function unwrapChannel(obj, channelWrite) {\n    var _a, _b;\n    const channelId = obj[\"@@id\"];\n    let channel = (_a = channelStore.get(channelId)) === null || _a === void 0 ? void 0 : _a.channel;\n    if (!channel) {\n        channel = Object.assign(Object.create(Channel.prototype), {\n            [id]: channelId,\n            capacity: (_b = obj.capacity) !== null && _b !== void 0 ? _b : 0,\n            buffer: [],\n            producers: [],\n            consumers: [],\n            error: null,\n            state: 1,\n        });\n    }\n    wireChannel(channel, channelWrite);\n    return channel;\n}\n//# sourceMappingURL=util.js.map","import { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { fromErrorEvent, fromObject } from \"./error/index.ts\";\nimport { isNode, isDeno, isBun, isBeforeNode14, IsPath, isMainThread, resolveModule, isChannelMessage, handleChannelMessage, wrapChannel } from \"./util.ts\";\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst remoteTasks = new Map;\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\nlet gcTimer;\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let start = str.lastIndexOf(\"(\");\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += 1;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if (isNode &&\n        !/\\.[cm]?(js|ts|)x?$/.test(_id) && // omit suffix\n        IsPath.test(_id) // relative or absolute path\n    ) {\n        if (isBun) {\n            _id += \".ts\";\n        }\n        else {\n            _id += \".js\";\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport function isCallResponse(msg) {\n    return msg && typeof msg === \"object\" && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options = {}) {\n    var _a;\n    let { adapter = \"worker_threads\" } = options;\n    let entry = parallel.workerEntry;\n    if (isNode || isBun) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules (hope it exists).\n                if (isBun) {\n                    entry = \"./node_modules/@ayonli/jsext/worker.ts\";\n                }\n                else {\n                    entry = \"./node_modules/@ayonli/jsext/bundle/worker-node.mjs\";\n                }\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if ([\n                    path.join(\"jsext\", \"cjs\"),\n                    path.join(\"jsext\", \"esm\"),\n                    path.join(\"jsext\", \"bundle\")\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this module,\n                    // redirect to the root directory of this package.\n                    _dirname = path.dirname(_dirname);\n                }\n                if (isBun) {\n                    entry = path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker-node.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isBeforeNode14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\", \"--serialization=\" + serialization], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        if (isDeno) {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    entry = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n                }\n                else {\n                    entry = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker.ts\"\n                    ].join(\"/\");\n                    // The application imports the compiled version of this module,\n                    // redirect to the source worker entry.\n                    if (entry.endsWith(\"/esm/worker.ts\")) {\n                        entry = entry.slice(0, -14) + \"/worker.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can bypass CORS\n            // security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nasync function acquireWorker(taskId) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker()).worker;\n                const handleMessage = (msg) => {\n                    var _a, _b, _c, _d;\n                    if (isChannelMessage(msg)) {\n                        handleChannelMessage(msg);\n                    }\n                    else if (isCallResponse(msg) && msg.taskId) {\n                        const task = remoteTasks.get(msg.taskId);\n                        if (!task)\n                            return;\n                        if (msg.type === \"return\" || msg.type === \"error\") {\n                            if (msg.type === \"error\") {\n                                const err = isPlainObject(msg.error)\n                                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                                    : msg.error;\n                                if (err instanceof Error &&\n                                    (err.message.includes(\"not be cloned\")\n                                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                                    )) {\n                                    Object.defineProperty(err, \"stack\", {\n                                        configurable: true,\n                                        enumerable: false,\n                                        writable: true,\n                                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                            + `at ${task.fn} (${task.module})`,\n                                    });\n                                }\n                                if (task.resolver) {\n                                    task.resolver.reject(err);\n                                    if (task.channel) {\n                                        task.channel.close();\n                                    }\n                                }\n                                else if (task.channel) {\n                                    task.channel.close(err);\n                                }\n                                else {\n                                    task.error = err;\n                                }\n                            }\n                            else {\n                                if (task.resolver) {\n                                    task.resolver.resolve(msg.value);\n                                }\n                                else {\n                                    task.result = { value: msg.value };\n                                }\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            poolRecord.tasks.delete(msg.taskId);\n                            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                                // Allow the main thread to exit if the event loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        else if (msg.type === \"yield\") {\n                            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.push({ value: msg.value, done: msg.done });\n                            if (msg.done) {\n                                // The final message of yield event is the return value.\n                                handleMessage({\n                                    type: \"return\",\n                                    value: msg.value,\n                                    taskId: msg.taskId,\n                                });\n                            }\n                        }\n                        else if (msg.type === \"gen\") {\n                            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n                        }\n                    }\n                };\n                const handleClose = (err) => {\n                    for (const taskId of poolRecord.tasks) {\n                        poolRecord.tasks.delete(taskId);\n                        const task = remoteTasks.get(taskId);\n                        if (task) {\n                            if (task.resolver) {\n                                task.resolver.reject(err);\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            else if (task.channel) {\n                                task.channel.close(err);\n                            }\n                            else {\n                                task.error = err;\n                            }\n                        }\n                    }\n                    workerPool = workerPool.filter(item => item !== poolRecord);\n                };\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to the channel in the\n                            // worker thread when the thread is terminated. This situation often\n                            // occurs when using `run()` to call function and the `result()` is\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n            }\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nasync function safeRemoteCall(worker, req, transferable, taskId) {\n    try {\n        worker.postMessage(req, transferable);\n    }\n    catch (err) {\n        remoteTasks.delete(taskId);\n        if (typeof worker[\"unref\"] === \"function\") {\n            worker.unref();\n        }\n        throw err;\n    }\n}\nfunction createRemoteCall(module, fn, args) {\n    const taskId = taskIdCounter.next().value;\n    remoteTasks.set(taskId, { module, fn });\n    let getWorker = acquireWorker(taskId);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then(async (worker) => {\n        await safeRemoteCall(worker, {\n            type: \"call\",\n            module,\n            fn,\n            args: _args,\n            taskId,\n        }, transferable, taskId);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                remoteTasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                remoteTasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return getWorker.then(() => new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            remoteTasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            remoteTasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                })).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                remoteTasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                remoteTasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                const { args, transferable } = wrapArgs([input], getWorker);\n                await safeRemoteCall(worker, {\n                    type: \"next\",\n                    args: args,\n                    taskId,\n                }, transferable, taskId);\n                return await task.channel.pop();\n            }\n        },\n        async return(value) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            const { args, transferable } = wrapArgs([value], getWorker);\n            await safeRemoteCall(worker, {\n                type: \"return\",\n                args: args,\n                taskId,\n            }, transferable, taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            await safeRemoteCall(worker, {\n                type: \"throw\",\n                args: [err],\n                taskId,\n            }, transferable, taskId);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(module, fn, args) {\n    const getReturns = resolveModule(module).then(mod => {\n        return mod[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    const lines = stackTrace.split(\"\\n\");\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            baseUrl = \"file://\" + baseUrl;\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module so its functions are run in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS module,\n * **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * In Bun and Deno, the `module` can also be a TypeScript file.\n *\n * Data are cloned and transferred between threads via **Structured Clone Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel} can also be\n * used to transfer data between threads. To do so, just passed a channel instance to the threaded\n * function. But be aware, channel can only be used as a parameter, return a channel from the\n * threaded function is not allowed. Once passed, the data can only be transferred into and\n * out-from the function.\n *\n * The difference between using a channel and a generator function for streaming processing is, for\n * a generator function, `next(value)` is coupled with a `yield value`, the process is blocked\n * between **next** calls, channel doesn't have this limit, we can use it to stream all the data\n * into the function before processing and receiving any result.\n *\n * The threaded function also supports `ArrayBuffer`s as transferable objects. If an array buffer is\n * presented as an argument or the direct property of an argument (assume it's a plain object), or\n * the array buffer is the return value or the direct property of the return value (assume it's a\n * plain object), it automatically becomes a transferrable object and will be transferred to the\n * other thread instead of being cloned. This strategy allows us to easily compose objects like\n * `Request` and `Response` instances into plain objects and pass them between threads without\n * overhead.\n *\n * NOTE: If the current module is already in a worker thread, use this function won't create another\n * worker thread.\n *\n * @example\n * ```ts\n * // regular or async function\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * // generator or async generator function\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // use channel\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<{ value: number; done: boolean; }>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of Number.sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);      // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * console.log(await length); // 10\n * ```\n *\n * @example\n * ```ts\n * // use transferrable\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const arr = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n * const length = await mod.transfer(arr.buffer);\n *\n * console.log(length);     // 10\n * console.log(arr.length); // 0\n * ```\n *\n * NOTE: if the application is to be bundled, use the following syntax to link the module instead,\n * it will prevent the bundler from including the file and rewriting the path.\n *\n * ```ts\n * const mod = parallel<typeof import(\"./examples/worker.mjs\")>(\"./examples/worker.mjs\");\n * ```\n */\nfunction parallel(module) {\n    let modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    return new Proxy(Object.create(null), {\n        get: (target, prop) => {\n            if (Reflect.has(target, prop)) {\n                return target[prop];\n            }\n            else if (typeof prop === \"symbol\") {\n                return undefined;\n            }\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not set, the program\n     * by default uses CPU core numbers as the limit.\n     */\n    parallel.maxWorkers = undefined;\n    /**\n     * In browsers, by default, the program loads the worker entry directly from GitHub,\n     * which could be slow due to poor internet connection, we can copy the entry file\n     * `bundle/worker.mjs` to a local path of our website and set this option to that path\n     * so that it can be loaded locally.\n     *\n     * Or, if the code is bundled, the program won't be able to automatically locate the entry\n     * file in the file system, in such case, we can also copy the entry file\n     * (`bundle/worker.mjs` for Bun, Deno and the browser, `bundle/worker-node.mjs` for Node.js)\n     * to a local directory and supply this option instead.\n     */\n    parallel.workerEntry = undefined;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map","import chan from \"./chan.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { fromErrorEvent, fromObject } from \"./error/index.ts\";\nimport { handleChannelMessage, isChannelMessage, isNode, isBun, isDeno, IsPath } from \"./util.ts\";\nimport parallel, { getMaxParallelism, sanitizeModuleId, createWorker, isCallResponse, wrapArgs } from \"./parallel.ts\";\nconst workerPools = new Map();\n// The worker consumer queue is nothing but a callback list, once a worker is available, the runner\n// pop a consumer and run the callback, which will retry gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs the given `script` in a worker thread or child process.\n *\n * In Node.js and Bun, the `script` can be either an ES module or a CommonJS module, and is\n * relative to the current working directory if not absolute.\n *\n * In browsers and Deno, the `script` can only be an ES module, and is relative to the current URL\n * (or working directory in Deno) if not absolute.\n *\n * In Bun and Deno, the `script` can also be a TypeScript file.\n *\n * This function also uses {@link parallel.maxWorkers} and {@link parallel.workerEntry} for worker\n * configuration by default. {@link Channel} can also be used to transfer streaming data into the\n * function being called. `ArrayBuffer`s are also supported as transferrable objects if they are\n * presented as arguments or the return value (or their direct properties).\n *\n * @example\n * ```ts\n * // result\n * const job1 = await run(\"examples/worker.mjs\", [\"World\"]);\n * console.log(await job1.result()); // Hello, World\n * ```\n *\n * @example\n * ```ts\n * // iterate\n * const job2 = await run<string, [string[]]>(\"examples/worker.mjs\", [[\"foo\", \"bar\"]], {\n *     fn: \"sequence\",\n * });\n * for await (const word of job2.iterate()) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // abort\n * const job3 = await run<string, [string]>(\"examples/worker.mjs\", [\"foobar\"], {\n *    fn: \"takeTooLong\",\n * });\n * await job3.abort();\n * const [err, res] = await _try(job3.result());\n * console.assert(err === null);\n * console.assert(res === undefined);\n * ```\n */\nasync function run(script, args, options) {\n    var _a;\n    const maxWorkers = run.maxWorkers || parallel.maxWorkers || await getMaxParallelism;\n    const fn = (options === null || options === void 0 ? void 0 : options.fn) || \"default\";\n    let modId = sanitizeModuleId(script);\n    let baseUrl = undefined;\n    if (isDeno) {\n        baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode || isBun) {\n        if (IsPath.test(modId)) {\n            // Only set baseUrl for relative modules, don't set it for node modules.\n            baseUrl = \"file://\" + process.cwd() + \"/\";\n        }\n    }\n    else if (typeof location === \"object\") {\n        baseUrl = location.href;\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    const req = {\n        type: \"call\",\n        module: modId,\n        fn,\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    const adapter = (options === null || options === void 0 ? void 0 : options.adapter) || \"worker_threads\";\n    const workerPool = (_a = workerPools.get(adapter)) !== null && _a !== void 0 ? _a : workerPools.set(adapter, []).get(adapter);\n    let poolRecord = workerPool.find(item => !item.busy);\n    if (poolRecord) {\n        poolRecord.busy = true;\n    }\n    else if (workerPool.length < maxWorkers) {\n        // Fill the worker pool regardless the current call should keep-alive or not,\n        // this will make sure that the total number of workers will not exceed the\n        // `run.maxWorkers`. If the the call doesn't keep-alive the worker, it will be\n        // cleaned after the call.\n        workerPool.push(poolRecord = {\n            getWorker: createWorker({ adapter }),\n            adapter,\n            busy: true,\n        });\n    }\n    else {\n        // Put the current call in the consumer queue if there are no workers available,\n        // once an existing call finishes, the queue will pop the its head consumer and\n        // retry.\n        return new Promise((resolve) => {\n            workerConsumerQueue.push(resolve);\n        }).then(() => run(modId, args, options));\n    }\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(async () => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        error = err;\n        await terminate();\n        handleClose(err, true);\n    }, options.timeout) : null;\n    const handleMessage = async (msg) => {\n        var _a, _b;\n        if (isChannelMessage(msg)) {\n            await handleChannelMessage(msg);\n        }\n        else if (isCallResponse(msg)) {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"return\" || msg.type === \"error\") {\n                if (msg.type === \"error\") {\n                    const err = isPlainObject(msg.error)\n                        ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                        : msg.error;\n                    if (err instanceof Error &&\n                        (err.message.includes(\"not be cloned\")\n                            || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                            || err.message.includes(\"Do not know how to serialize\") // JSON error\n                        )) {\n                        Object.defineProperty(err, \"stack\", {\n                            configurable: true,\n                            enumerable: false,\n                            writable: true,\n                            value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                + `at ${fn} (${modId})`,\n                        });\n                    }\n                    error = err;\n                }\n                else {\n                    result = { value: msg.value };\n                }\n                (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n                handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            }\n            else if (msg.type === \"yield\") {\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({ type: \"return\", value: msg.value });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.push(msg.value);\n                }\n            }\n        }\n    };\n    const handleClose = (err, terminated = false) => {\n        var _a, _b, _c;\n        timeout && clearTimeout(timeout);\n        if (!terminated) {\n            // Release before resolve.\n            release === null || release === void 0 ? void 0 : release();\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to gain the worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        else if (poolRecord) {\n            // Clean the pool before resolve.\n            // The `workerPool` of this key in the pool map may have been modified by other\n            // routines, we need to retrieve the newest value.\n            const remainItems = (_b = workerPools.get(adapter)) === null || _b === void 0 ? void 0 : _b.filter(record => record !== poolRecord);\n            if (remainItems === null || remainItems === void 0 ? void 0 : remainItems.length) {\n                workerPools.set(adapter, remainItems);\n            }\n            else {\n                workerPools.delete(adapter);\n            }\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_c = workerConsumerQueue.shift()) === null || _c === void 0 ? void 0 : _c();\n            }\n        }\n        if (err) {\n            error !== null && error !== void 0 ? error : (error = err);\n        }\n        if (error) {\n            if (resolver) {\n                resolver.reject(error);\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (channel) {\n                channel.close(error);\n            }\n        }\n        else {\n            result !== null && result !== void 0 ? result : (result = { value: void 0 });\n            if (resolver) {\n                resolver.resolve(result.value);\n            }\n            if (channel) {\n                channel.close();\n            }\n        }\n    };\n    const safeRemoteCall = async (worker, req, transferable = []) => {\n        try {\n            if (typeof worker[\"postMessage\"] === \"function\") {\n                worker.postMessage(req, transferable);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    worker.send(req, err => err ? reject(err) : resolve());\n                });\n            }\n        }\n        catch (err) {\n            if (typeof worker[\"unref\"] === \"function\") {\n                worker.unref();\n            }\n            error = err;\n            (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n            handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            throw err;\n        }\n    };\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            workerId = record.workerId;\n            worker.ref(); // prevent premature exit in the main thread\n            worker.on(\"message\", handleMessage);\n            worker.once(\"exit\", (code, signal) => {\n                if (!error && !result) {\n                    handleClose(new Error(`worker exited (${code !== null && code !== void 0 ? code : signal})`), true);\n                }\n            });\n            release = () => {\n                worker.unref(); // allow the main thread to exit if the event loop is empty\n                // Remove the event listener so that later calls will not mess up.\n                worker.off(\"message\", handleMessage);\n                worker.removeAllListeners(\"exit\");\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (error) {\n                // The worker take too long to start and timeout error already thrown.\n                await terminate();\n                throw error;\n            }\n            const { args } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req);\n        }\n        else if (isNode) {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleErrorEvent = (err) => {\n                if (!error && !result) {\n                    handleClose(err, true); // In Node.js, worker will exit once erred.\n                }\n            };\n            workerId = record.workerId;\n            worker.ref();\n            worker.on(\"message\", handleMessage);\n            worker.once(\"error\", handleErrorEvent);\n            release = () => {\n                worker.unref();\n                worker.off(\"message\", handleMessage);\n                worker.off(\"error\", handleErrorEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n        else { // isBun\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleCloseEvent = ((ev) => {\n                if (!error && !result) {\n                    handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"), true);\n                }\n            });\n            workerId = record.workerId;\n            worker.ref();\n            worker.onmessage = (ev) => handleMessage(ev.data);\n            worker.onerror = () => void worker.terminate(); // terminate once erred\n            worker.addEventListener(\"close\", handleCloseEvent);\n            release = () => {\n                worker.unref();\n                worker.onmessage = null;\n                worker.onerror = null;\n                worker.removeEventListener(\"close\", handleCloseEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n    }\n    else {\n        const record = await poolRecord.getWorker;\n        const worker = record.worker;\n        workerId = record.workerId;\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => {\n            var _a;\n            if (!error && !result) {\n                worker.terminate(); // ensure termination\n                handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"), true);\n            }\n        };\n        release = () => {\n            worker.onmessage = null;\n            worker.onerror = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = () => Promise.resolve(worker.terminate());\n        if (error) {\n            await terminate();\n            throw error;\n        }\n        const { args, transferable } = wrapArgs(req.args, Promise.resolve(worker));\n        req.args = args;\n        await safeRemoteCall(worker, req, transferable);\n    }\n    return {\n        workerId,\n        async abort(reason = undefined) {\n            timeout && clearTimeout(timeout);\n            if (reason) {\n                if (reason instanceof Error) {\n                    error = reason;\n                }\n                else if (typeof reason === \"string\") {\n                    error = new Error(reason);\n                }\n                else {\n                    // @ts-ignore\n                    error = new Error(\"operation aborted\", { cause: reason });\n                }\n            }\n            else {\n                result = { value: void 0 };\n            }\n            await terminate();\n            handleClose(null, true);\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n(function (run) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not set, use the same\n     * setting as {@link parallel.maxWorkers}.\n     */\n    run.maxWorkers = undefined;\n})(run || (run = {}));\n// backward compatibility\nObject.defineProperties(run, {\n    workerEntry: {\n        set(v) {\n            parallel.workerEntry = v;\n        },\n        get() {\n            return parallel.workerEntry;\n        },\n    },\n});\nexport default run;\n//# sourceMappingURL=run.js.map","import wrap from \"./wrap.ts\";\nconst isBun = typeof Bun === \"object\";\nconst warnedRecord = new Map();\nexport default function deprecate(target, ...args) {\n    var _a, _b, _c, _d;\n    if (typeof target === \"function\") {\n        const tip = (_a = args[0]) !== null && _a !== void 0 ? _a : \"\";\n        const once = (_b = args[1]) !== null && _b !== void 0 ? _b : false;\n        return wrap(target, function wrapped(fn, ...args) {\n            emitWarning(fn.name + \"()\", wrapped, tip, once, isBun ? 1 : 2);\n            return fn.apply(this, args);\n        });\n    }\n    const forFn = args[0];\n    const tip = (_c = args[1]) !== null && _c !== void 0 ? _c : \"\";\n    const once = (_d = args[2]) !== null && _d !== void 0 ? _d : false;\n    return emitWarning(target, forFn, tip, once, 1);\n}\nfunction emitWarning(target, forFn, tip, once, lineNum) {\n    var _a;\n    if (!once || !warnedRecord.has(forFn)) {\n        const capture = {};\n        Error.captureStackTrace(capture, forFn);\n        let line = (_a = capture.stack.split(\"\\n\")[lineNum]) === null || _a === void 0 ? void 0 : _a.trim();\n        let warning = `${target} is deprecated`;\n        if (tip) {\n            warning += \", \" + tip;\n        }\n        if (line) {\n            let start = line.indexOf(\"(\");\n            if (start !== -1) {\n                start += 1;\n                const end = line.indexOf(\")\", start);\n                line = line.slice(start, end);\n            }\n            warning += \" (\" + line + \")\";\n        }\n        console.warn(\"DeprecationWarning:\", warning);\n        once && warnedRecord.set(forFn, true);\n    }\n}\n//# sourceMappingURL=deprecate.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport mixins, { isSubclassOf } from \"./mixins.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport run from \"./run.ts\";\nimport parallel from \"./parallel.ts\";\nimport example from \"./example.ts\";\nimport deprecate from \"./deprecate.ts\";\nexport { Channel, Queue };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    mixins,\n    isSubclassOf,\n    chan,\n    queue,\n    read,\n    readAll,\n    run,\n    parallel,\n    example,\n    deprecate,\n};\nexport { jsext as default, _try, func, wrap, throttle, mixins, isSubclassOf, chan, queue, read, readAll, run, parallel, example, deprecate, };\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which can be used\n * to carry deferred jobs that will be run after the main function is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are called in the\n * LIFO order. Callbacks can be async functions if the main function is an async function or\n * an async generator function, and all the running procedures will be awaited.\n *\n * @example\n * ```ts\n * const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","import chan from \"./chan.ts\";\nimport { isFunction } from \"./try.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.push.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to make sure when\n            // it calls the close() function, the iterator is automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Inspired by Golang's **Example as Test** design, creates a function that carries example code\n * with `// output:` comments, when the returned function is called, it will automatically check if\n * the actual output matches the one declared in the comment.\n *\n * The example function receives a customized `console` object which will be used to log outputs\n * instead of using the built-in `console`.\n *\n * NOTE: this function is used to simplify the process of writing tests, it does not work in Bun and\n * browsers currently, because Bun hasn't implement the `Console` constructor and removes comments\n * during runtime, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => line.trim().toLowerCase() === \"// output:\");\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => line.trim().toLowerCase() === \"// output:\") !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk)).join(\"\\n\").replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => process.stdout.write(chunk, () => resolve()));\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","_trim","String","prototype","trim","_trimEnd","trimEnd","_trimStart","trimStart","str","chars","call","indexOf","substring","encoder","TextEncoder","sequence","min","max","step","loop","id","sum","values","reduce","value","Uint8Array","_equals","_split","hasOwn","obj","key","Object","hasOwnProperty","pick","keys","result","undefined","omit","keptKeys","Reflect","ownKeys","filter","includes","Error","forEach","isValid","is","NaN","Date","toString","isPlainObject","proto","getPrototypeOf","compare","str1","str2","random","floor","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","words","matches","_words","_chunk","truncate","_truncate","byteLength","encode","Number","isFloat","isNaN","isFinite","isNumeric","type","BigInt","_a","isBetween","first","last","ele","another","uniq","Set","shuffle","j","_shuffle","toShuffled","toReversed","reverse","toSorted","fn","sort","orderBy","order","items","a","b","isArray","_b","_orderBy","groupBy","Map","groups","item","list","get","set","_groupBy","copy","src","dest","subarray","concat","arrays","map","ele1","ele2","hasOwnMethod","method","getOwnPropertyDescriptor","patch","target","sources","source","as","TypeError","_type","primitiveMap","string","number","bigint","boolean","Boolean","symbol","Symbol","valueOf","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","test","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","has","deleteValue","delete","clear","internal","CiMap","entries","callbackfn","thisArg","iterator","globalThis","Exception","message","options","code","cause","defineProperty","configurable","enumerable","writable","toObject","err","fromObject","name","create","isFirefoxOrSafari","navigator","userAgent","fromErrorEvent","event","error","shouldPatchStack","stack","filename","lineno","colno","toErrorEvent","lines","line","callSite","find","startsWith","start","lastIndexOf","end","index","parseInt","ErrorEvent","toJSON","typeRegistry","data","fromJSON","date","_c","Buffer","_d","_e","getOwnPropertyNames","every","typeRecords","ins","assign","_f","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","JSON","parseAs","text","parse","prop","record","Thenable","_source","then","onfulfilled","onrejected","res","fulfilled","e","rejected","done","ThenableGenerator","args","ThenableAsyncGenerator","ThenableGeneratorFunction","anonymous","apply","__proto__","isFunction","val","wrap","wrapper","wrapped","bind","setPrototypeOf","Function","throttleCaches","mergeIfNotExists","mergeSuper","props","setProp","mergeHierarchy","mixin","_super","desc","idGenerator","MAX_SAFE_INTEGER","for","Channel","capacity","buffer","producers","consumers","state","RangeError","consume","shift","_data","pop","produce","close","channel","bufSize","queueSize","chan","Queue","handler","bufferSize","errorHandler","catch","onError","isDeno","Deno","isBun","Bun","isNode","process","versions","node","isBeforeNode14","version","IsPath","isMainThread","argv","WorkerGlobalScope","moduleCache","channelStore","isChannelMessage","msg","channelId","handleChannelMessage","raw","writers","write","wrapChannel","channelWrite","counter","defineProperties","wireChannel","taskIdCounter","remoteTasks","workerIdCounter","gcTimer","workerPool","getMaxParallelism","os","import","availableParallelism","cpus","hardwareConcurrency","sanitizeModuleId","strict","_id","isCallResponse","createWorker","adapter","entry","parallel","workerEntry","path","fileURLToPath","_filename","document","location","require","pathToFileURL","__filename","href","_documentCurrentScript","URL","baseURI","_dirname","dirname","join","some","endsWith","fork","serialization","worker","stdio","workerId","pid","once","off","kind","Worker","threadId","onerror","ev","addEventListener","url","fetch","blob","headers","buf","arrayBuffer","Blob","createObjectURL","wrapArgs","getWorker","transferable","arg","postMessage","send","ArrayBuffer","safeRemoteCall","req","taskId","unref","createRemoteCall","module","maxWorkers","poolRecord","tasks","lastAccess","now","handleMessage","task","resolver","generate","handleClose","on","_worker","onmessage","terminate","setInterval","idealItems","ideal","unrefTimer","add","ref","acquireWorker","_args","input","Infinity","createLocalCall","getReturns","modId","baseUrl","_url","default","resolveModule","mod","gen","extractBaseUrl","stackTrace","captureStackTrace","trace","Proxy","parallel$1","workerPools","workerConsumerQueue","run","script","cwd","busy","release","clearTimeout","keepAlive","terminated","remainItems","signal","removeAllListeners","kill","handleErrorEvent","handleCloseEvent","removeEventListener","abort","iterate","v","run$1","warnedRecord","emitWarning","forFn","tip","lineNum","capture","warning","console","warn","AsyncFunction","AsyncGeneratorFunction","jsext","try","_try","returns","func","callbacks","defer","cb","throttle","duration","noWait","handleCall","cache","pending","expires","mixins","base","isSubclassOf","ctor1","ctor2","queue","read","eventMap","handleBrowserErrorEvent","msgDesc","errDesc","closeDesc","cleanup","es","eventName","msgListener","_close","ws","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","readAll","example","findIndex","expected","_expected","assert","Writable","Console","logs","decoder","TextDecoder","stdout","callback","_console","actual","decode","ok","suppress","handleResult","deprecate"],"mappings":"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"}