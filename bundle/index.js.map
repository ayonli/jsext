{"version":3,"file":"index.js","sources":["../array/base.ts","../string/index.ts","../number/index.ts","../object/index.ts","../mixins.ts","../array/index.ts","../math/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../uint8array/index.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../error/augment.ts","../json/index.ts","../external/check-iterable/index.mjs","../json/augment.ts","../external/thenable-generator/index.ts","../try.ts","../wrap.ts","../throttle.ts","../chan.ts","../queue.ts","../util.ts","../parallel.ts","../run.ts","../deprecate.ts","../index.ts","../func.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array-like object. */\nexport function count(arr, ele) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === ele) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array-like object.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array-like object into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array-like object into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n//# sourceMappingURL=base.js.map","import { chunk as _chunk } from \"../array/base.ts\";\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a == b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/** Returns a random string, the charset matches `/[0-9a-zA-Z]/`. */\nexport function random(length) {\n    const chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * chars.length);\n        str += chars[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches].map(sub => sub.split(\"_\")).flat() : [];\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst _trim = String.prototype.trim;\nconst _trimEnd = String.prototype.trimEnd;\nconst _trimStart = String.prototype.trimStart;\n/** Removes leading and trailing spaces or custom characters of the string. */\nexport function trim(str, chars = \"\") {\n    if (!chars) {\n        return _trim.call(str);\n    }\n    else {\n        return trimEnd(trimStart(str, chars), chars);\n    }\n}\n/** Removes trailing spaces or custom characters of the string. */\nexport function trimEnd(str, chars = \"\") {\n    if (!chars) {\n        return _trimEnd.call(str);\n    }\n    else {\n        let i = str.length;\n        while (i-- && chars.indexOf(str[i]) !== -1) { }\n        return str.substring(0, i + 1);\n    }\n}\n/** Removes leading spaces or custom characters of the string. */\nexport function trimStart(str, chars = \"\") {\n    if (!chars) {\n        return _trimStart.call(str);\n    }\n    else {\n        let i = 0;\n        do { } while (chars.indexOf(str[i]) !== -1 && ++i);\n        return str.substring(i);\n    }\n}\nconst encoder = new TextEncoder();\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return encoder.encode(str).byteLength;\n}\n;\n//# sourceMappingURL=index.js.map","/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n *\n * NOTE: `NaN` is not considered a number.\n * @param strict Only returns `true` when the value is of type `number`.\n */\nexport function isNumeric(value, strict = false) {\n    const type = typeof value;\n    if (strict) {\n        return type === \"number\" && !Number.isNaN(value);\n    }\n    else if (type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"number\") {\n        return !Number.isNaN(value);\n    }\n    else if (type === \"string\" && value) {\n        try {\n            BigInt(value);\n            return true;\n        }\n        catch (_a) {\n            return !Number.isNaN(Number(value));\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Creates a generator that produces sequential numbers from `min` to `max` (inclusive). */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n;\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\n;\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"stack\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n/**\n * Returns `true` is the given value is a plain object, that is, an object created by\n * the `Object` constructor or one with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value) {\n    if (typeof value !== \"object\" || value === null)\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === null || proto.constructor === Object;\n}\n//# sourceMappingURL=index.js.map","import { hasOwn } from \"./object/index.ts\";\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop == \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport default function mixins(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin == \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin == \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n//# sourceMappingURL=mixins.js.map","import { isSubclassOf } from \"../mixins.ts\";\nimport { random as rand } from \"../number/index.ts\";\nimport { count as _count, equals as _equals, split as _split, chunk as _chunk, } from \"./base.ts\";\n/** Returns the first element of the array, or `undefined` if the array is empty. */\nexport function first(arr) {\n    return arr[0];\n}\n/** Returns the last element of the array, or `undefined` if the array is empty. */\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n/** Returns a random element of the array, or `undefined` if the array is empty. */\nexport function random(arr, remove = false) {\n    if (!arr.length) {\n        return undefined;\n    }\n    else if (arr.length === 1) {\n        if (remove) {\n            return arr.splice(0, 1)[0];\n        }\n        else {\n            return arr[0];\n        }\n    }\n    const i = rand(0, arr.length - 1);\n    if (remove) {\n        return arr.splice(i, 1)[0];\n    }\n    else {\n        return arr[i];\n    }\n}\n/** Counts the occurrence of the element in the array. */\nexport function count(arr, ele) {\n    return _count(arr, ele);\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\n/**\n * Orders the items of the array according to the specified comparable `key` (whose value\n * must either be a numeric or string).\n */\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const groups = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\nexport function keyBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const map = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            map.set(key, item);\n        }\n        return map;\n    }\n    else {\n        const record = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            record[key] = item;\n        }\n        return record;\n    }\n}\n//# sourceMappingURL=index.js.map","/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import { compare, random, byteLength as _byteLength, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, words as _words, trim as _trim, trimEnd as _trimEnd, trimStart as _trimStart } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.trim = function trim(chars = \"\") {\n    return _trim(String(this), chars);\n};\nString.prototype.trimEnd = function trimEnd(chars = \"\") {\n    return _trimEnd(String(this), chars);\n};\nString.prototype.trimStart = function trimStart(chars = \"\") {\n    return _trimStart(String(this), chars);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { first as _first, last as _last, chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, keyBy as _keyBy, orderBy as _orderBy, random as _random, shuffle as _shuffle, split as _split, uniq as _uniq } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return _first(this);\n};\nArray.prototype.last = function last() {\n    return _last(this);\n};\nArray.prototype.random = function random(remove = false) {\n    return _random(this, remove);\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function orderBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\nArray.prototype.keyBy = function keyBy(fn, type = Object) {\n    return _keyBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk, concat, copy } from \"./index.ts\";\nUint8Array.copy = copy;\nUint8Array.concat = concat;\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","import { equals as _equals, split as _split, chunk as _chunk } from \"../array/base.ts\";\nimport { sum } from \"../math/index.ts\";\n/** Copies bytes from `src` array to `dest` and returns the number of bytes copied. */\nexport function copy(src, dest) {\n    if (src.length > dest.length) {\n        src = src.subarray(0, dest.length);\n    }\n    dest.set(src);\n    return src.length;\n}\n/** Like `Buffer.concat` but for pure `Uint8Array`. */\nexport function concat(...arrays) {\n    const length = sum(...arrays.map(arr => arr.length));\n    const ctor = arrays[0].constructor;\n    const result = new ctor(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    ;\n    return result;\n}\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compares this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, isValid, isPlainObject } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.isValid = isValid;\nObject.isPlainObject = isPlainObject;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test passes. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        super.set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = super.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return super.has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return super.delete(id);\n    }\n    *entries() {\n        for (const { key, value } of super.values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of super.values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of super.values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        super.forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else if (typeof options === \"string\") {\n            Object.defineProperty(this, \"name\", {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: options,\n            });\n        }\n        else {\n            if (options.name) {\n                Object.defineProperty(this, \"name\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.name,\n                });\n            }\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","import { isPlainObject, omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    if (!(err instanceof Error) && err[\"name\"] && err[\"message\"]) { // Error-like\n        err = fromObject(err, Error);\n    }\n    const obj = {\n        \"@@type\": err.constructor.name,\n        ...omit(err, [\"toString\", \"toJSON\", \"__callSiteEvals\"]),\n    };\n    if (obj[\"@@type\"] === \"AggregateError\" && Array.isArray(obj[\"errors\"])) {\n        obj[\"errors\"] = obj[\"errors\"].map(item => {\n            return item instanceof Error ? toObject(item) : item;\n        });\n    }\n    return obj;\n}\nexport function fromObject(obj, ctor = undefined) {\n    var _a, _b;\n    // @ts-ignore\n    if (!(obj === null || obj === void 0 ? void 0 : obj.name)) {\n        return null;\n    }\n    // @ts-ignore\n    ctor || (ctor = (globalThis[obj[\"@@type\"] || obj.name] || globalThis[obj.name]));\n    if (!ctor) {\n        if (obj[\"@@type\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    let err;\n    if (ctor.name === \"DOMException\" && typeof DOMException === \"function\") {\n        err = new ctor((_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\", obj[\"name\"]);\n    }\n    else {\n        err = Object.create(ctor.prototype, {\n            message: {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: (_b = obj[\"message\"]) !== null && _b !== void 0 ? _b : \"\",\n            },\n        });\n    }\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\n        \"@@type\",\n        \"name\",\n        \"message\",\n        \"stack\",\n        \"cause\"\n    ].includes(key));\n    otherKeys.forEach(key => {\n        var _a;\n        // @ts-ignore\n        (_a = err[key]) !== null && _a !== void 0 ? _a : (err[key] = obj[key]);\n    });\n    // @ts-ignore\n    if (isAggregateError(err) && Array.isArray(err[\"errors\"])) {\n        err[\"errors\"] = err[\"errors\"].map(item => {\n            return isPlainObject(item) ? fromObject(item) : item;\n        });\n    }\n    return err;\n}\n/** Creates an `ErrorEvent` instance based on the given error. */\nexport function toErrorEvent(err, type = \"error\") {\n    let filename = \"\";\n    let lineno = 0;\n    let colno = 0;\n    if (err.stack) {\n        const lines = err.stack.split(\"\\n\").map(line => line.trim());\n        let callSite = lines.find(line => line.startsWith(\"at \"));\n        if (callSite) {\n            callSite = callSite.slice(3);\n        }\n        else if (callSite = lines.find(line => line.includes(\"@\") && line.length > 1)) {\n            callSite = callSite.slice(callSite.indexOf(\"@\") + 1);\n        }\n        if (callSite) {\n            let start = callSite.lastIndexOf(\"(\");\n            let end = 0;\n            if (start !== -1) {\n                start += 1;\n                end = callSite.indexOf(\")\", start);\n                callSite = callSite.slice(start, end);\n            }\n            const matches = callSite.match(/:(\\d+):(\\d+)$/);\n            if (matches) {\n                filename = callSite.slice(0, matches.index);\n                lineno = parseInt(matches[1]);\n                colno = parseInt(matches[2]);\n            }\n        }\n    }\n    return new ErrorEvent(type, {\n        error: err,\n        message: err.message,\n        filename,\n        lineno,\n        colno,\n    });\n}\nconst isFirefoxOrSafari = typeof navigator === \"object\" && /Firefox|Safari/.test(navigator.userAgent);\n/** Creates an error instance based on the given `ErrorEvent` instance. */\nexport function fromErrorEvent(event) {\n    if (event.error instanceof Error) {\n        return event.error;\n    }\n    let err;\n    let shouldPatchStack = false;\n    if (event.error\n        && typeof event.error === \"object\"\n        && event.error[\"name\"]\n        && event.error[\"message\"]) { // Error-like\n        err = fromObject(event.error, Error);\n        shouldPatchStack = !err.stack;\n    }\n    else if (event.message) {\n        err = new Error(event.message);\n        shouldPatchStack = true;\n    }\n    else {\n        return null;\n    }\n    if (shouldPatchStack) {\n        let stack = \"\";\n        if (event.filename) {\n            if (isFirefoxOrSafari) {\n                stack = \"@\" + event.filename;\n            }\n            else {\n                stack = `Error: ${event.message}\\n    at ${event.filename}`;\n            }\n            if (event.lineno) {\n                stack += \":\" + event.lineno;\n            }\n            if (event.colno) {\n                stack += \":\" + event.colno;\n            }\n        }\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: stack,\n        });\n    }\n    return err;\n}\n/** @inner */\nexport function isDOMException(value) {\n    return ((typeof DOMException === \"function\") && (value instanceof DOMException))\n        || (value instanceof Error && value.constructor.name === \"DOMException\"); // Node.js v16-\n}\n/** @inner */\nexport function isAggregateError(value) {\n    // @ts-ignore\n    return (typeof AggregateError === \"function\" && value instanceof AggregateError)\n        || (value instanceof Error && value.constructor.name === \"AggregateError\");\n}\n//# sourceMappingURL=index.js.map","import { Exception, toErrorEvent, fromObject, toObject, fromErrorEvent } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.toErrorEvent = toErrorEvent;\nError.fromErrorEvent = fromErrorEvent;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","import { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nconst typeRegistry = new Map();\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    return as(data, type);\n}\nexport function as(data, type) {\n    if (data === null || data === undefined) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (data.type === \"Buffer\" && Array.isArray(data.data)) { // Node.js Buffer\n            if (typeof Buffer === \"function\" && type === Buffer) {\n                try {\n                    return Buffer.from(data.data);\n                }\n                catch (_d) {\n                    return null;\n                }\n            }\n            else if (typeof type.prototype[Symbol.iterator] === \"function\"\n                && typeof type[\"from\"] === \"function\") {\n                try {\n                    // Convert Node.js Buffer to TypedArray.\n                    return type.from(data.data);\n                }\n                catch (_e) {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        const keys = Object.getOwnPropertyNames(data);\n        const values = Object.values(data);\n        if (keys.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            values.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") {\n            // Assert the data is a TypedArray.\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            const err = fromObject(data);\n            if (err) {\n                // Support @JSON.type() decorator in Error constructors.\n                const typeRecords = typeRegistry.get(type.prototype);\n                if (typeRecords) {\n                    for (const key of Reflect.ownKeys(data)) {\n                        const ctor = typeRecords[key];\n                        if (ctor) {\n                            err[key] = as(data[key], ctor);\n                        }\n                    }\n                }\n            }\n            return err;\n        }\n        else {\n            const ins = Object.create(type.prototype);\n            const typeRecords = typeRegistry.get(type.prototype);\n            if (typeRecords) {\n                for (const key of Reflect.ownKeys(data)) {\n                    const ctor = typeRecords[key];\n                    ins[key] = ctor ? as(data[key], ctor) : data[key];\n                }\n            }\n            else {\n                Object.assign(ins, data);\n            }\n            return ins;\n        }\n    }\n    else {\n        return null;\n    }\n}\n/**\n * A decorator to instruct that the target property in the class is of a specific type.\n *\n * When parsing JSON via {@link parseAs}, this property is guaranteed to be of the given type.\n *\n * NOTE: this decorator only supports TypeScript's `experimentalDecorators`.\n *\n * @example\n * ```ts\n * class Example {\n *     \\@type(Date)\n *     date: Date;\n * }\n * ```\n */\nexport function type(ctor) {\n    return (proto, prop) => {\n        const record = typeRegistry.get(proto);\n        if (record) {\n            record[prop] = ctor;\n        }\n        else {\n            typeRegistry.set(proto, { [prop]: ctor });\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    // @ts-ignore\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @param {any} obj\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @param {any} obj\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @param {any} obj\n * @returns {obj is { [x: string | symbol]: any; next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n * @param {any} obj\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @param {any} obj\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @param {any} obj\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @param {any} obj\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * @param {any} obj \n */\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { as, parseAs, type } from \"./index.ts\";\nJSON.parseAs = parseAs;\nJSON.as = as;\nJSON.type = type;\n//# sourceMappingURL=augment.js.map","if (!Symbol.asyncIterator) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol(\"Symbol.asyncIterator\")\n    });\n}\nexport const source = Symbol(\"GeneratorSource\");\nexport const status = Symbol(\"GeneratorStatus\");\nexport const result = Symbol(\"GeneratorResult\");\nexport class Thenable {\n    constructor(_source) {\n        this[source] = _source;\n        this[status] = \"suspended\";\n        this[result] = void 0;\n    }\n    then(onfulfilled, onrejected) {\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve(this[result]);\n        }\n        else if (this[status] === \"erred\") {\n            res = Promise.reject(this[source]);\n        }\n        else if (typeof this[source].then === \"function\") {\n            res = Promise.resolve(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = processIterator(this[source]);\n        }\n        else {\n            res = Promise.resolve(this[source]);\n        }\n        this[status] = \"closed\";\n        return res\n            .then(value => (this[result] = value))\n            .then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return Promise.resolve(this).then(null, onrejected);\n    }\n}\nexport class ThenableGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = { value: void 0, done: true };\n        }\n        else if (this[status] === \"erred\") {\n            return this.throw(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = this[source].next(value);\n        }\n        else {\n            res = { value: this[source], done: true };\n        }\n        if (res.done === true) {\n            this[status] = \"closed\";\n            this[result] = res.value;\n        }\n        return res;\n    }\n    return(value) {\n        this[status] = \"closed\";\n        this[result] = value;\n        if (this[source] && typeof this[source].return === \"function\") {\n            return this[source].return(value);\n        }\n        else {\n            return { value, done: true };\n        }\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return this[source].throw(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    ;\n}\nexport class ThenableAsyncGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve({ value: void 0, done: true });\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = Promise.resolve(this[source].next(value));\n        }\n        else {\n            res = Promise.resolve(this[source]).then(value => {\n                return { value, done: true };\n            });\n        }\n        return res.then(res => {\n            if (res.done === true) {\n                this[status] = \"closed\";\n                this[result] = res.value;\n            }\n            return res;\n        });\n    }\n    return(value) {\n        this[status] = \"closed\";\n        // The input value may be a promise-like object, using Promise.resolve()\n        // to guarantee the value is resolved.\n        return Promise.resolve(value).then(value => {\n            this[result] = value;\n            if (this[source] && typeof this[source].return === \"function\") {\n                return Promise.resolve(this[source].return(value));\n            }\n            else {\n                return Promise.resolve({ value, done: true });\n            }\n        });\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return Promise.resolve(this[source].throw(err));\n        }\n        else {\n            return Promise.reject(err);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport const ThenableGeneratorFunction = (function (fn) {\n    if (!(this instanceof ThenableGeneratorFunction)) {\n        return new ThenableGeneratorFunction(fn);\n    }\n    function anonymous(...args) {\n        try {\n            const source = fn.apply(this, args);\n            if (typeof source.then === \"function\" || isAsyncGenerator(source)) {\n                return new ThenableAsyncGenerator(source);\n            }\n            else {\n                return new ThenableGenerator(source);\n            }\n        }\n        catch (err) {\n            return Object.assign(new ThenableGenerator(err), {\n                [status]: \"erred\"\n            });\n        }\n    }\n    // HACK, let the returning function be an instance of\n    // ThenableGeneratorFunction.\n    anonymous.prototype = ThenableGeneratorFunction;\n    anonymous.__proto__ = this;\n    return anonymous;\n});\nThenableGeneratorFunction.create = function create(fn) {\n    return new ThenableGeneratorFunction(fn);\n};\nObject.setPrototypeOf(ThenableGeneratorFunction, Function);\nObject.setPrototypeOf(ThenableGeneratorFunction.prototype, Function.prototype);\nexport const create = ThenableGeneratorFunction.create;\nexport default create;\nfunction isAsyncGenerator(obj) {\n    return obj !== null\n        && typeof obj === \"object\"\n        && typeof obj.next === \"function\"\n        && typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\"\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\nfunction processIterator(iterator) {\n    return new Promise((resolve, reject) => {\n        function fulfilled(value) {\n            try {\n                step(iterator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            var _a;\n            try {\n                step((_a = iterator.throw) === null || _a === void 0 ? void 0 : _a.call(iterator, value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(item) {\n            Promise.resolve(item).then(result => {\n                result.done ? resolve(result.value) : new Promise(resolve => {\n                    resolve(result.value);\n                }).then(fulfilled, rejected);\n            });\n        }\n        step(iterator.next());\n    });\n}\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (returns instanceof ThenableAsyncGenerator) {\n        // special case\n        returns = returns.then((value) => [null, value]);\n        return Promise.resolve(returns).catch((err) => [err, undefined]);\n    }\n    else if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns.then((value) => [null, value]);\n        return Promise.resolve(returns).catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\nexport function isFunction(val) {\n    return typeof val === \"function\";\n}\n//# sourceMappingURL=try.js.map","/**\n * Wraps a function inside another function and returns a new function that copies the original\n * function's name and other properties.\n *\n * @example\n * ```ts\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","const throttleCaches = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = Promise.resolve(returns).finally(() => {\n                    cache.result = { value: cache.pending };\n                    cache.pending = undefined;\n                    cache.expires = Date.now() + duration;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (!key) {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = throttleCaches.get(key);\n        if (!cache) {\n            cache = { for: key };\n            throttleCaches.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","var _a;\nimport { sequence } from \"./number/index.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst idGenerator = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nexport const id = Symbol.for(\"id\");\nexport class Channel {\n    constructor(capacity = 0) {\n        this[_a] = idGenerator.next().value;\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.error = null;\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a receiver is\n     *  available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed to the buffer.\n     *      - Otherwise, this function will block until there is new space for the data in the\n     *          buffer.\n     */\n    push(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block until new data is\n     * available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    pop() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = null;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no longer used, it\n     * will be automatically released by the GC. However, if the channel is used in a\n     * `for await...of...` loop, closing the channel will allow the loop to break automatically.\n     *\n     * Moreover, if the channel is used between parallel threads, it will no longer be able to\n     * release automatically, must explicitly call this function in order to release for GC.\n     */\n    close(err = null) {\n        if (this.state !== 1) {\n            // prevent duplicated call\n            return;\n        }\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [(_a = id, Symbol.asyncIterator)]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const queueSize = channel.producers.length;\n                const value = await channel.pop();\n                return {\n                    value: value,\n                    done: channel.state === 0 && !bufSize && !queueSize,\n                };\n            }\n        };\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Inspired by Golang, cerates a {@link Channel} that can be used to transfer data across routines.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a non-buffered channel,\n * the sender and receiver must be present at the same time (theoretically), otherwise, the\n * channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered channel, data will\n * be queued in the buffer first and then consumed by the receiver in FIFO order. Once the\n * buffer size reaches the capacity limit, no more data will be sent unless there is new space\n * available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to never block and\n * behave like a message queue.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will always be delivered,\n * even if there is no receiver at the moment.\n *\n * Also, unlike Golang, `await channel.pop()` does not prevent the program from exiting.\n *\n * Channels can be used to send and receive streaming data between main thread and worker threads\n * wrapped by `parallel()`, but once used that way, `channel.close()` must be explicitly called\n * in order to release the channel for garbage collection.\n *\n * @example\n * ```ts\n * // non-buffered\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.push(123);\n * })();\n *\n * const num = await channel.pop();\n * console.log(num); // 123\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * // buffered\n * const channel = chan<number>(3);\n *\n * await channel.push(123);\n * await channel.push(456);\n * await channel.push(789);\n *\n * const num1 = await channel.pop();\n * const num2 = await channel.pop();\n * const num3 = await channel.pop();\n *\n * console.log(num1); // 123\n * console.log(num2); // 456\n * console.log(num3); // 789\n * ```\n *\n * @example\n * ```ts\n * // iterable\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of Number.sequence(1, 5)) {\n *         await channel.push(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","import chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.push(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents concurrency\n * conflicts, it returns a {@link Queue} instance that we can push data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once reached, the push\n * operation will block until there is new space available. By default, this option is not set and\n * use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","var _a;\nimport { Channel, id } from \"./chan.ts\";\nexport const isDeno = typeof Deno === \"object\";\nexport const isBun = typeof Bun === \"object\";\nexport const isNode = !isDeno && !isBun && typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nexport const isBeforeNode14 = isNode && parseInt(process.version.slice(1)) < 14;\nexport const IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\n// In Node.js, `process.argv` contains `--worker-thread` when the current thread is used as\n// a worker.\nconst isNodeWorkerThread = isNode && process.argv.includes(\"--worker-thread\");\nexport const isMainThread = !isNodeWorkerThread\n    && (isBun ? Bun.isMainThread : typeof WorkerGlobalScope === \"undefined\");\nconst moduleCache = new Map();\nconst channelStore = new Map();\nexport async function resolveModule(modId, baseUrl = undefined) {\n    let module;\n    if (isNode || isBun) {\n        const { fileURLToPath } = await import(\"url\");\n        const path = baseUrl ? fileURLToPath(new URL(modId, baseUrl).href) : modId;\n        module = await import(path);\n    }\n    else {\n        const url = new URL(modId, baseUrl).href;\n        module = moduleCache.get(url);\n        if (!module) {\n            if (isDeno) {\n                module = await import(url);\n                moduleCache.set(url, module);\n            }\n            else {\n                try {\n                    module = await import(url);\n                    moduleCache.set(url, module);\n                }\n                catch (err) {\n                    if (String(err).includes(\"Failed\")) {\n                        // The content-type of the response isn't application/javascript, try to\n                        // download it and load it with object URL.\n                        const res = await fetch(url);\n                        const buf = await res.arrayBuffer();\n                        const blob = new Blob([new Uint8Array(buf)], {\n                            type: \"application/javascript\",\n                        });\n                        const _url = URL.createObjectURL(blob);\n                        module = await import(_url);\n                        moduleCache.set(url, module);\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n        }\n    }\n    if (typeof module[\"default\"] === \"object\" && typeof module[\"default\"].default !== \"undefined\") {\n        module = module[\"default\"]; // CommonJS module with exports.default\n    }\n    return module;\n}\nexport function isChannelMessage(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"push\", \"close\"].includes(msg.type)\n        && typeof msg.channelId === \"number\";\n}\nexport async function handleChannelMessage(msg) {\n    const record = channelStore.get(msg.channelId);\n    if (!record)\n        return;\n    if (msg.type === \"push\") {\n        await record.raw.push(msg.value);\n    }\n    else if (msg.type === \"close\") {\n        const { value: err, channelId } = msg;\n        record.raw.close(err);\n        channelStore.delete(channelId);\n        if (isMainThread && record.writers.length > 1) {\n            // distribute the channel close event to all threads\n            record.writers.forEach(write => {\n                write(\"close\", err, channelId);\n            });\n        }\n    }\n}\nfunction wireChannel(channel, channelWrite) {\n    const channelId = channel[id];\n    if (!channelStore.has(channelId)) {\n        const push = channel.push.bind(channel);\n        const close = channel.close.bind(channel);\n        channelStore.set(channelId, {\n            channel,\n            raw: { push, close },\n            writers: [channelWrite],\n            counter: 0,\n        });\n        Object.defineProperties(channel, {\n            push: {\n                configurable: true,\n                writable: true,\n                value: async (data) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        const channel = record.channel;\n                        if (channel[\"state\"] !== 1) {\n                            throw new Error(\"the channel is closed\");\n                        }\n                        const write = record.writers[record.counter++ % record.writers.length];\n                        await Promise.resolve(write(\"push\", data, channelId));\n                    }\n                },\n            },\n            close: {\n                configurable: true,\n                writable: true,\n                value: (err = null) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        channelStore.delete(channelId);\n                        const channel = record.channel;\n                        record.writers.forEach(write => {\n                            write(\"close\", err, channelId);\n                        });\n                        // recover to the original methods\n                        Object.defineProperties(channel, {\n                            push: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.push,\n                            },\n                            close: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.close,\n                            },\n                        });\n                        channel.close(err);\n                    }\n                },\n            },\n        });\n    }\n    else {\n        const record = channelStore.get(channelId);\n        record.writers.push(channelWrite);\n    }\n}\nexport function wrapChannel(channel, channelWrite) {\n    wireChannel(channel, channelWrite);\n    return { \"@@type\": \"Channel\", \"@@id\": channel[id], \"capacity\": channel.capacity };\n}\nexport function unwrapChannel(obj, channelWrite) {\n    var _a, _b;\n    const channelId = obj[\"@@id\"];\n    let channel = (_a = channelStore.get(channelId)) === null || _a === void 0 ? void 0 : _a.channel;\n    if (!channel) {\n        channel = Object.assign(Object.create(Channel.prototype), {\n            [id]: channelId,\n            capacity: (_b = obj.capacity) !== null && _b !== void 0 ? _b : 0,\n            buffer: [],\n            producers: [],\n            consumers: [],\n            error: null,\n            state: 1,\n        });\n    }\n    wireChannel(channel, channelWrite);\n    return channel;\n}\n//# sourceMappingURL=util.js.map","import { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport { sequence } from \"./number/index.ts\";\nimport { trim } from \"./string/index.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { Exception, fromErrorEvent, fromObject, isAggregateError, isDOMException, toObject } from \"./error/index.ts\";\nimport { isNode, isDeno, isBun, isBeforeNode14, IsPath, isMainThread, resolveModule, isChannelMessage, handleChannelMessage, wrapChannel } from \"./util.ts\";\nconst taskIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nconst remoteTasks = new Map;\nconst workerIdCounter = sequence(1, Number.MAX_SAFE_INTEGER, 1, true);\nlet workerPool = [];\nlet gcTimer;\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let start = str.lastIndexOf(\"(\");\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += 1;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if ((isNode || isBun) && IsPath.test(_id)) {\n        if (!/\\.[cm]?(js|ts|)x?$/.test(_id)) { // if omitted suffix, add suffix\n            _id += isBun ? \".ts\" : \".js\";\n        }\n        else if (isNode) { // replace .ts/.mts/.cts to .js/.mjs/.cjs in Node.js\n            if (_id.endsWith(\".ts\")) {\n                _id = _id.slice(0, -3) + \".js\";\n            }\n            else if (_id.endsWith(\".mts\")) {\n                _id = _id.slice(0, -4) + \".mjs\";\n            }\n            else if (_id.endsWith(\".cts\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".cjs\";\n            }\n            else if (_id.endsWith(\".tsx\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".js\";\n            }\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport function isCallResponse(msg) {\n    return msg && typeof msg === \"object\" && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nexport async function createWorker(options = {}) {\n    var _a;\n    let { adapter = \"worker_threads\" } = options;\n    let entry = parallel.workerEntry;\n    if (isNode || isBun) {\n        if (!entry) {\n            const path = await import(\"path\");\n            const { fileURLToPath } = await import(\"url\");\n            const _filename = fileURLToPath(import.meta.url);\n            if (_filename === process.argv[1]) {\n                // The code is bundled, try the worker entry in node_modules (hope it exists).\n                if (isBun) {\n                    entry = \"./node_modules/@ayonli/jsext/worker.ts\";\n                }\n                else {\n                    entry = \"./node_modules/@ayonli/jsext/bundle/worker-node.mjs\";\n                }\n            }\n            else {\n                let _dirname = path.dirname(_filename);\n                if ([\n                    path.join(\"jsext\", \"cjs\"),\n                    path.join(\"jsext\", \"esm\"),\n                    path.join(\"jsext\", \"bundle\")\n                ].some(path => _dirname.endsWith(path))) {\n                    // The application imports the compiled version of this module,\n                    // redirect to the root directory of this package.\n                    _dirname = path.dirname(_dirname);\n                }\n                if (isBun) {\n                    entry = path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    entry = path.join(_dirname, \"bundle\", \"worker-node.mjs\");\n                }\n            }\n        }\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isBeforeNode14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        if (isDeno) {\n            if (!entry) {\n                if (import.meta[\"main\"]) {\n                    // The code is bundled, try the remote worker entry.\n                    entry = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n                }\n                else {\n                    entry = [\n                        ...(import.meta.url.split(\"/\").slice(0, -1)),\n                        \"worker.ts\"\n                    ].join(\"/\");\n                    // The application imports the compiled version of this module,\n                    // redirect to the source worker entry.\n                    if (entry.endsWith(\"/esm/worker.ts\")) {\n                        entry = entry.slice(0, -14) + \"/worker.ts\";\n                    }\n                }\n            }\n        }\n        else {\n            // Use fetch to download the script and compose an object URL can bypass CORS\n            // security constraint in the browser.\n            const url = entry || \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            const res = await fetch(url);\n            let blob;\n            if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n                blob = await res.blob();\n            }\n            else {\n                const buf = await res.arrayBuffer();\n                blob = new Blob([new Uint8Array(buf)], {\n                    type: \"application/javascript\",\n                });\n            }\n            entry = URL.createObjectURL(blob);\n        }\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nasync function acquireWorker(taskId) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker()).worker;\n                const handleMessage = (msg) => {\n                    var _a, _b, _c, _d;\n                    if (isChannelMessage(msg)) {\n                        handleChannelMessage(msg);\n                    }\n                    else if (isCallResponse(msg) && msg.taskId) {\n                        const task = remoteTasks.get(msg.taskId);\n                        if (!task)\n                            return;\n                        if (msg.type === \"return\" || msg.type === \"error\") {\n                            if (msg.type === \"error\") {\n                                const err = isPlainObject(msg.error)\n                                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                                    : msg.error;\n                                if (err instanceof Error &&\n                                    (err.message.includes(\"not be cloned\")\n                                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                                    )) {\n                                    Object.defineProperty(err, \"stack\", {\n                                        configurable: true,\n                                        enumerable: false,\n                                        writable: true,\n                                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                            + `at ${task.fn} (${task.module})`,\n                                    });\n                                }\n                                if (task.resolver) {\n                                    task.resolver.reject(err);\n                                    if (task.channel) {\n                                        task.channel.close();\n                                    }\n                                }\n                                else if (task.channel) {\n                                    task.channel.close(err);\n                                }\n                                else {\n                                    task.error = err;\n                                }\n                            }\n                            else {\n                                const value = unwrapReturnValue(msg.value);\n                                if (task.resolver) {\n                                    task.resolver.resolve(value);\n                                }\n                                else {\n                                    task.result = { value };\n                                }\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            poolRecord.tasks.delete(msg.taskId);\n                            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                                // Allow the main thread to exit if the event loop is empty.\n                                worker.unref();\n                            }\n                        }\n                        else if (msg.type === \"yield\") {\n                            const value = unwrapReturnValue(msg.value);\n                            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.push({ value, done: msg.done });\n                            if (msg.done) {\n                                // The final message of yield event is the return value.\n                                handleMessage({\n                                    type: \"return\",\n                                    value,\n                                    taskId: msg.taskId,\n                                });\n                            }\n                        }\n                        else if (msg.type === \"gen\") {\n                            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n                        }\n                    }\n                };\n                const handleClose = (err) => {\n                    for (const taskId of poolRecord.tasks) {\n                        poolRecord.tasks.delete(taskId);\n                        const task = remoteTasks.get(taskId);\n                        if (task) {\n                            if (task.resolver) {\n                                task.resolver.reject(err);\n                                if (task.channel) {\n                                    task.channel.close();\n                                }\n                            }\n                            else if (task.channel) {\n                                task.channel.close(err);\n                            }\n                            else {\n                                task.error = err;\n                            }\n                        }\n                    }\n                    workerPool = workerPool.filter(item => item !== poolRecord);\n                };\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to the channel in the\n                            // worker thread when the thread is terminated. This situation often\n                            // occurs when using `run()` to call function and the `result()` is\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if ((arg instanceof Exception) || isDOMException(arg) || isAggregateError(arg)) {\n            return toObject(arg);\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n                else if ((value instanceof Exception)\n                    || isDOMException(value)\n                    || isAggregateError(value)) {\n                    arg[key] = toObject(value);\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            arg = arg.map(item => {\n                if (item instanceof ArrayBuffer) {\n                    transferable.push(item);\n                    return item;\n                }\n                else if ((item instanceof Exception)\n                    || isDOMException(item)\n                    || isAggregateError(item)) {\n                    return toObject(item);\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nexport function unwrapReturnValue(value) {\n    if (isPlainObject(value) && (value[\"@@type\"] === \"Exception\" ||\n        value[\"@@type\"] === \"DOMException\" ||\n        value[\"@@type\"] === \"AggregateError\")) {\n        return fromObject(value);\n    }\n    return value;\n}\nasync function safeRemoteCall(worker, req, transferable, taskId) {\n    try {\n        worker.postMessage(req, transferable);\n    }\n    catch (err) {\n        remoteTasks.delete(taskId);\n        if (typeof worker[\"unref\"] === \"function\") {\n            worker.unref();\n        }\n        throw err;\n    }\n}\nfunction createRemoteCall(module, fn, args) {\n    const taskId = taskIdCounter.next().value;\n    remoteTasks.set(taskId, { module, fn });\n    let getWorker = acquireWorker(taskId);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then(async (worker) => {\n        await safeRemoteCall(worker, {\n            type: \"call\",\n            module,\n            fn,\n            args: _args,\n            taskId,\n        }, transferable, taskId);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                remoteTasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                remoteTasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return getWorker.then(() => new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            remoteTasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            remoteTasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                })).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                remoteTasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                remoteTasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                const { args, transferable } = wrapArgs([input], getWorker);\n                await safeRemoteCall(worker, {\n                    type: \"next\",\n                    args: args,\n                    taskId,\n                }, transferable, taskId);\n                return await task.channel.pop();\n            }\n        },\n        async return(value) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            const { args, transferable } = wrapArgs([value], getWorker);\n            await safeRemoteCall(worker, {\n                type: \"return\",\n                args: args,\n                taskId,\n            }, transferable, taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            await safeRemoteCall(worker, {\n                type: \"throw\",\n                args: [err],\n                taskId,\n            }, transferable, taskId);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(module, fn, args) {\n    const getReturns = resolveModule(module).then(mod => {\n        return mod[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    const lines = stackTrace.split(\"\\n\");\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            if (IsPath.test(baseUrl)) {\n                baseUrl = \"file://\" + baseUrl;\n            }\n            else if (isDeno) {\n                baseUrl = \"file://\" + Deno.cwd() + \"/\";\n            }\n            else if (isNode || isBun) {\n                baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n            else if (typeof location === \"object\") {\n                baseUrl = location.href;\n            }\n            else {\n                baseUrl = \"\";\n            }\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module so its functions will be run in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS module,\n * **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * Data are cloned and transferred between threads via **Structured Clone Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel} can also be\n * used to transfer data between threads. To do so, just passed a channel instance to the threaded\n * function. But be aware, channel can only be used as a parameter, return a channel from the\n * threaded function is not allowed. Once passed, the data can only be transferred into and\n * out-from the function.\n *\n * The difference between using a channel and a generator function for streaming processing is, for\n * a generator function, `next(value)` is coupled with a `yield value`, the process is blocked\n * between **next** calls, channel doesn't have this limit, we can use it to stream all the data\n * into the function before processing and receiving any result.\n *\n * The threaded function also supports `ArrayBuffer`s as transferable objects. If an array buffer is\n * presented as an argument or the direct property of an argument (assume it's a plain object), or\n * the array buffer is the return value or the direct property of the return value (assume it's a\n * plain object), it automatically becomes a transferrable object and will be transferred to the\n * other thread instead of being cloned. This strategy allows us to easily compose objects like\n * `Request` and `Response` instances into plain objects and pass them between threads without\n * overhead.\n *\n * NOTE: if the current module is already in a worker thread, use this function won't create another\n * worker thread.\n *\n * NOTE: cloning and transferring data between the main thread and worker threads are very heavy\n * and slow, worker threads are only intended to run CPU-intensive tasks or divide tasks among\n * multiple threads, they have no advantage when performing IO-intensive tasks such as handling HTTP\n * requests, always prefer `cluster` module for that kind of purpose.\n *\n * NOTE: for error instances, only the following types are guaranteed to be sent and received properly\n * between threads.\n *\n * - `Error`\n * - `EvalError`\n * - `RangeError`\n * - `ReferenceError`\n * - `SyntaxError`\n * - `TypeError`\n * - `URIError`\n * - `AggregateError` (as arguments, return values, thrown values, or shallow object properties)\n * - `Exception` (as arguments, return values, thrown values, or shallow object properties)\n * - `DOMException` (as arguments, return values, thrown values, or shallow object properties)\n *\n * In order to handle errors properly between threads, throw well-known error types or use\n * `Exception` (or `DOMException`) with error names in the threaded function.\n *\n * @example\n * ```ts\n * // regular or async function\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * // generator or async generator function\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // use channel\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<{ value: number; done: boolean; }>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of Number.sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);      // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * console.log(await length); // 10\n * ```\n *\n * @example\n * ```ts\n * // use transferrable\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const arr = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n * const length = await mod.transfer(arr.buffer);\n *\n * console.log(length);     // 10\n * console.log(arr.length); // 0\n * ```\n *\n * NOTE: if the application is to be bundled, use the following syntax to link the module instead,\n * it will prevent the bundler from including the file and rewriting the path.\n *\n * ```ts\n * const mod = parallel<typeof import(\"./examples/worker.mjs\")>(\"./examples/worker.mjs\");\n * ```\n */\nfunction parallel(module) {\n    let modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    return new Proxy(Object.create(null), {\n        get: (target, prop) => {\n            if (Reflect.has(target, prop)) {\n                return target[prop];\n            }\n            else if (typeof prop === \"symbol\") {\n                return undefined;\n            }\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not set, the program\n     * by default uses CPU core numbers as the limit.\n     */\n    parallel.maxWorkers = undefined;\n    /**\n     * In browsers, by default, the program loads the worker entry directly from GitHub,\n     * which could be slow due to poor internet connection, we can copy the entry file\n     * `bundle/worker.mjs` to a local path of our website and set this option to that path\n     * so that it can be loaded locally.\n     *\n     * Or, if the code is bundled, the program won't be able to automatically locate the entry\n     * file in the file system, in such case, we can also copy the entry file\n     * (`bundle/worker.mjs` for Bun, Deno and the browser, `bundle/worker-node.mjs` for Node.js)\n     * to a local directory and supply this option instead.\n     */\n    parallel.workerEntry = undefined;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map","import chan from \"./chan.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { fromErrorEvent, fromObject } from \"./error/index.ts\";\nimport { handleChannelMessage, isChannelMessage, isNode, isBun, isDeno, IsPath } from \"./util.ts\";\nimport parallel, { getMaxParallelism, sanitizeModuleId, createWorker, isCallResponse, wrapArgs, unwrapReturnValue } from \"./parallel.ts\";\nconst workerPools = new Map();\nlet gcTimer;\n// The worker consumer queue is nothing but a callback list, once a worker is available, the runner\n// pop a consumer and run the callback, which will retry gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs the given `script` in a worker thread and abort the task at any time.\n *\n * This function is similar to {@link parallel}(), many features applicable to `parallel()` are\n * also applicable to `run()`, except the following:\n *\n * 1. The `script` can only be a filename, and is relative to the current working directory\n *     (or the current URL) if not absolute.\n * 2. Only one task is allow to run at a time for one worker thread, set {@link run.maxWorkers} to\n *     allow more tasks to be run at the same time if needed.\n * 3. By default, the worker thread is dropped after the task settles, set `keepAlive` option\n *     in order to reused it.\n *\n * @example\n * ```ts\n * // result\n * const job1 = await run(\"examples/worker.mjs\", [\"World\"]);\n * console.log(await job1.result()); // Hello, World\n * ```\n *\n * @example\n * ```ts\n * // iterate\n * const job2 = await run<string, [string[]]>(\"examples/worker.mjs\", [[\"foo\", \"bar\"]], {\n *     fn: \"sequence\",\n * });\n * for await (const word of job2.iterate()) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // abort\n * const job3 = await run<string, [string]>(\"examples/worker.mjs\", [\"foobar\"], {\n *    fn: \"takeTooLong\",\n * });\n * await job3.abort();\n * const [err, res] = await _try(job3.result());\n * console.assert(err === null);\n * console.assert(res === undefined);\n * ```\n */\nasync function run(script, args, options) {\n    var _a;\n    const maxWorkers = run.maxWorkers || parallel.maxWorkers || await getMaxParallelism;\n    const fn = (options === null || options === void 0 ? void 0 : options.fn) || \"default\";\n    let modId = sanitizeModuleId(script);\n    let baseUrl = undefined;\n    if (isDeno) {\n        baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode || isBun) {\n        if (IsPath.test(modId)) {\n            // Only set baseUrl for relative modules, don't set it for node modules.\n            baseUrl = \"file://\" + process.cwd() + \"/\";\n        }\n    }\n    else if (typeof location === \"object\") {\n        baseUrl = location.href;\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    const req = {\n        type: \"call\",\n        module: modId,\n        fn,\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    const adapter = (options === null || options === void 0 ? void 0 : options.adapter) || \"worker_threads\";\n    const workerPool = (_a = workerPools.get(adapter)) !== null && _a !== void 0 ? _a : workerPools.set(adapter, []).get(adapter);\n    let poolRecord = workerPool.find(item => !item.busy);\n    if (poolRecord) {\n        poolRecord.busy = true;\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        // Fill the worker pool regardless the current call should keep-alive or not,\n        // this will make sure that the total number of workers will not exceed the\n        // `run.maxWorkers`. If the the call doesn't keep-alive the worker, it will be\n        // cleaned after the call.\n        workerPool.push(poolRecord = {\n            getWorker: createWorker({ adapter }),\n            adapter,\n            busy: true,\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                workerPools.forEach((workerPool, adapter) => {\n                    // GC: clean long-time unused workers\n                    const now = Date.now();\n                    const idealItems = [];\n                    workerPools.set(adapter, workerPool.filter(item => {\n                        const ideal = !item.busy\n                            && (now - item.lastAccess) >= 10000;\n                        if (ideal) {\n                            idealItems.push(item);\n                        }\n                        return !ideal;\n                    }));\n                    idealItems.forEach(async (item) => {\n                        const { worker } = await item.getWorker;\n                        if (typeof worker[\"terminate\"] === \"function\") {\n                            await worker.terminate();\n                        }\n                        else {\n                            worker.kill();\n                        }\n                    });\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        // Put the current call in the consumer queue if there are no workers available,\n        // once an existing call finishes, the queue will pop the its head consumer and\n        // retry.\n        return new Promise((resolve) => {\n            workerConsumerQueue.push(resolve);\n        }).then(() => run(modId, args, options));\n    }\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(async () => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        error = err;\n        await terminate();\n        handleClose(err, true);\n    }, options.timeout) : null;\n    const handleMessage = async (msg) => {\n        var _a, _b;\n        if (isChannelMessage(msg)) {\n            await handleChannelMessage(msg);\n        }\n        else if (isCallResponse(msg)) {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"return\" || msg.type === \"error\") {\n                if (msg.type === \"error\") {\n                    const err = isPlainObject(msg.error)\n                        ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                        : msg.error;\n                    if (err instanceof Error &&\n                        (err.message.includes(\"not be cloned\")\n                            || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                            || err.message.includes(\"Do not know how to serialize\") // JSON error\n                        )) {\n                        Object.defineProperty(err, \"stack\", {\n                            configurable: true,\n                            enumerable: false,\n                            writable: true,\n                            value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                + `at ${fn} (${modId})`,\n                        });\n                    }\n                    error = err;\n                }\n                else {\n                    result = { value: unwrapReturnValue(msg.value) };\n                }\n                (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n                handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            }\n            else if (msg.type === \"yield\") {\n                const value = unwrapReturnValue(msg.value);\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({ type: \"return\", value });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.push(value);\n                }\n            }\n        }\n    };\n    const handleClose = (err, terminated = false) => {\n        var _a, _b, _c;\n        timeout && clearTimeout(timeout);\n        if (!terminated) {\n            // Release before resolve.\n            release === null || release === void 0 ? void 0 : release();\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to gain the worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        else if (poolRecord) {\n            // Clean the pool before resolve.\n            // The `workerPool` of this key in the pool map may have been modified by other\n            // routines, we need to retrieve the newest value.\n            const remainItems = (_b = workerPools.get(adapter)) === null || _b === void 0 ? void 0 : _b.filter(record => record !== poolRecord);\n            if (remainItems === null || remainItems === void 0 ? void 0 : remainItems.length) {\n                workerPools.set(adapter, remainItems);\n            }\n            else {\n                workerPools.delete(adapter);\n            }\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_c = workerConsumerQueue.shift()) === null || _c === void 0 ? void 0 : _c();\n            }\n        }\n        if (err) {\n            error !== null && error !== void 0 ? error : (error = err);\n        }\n        if (error) {\n            if (resolver) {\n                resolver.reject(error);\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (channel) {\n                if (error instanceof Error) {\n                    channel.close(error);\n                }\n                else if (typeof error === \"string\") {\n                    channel.close(new Error(error));\n                }\n                else {\n                    // @ts-ignore\n                    channel.close(new Error(\"unknown error\", { cause: error }));\n                }\n            }\n        }\n        else {\n            result !== null && result !== void 0 ? result : (result = { value: void 0 });\n            if (resolver) {\n                resolver.resolve(result.value);\n            }\n            if (channel) {\n                channel.close();\n            }\n        }\n    };\n    const safeRemoteCall = async (worker, req, transferable = []) => {\n        try {\n            if (typeof worker[\"postMessage\"] === \"function\") {\n                worker.postMessage(req, transferable);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    worker.send(req, err => err ? reject(err) : resolve());\n                });\n            }\n        }\n        catch (err) {\n            if (typeof worker[\"unref\"] === \"function\") {\n                worker.unref();\n            }\n            error = err;\n            (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n            handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            throw err;\n        }\n    };\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            workerId = record.workerId;\n            worker.ref(); // prevent premature exit in the main thread\n            worker.on(\"message\", handleMessage);\n            worker.once(\"exit\", (code, signal) => {\n                if (!error && !result) {\n                    handleClose(new Error(`worker exited (${code !== null && code !== void 0 ? code : signal})`), true);\n                }\n            });\n            release = () => {\n                worker.unref(); // allow the main thread to exit if the event loop is empty\n                // Remove the event listener so that later calls will not mess up.\n                worker.off(\"message\", handleMessage);\n                worker.removeAllListeners(\"exit\");\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (error) {\n                // The worker take too long to start and timeout error already thrown.\n                await terminate();\n                throw error;\n            }\n            const { args } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req);\n        }\n        else if (isNode) {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleErrorEvent = (err) => {\n                if (!error && !result) {\n                    handleClose(err, true); // In Node.js, worker will exit once erred.\n                }\n            };\n            workerId = record.workerId;\n            worker.ref();\n            worker.on(\"message\", handleMessage);\n            worker.once(\"error\", handleErrorEvent);\n            release = () => {\n                worker.unref();\n                worker.off(\"message\", handleMessage);\n                worker.off(\"error\", handleErrorEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n        else { // isBun\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleCloseEvent = ((ev) => {\n                if (!error && !result) {\n                    handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"), true);\n                }\n            });\n            workerId = record.workerId;\n            worker.ref();\n            worker.onmessage = (ev) => handleMessage(ev.data);\n            worker.onerror = () => void worker.terminate(); // terminate once erred\n            worker.addEventListener(\"close\", handleCloseEvent);\n            release = () => {\n                worker.unref();\n                worker.onmessage = null;\n                worker.onerror = null;\n                worker.removeEventListener(\"close\", handleCloseEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n    }\n    else {\n        const record = await poolRecord.getWorker;\n        const worker = record.worker;\n        workerId = record.workerId;\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => {\n            var _a;\n            if (!error && !result) {\n                worker.terminate(); // ensure termination\n                handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"), true);\n            }\n        };\n        release = () => {\n            worker.onmessage = null;\n            worker.onerror = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = () => Promise.resolve(worker.terminate());\n        if (error) {\n            await terminate();\n            throw error;\n        }\n        const { args, transferable } = wrapArgs(req.args, Promise.resolve(worker));\n        req.args = args;\n        await safeRemoteCall(worker, req, transferable);\n    }\n    return {\n        workerId,\n        async abort(reason = undefined) {\n            timeout && clearTimeout(timeout);\n            if (reason) {\n                error = reason;\n            }\n            else {\n                result = { value: void 0 };\n            }\n            await terminate();\n            handleClose(null, true);\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n(function (run) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not set, use the same\n     * setting as {@link parallel.maxWorkers}.\n     */\n    run.maxWorkers = undefined;\n})(run || (run = {}));\n// backward compatibility\nObject.defineProperties(run, {\n    workerEntry: {\n        set(v) {\n            parallel.workerEntry = v;\n        },\n        get() {\n            return parallel.workerEntry;\n        },\n    },\n});\nexport default run;\n//# sourceMappingURL=run.js.map","import wrap from \"./wrap.ts\";\nconst isBun = typeof Bun === \"object\";\nconst warnedRecord = new Map();\nexport default function deprecate(target, ...args) {\n    var _a, _b, _c, _d;\n    if (typeof target === \"function\") {\n        const tip = (_a = args[0]) !== null && _a !== void 0 ? _a : \"\";\n        const once = (_b = args[1]) !== null && _b !== void 0 ? _b : false;\n        return wrap(target, function wrapped(fn, ...args) {\n            emitWarning(fn.name + \"()\", wrapped, tip, once, isBun ? 1 : 2);\n            return fn.apply(this, args);\n        });\n    }\n    const forFn = args[0];\n    const tip = (_c = args[1]) !== null && _c !== void 0 ? _c : \"\";\n    const once = (_d = args[2]) !== null && _d !== void 0 ? _d : false;\n    return emitWarning(target, forFn, tip, once, 1);\n}\nfunction emitWarning(target, forFn, tip, once, lineNum) {\n    var _a;\n    if (!once || !warnedRecord.has(forFn)) {\n        const capture = {};\n        Error.captureStackTrace(capture, forFn);\n        let line = (_a = capture.stack.split(\"\\n\")[lineNum]) === null || _a === void 0 ? void 0 : _a.trim();\n        let warning = `${target} is deprecated`;\n        if (tip) {\n            warning += \", \" + tip;\n        }\n        if (line) {\n            let start = line.indexOf(\"(\");\n            if (start !== -1) {\n                start += 1;\n                const end = line.indexOf(\")\", start);\n                line = line.slice(start, end);\n            }\n            warning += \" (\" + line + \")\";\n        }\n        console.warn(\"DeprecationWarning:\", warning);\n        once && warnedRecord.set(forFn, true);\n    }\n}\n//# sourceMappingURL=deprecate.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport mixins, { isSubclassOf } from \"./mixins.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport run from \"./run.ts\";\nimport parallel from \"./parallel.ts\";\nimport example from \"./example.ts\";\nimport deprecate from \"./deprecate.ts\";\nexport { Channel, Queue };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    mixins,\n    isSubclassOf,\n    chan,\n    queue,\n    read,\n    readAll,\n    run,\n    parallel,\n    example,\n    deprecate,\n};\nexport { jsext as default, _try, func, wrap, throttle, mixins, isSubclassOf, chan, queue, read, readAll, run, parallel, example, deprecate, };\n//# sourceMappingURL=index.js.map","// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which can be used\n * to carry deferred jobs that will be run after the main function is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are called in the\n * LIFO order. Callbacks can be async functions if the main function is an async function or\n * an async generator function, and all the running procedures will be awaited.\n *\n * @example\n * ```ts\n * const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","import chan from \"./chan.ts\";\nimport { isFunction } from \"./try.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.push.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to make sure when\n            // it calls the close() function, the iterator is automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Inspired by Golang's **Example as Test** design, creates a function that carries example code\n * with `// output:` comments, when the returned function is called, it will automatically check if\n * the actual output matches the one declared in the comment.\n *\n * The example function receives a customized `console` object which will be used to log outputs\n * instead of using the built-in `console`.\n *\n * NOTE: this function is used to simplify the process of writing tests, it does not work in Bun and\n * browsers currently, because Bun hasn't implement the `Console` constructor and removes comments\n * during runtime, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => line.trim().toLowerCase() === \"// output:\");\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => line.trim().toLowerCase() === \"// output:\") !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk)).join(\"\\n\").replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => process.stdout.write(chunk, () => resolve()));\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","_trim","String","prototype","trim","_trimEnd","trimEnd","_trimStart","trimStart","str","chars","call","indexOf","substring","encoder","TextEncoder","random","min","max","floor","sequence","step","loop","id","hasOwn","obj","key","Object","hasOwnProperty","pick","keys","reduce","result","undefined","omit","keptKeys","Reflect","ownKeys","filter","includes","Error","forEach","isValid","value","is","NaN","Date","toString","isPlainObject","proto","getPrototypeOf","mergeIfNotExists","source","mergeSuper","props","prop","setProp","mergeHierarchy","mixin","_super","name","desc","getOwnPropertyDescriptor","defineProperty","isSubclassOf","ctor1","ctor2","remove","splice","rand","sum","values","compare","str1","str2","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","words","matches","map","flat","_words","_chunk","truncate","_truncate","byteLength","encode","Number","isFloat","isNaN","isFinite","isNumeric","strict","type","BigInt","_a","isBetween","first","last","_random","ele","another","_equals","_split","uniq","Set","shuffle","j","_shuffle","toShuffled","toReversed","reverse","toSorted","fn","sort","orderBy","order","items","a","b","isArray","_b","_orderBy","groupBy","Map","groups","item","list","get","set","_groupBy","keyBy","record","_keyBy","Uint8Array","copy","src","dest","subarray","concat","arrays","ele1","ele2","hasOwnMethod","method","patch","target","sources","as","TypeError","_type","primitiveMap","string","number","bigint","boolean","Boolean","symbol","Symbol","valueOf","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","test","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","has","deleteValue","delete","clear","CiMap","entries","callbackfn","thisArg","iterator","globalThis","Exception","message","options","code","configurable","enumerable","writable","cause","toObject","err","fromObject","DOMException","create","isAggregateError","isFirefoxOrSafari","navigator","userAgent","fromErrorEvent","event","error","shouldPatchStack","stack","filename","lineno","colno","isDOMException","AggregateError","toErrorEvent","lines","line","callSite","find","startsWith","start","lastIndexOf","end","index","parseInt","ErrorEvent","toJSON","typeRegistry","data","fromJSON","date","_c","Buffer","_d","_e","getOwnPropertyNames","every","typeRecords","ins","assign","_f","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","JSON","parseAs","text","parse","Thenable","_source","then","onfulfilled","onrejected","res","fulfilled","e","rejected","done","ThenableGenerator","args","ThenableAsyncGenerator","ThenableGeneratorFunction","anonymous","apply","__proto__","isFunction","val","wrap","wrapper","wrapped","bind","setPrototypeOf","Function","throttleCaches","dispose","idGenerator","MAX_SAFE_INTEGER","for","Channel","capacity","buffer","producers","consumers","state","RangeError","consume","shift","_data","pop","produce","close","channel","bufSize","queueSize","chan","Queue","handler","bufferSize","errorHandler","catch","onError","isDeno","Deno","isBun","Bun","isNode","process","versions","node","isBeforeNode14","version","IsPath","isMainThread","argv","WorkerGlobalScope","moduleCache","channelStore","isChannelMessage","msg","channelId","handleChannelMessage","raw","writers","write","wrapChannel","channelWrite","counter","defineProperties","wireChannel","taskIdCounter","remoteTasks","workerIdCounter","gcTimer","workerPool","getMaxParallelism","os","import","availableParallelism","cpus","hardwareConcurrency","sanitizeModuleId","_id","endsWith","isCallResponse","createWorker","adapter","entry","parallel","workerEntry","path","fileURLToPath","_filename","document","location","require","pathToFileURL","__filename","href","_documentCurrentScript","URL","baseURI","_dirname","dirname","join","some","fork","worker","stdio","serialization","workerId","pid","once","off","kind","Worker","threadId","onerror","ev","addEventListener","url","fetch","blob","headers","buf","arrayBuffer","Blob","createObjectURL","wrapArgs","getWorker","transferable","arg","postMessage","send","ArrayBuffer","unwrapReturnValue","safeRemoteCall","req","taskId","unref","createRemoteCall","module","maxWorkers","poolRecord","tasks","lastAccess","now","handleMessage","task","resolver","generate","handleClose","on","_worker","onmessage","terminate","setInterval","idealItems","ideal","unrefTimer","add","ref","acquireWorker","_args","input","Infinity","createLocalCall","getReturns","modId","baseUrl","_url","default","resolveModule","mod","gen","extractBaseUrl","stackTrace","cwd","captureStackTrace","trace","Proxy","parallel$1","workerPools","workerConsumerQueue","run","script","busy","kill","release","clearTimeout","keepAlive","terminated","remainItems","signal","removeAllListeners","handleErrorEvent","handleCloseEvent","removeEventListener","abort","iterate","v","run$1","warnedRecord","emitWarning","forFn","tip","lineNum","capture","warning","console","warn","AsyncFunction","AsyncGeneratorFunction","jsext","try","_try","returns","func","callbacks","defer","cb","throttle","duration","noWait","handleCall","cache","pending","expires","finally","mixins","base","queue","read","eventMap","handleBrowserErrorEvent","msgDesc","errDesc","closeDesc","cleanup","es","eventName","msgListener","_close","ws","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","readAll","example","findIndex","expected","_expected","assert","Writable","Console","logs","decoder","TextDecoder","stdout","callback","_console","actual","decode","ok","suppress","handleResult","deprecate"],"mappings":"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"}