{"version":3,"file":"index.js","sources":["../array/base.ts","../string/index.ts","../number/index.ts","../object/index.ts","../class.ts","../array/index.ts","../math/index.ts","../string/augment.ts","../number/augment.ts","../array/augment.ts","../uint8array/augment.ts","../uint8array/index.ts","../object/augment.ts","../math/augment.ts","../promise/augment.ts","../promise/index.ts","../collections/BiMap.ts","../collections/CiMap.ts","../collections/augment.ts","../error/Exception.ts","../error/index.ts","../error/augment.ts","../json/index.ts","../external/check-iterable/index.mjs","../json/augment.ts","../external/thenable-generator/index.ts","../util.ts","../try.ts","../wrap.ts","../throttle.ts","../debounce.ts","../parallel/constants.ts","../chan.ts","../queue.ts","../lock.ts","../parallel/utils/module.ts","../parallel/utils/channel.ts","../path/util.ts","../path/index.ts","../parallel/utils/threads.ts","../parallel.ts","../run.ts","../deprecate.ts","../index.ts","../func.ts","../read.ts","../example.ts","../augment.ts"],"sourcesContent":["/** Counts the occurrence of the element in the array-like object. */\nexport function count(arr, item) {\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === item) {\n            count++;\n        }\n    }\n    return count;\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array-like object.\n */\nexport function equals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Breaks the array-like object into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    const chunks = [];\n    const limit = arr.length;\n    let offset = 0;\n    for (let i = 0; i < limit; i++) {\n        if (arr[i] === delimiter) {\n            chunks.push(arr.slice(offset, i));\n            offset = i + 1;\n        }\n    }\n    if (offset < limit) {\n        chunks.push(arr.slice(offset, limit));\n    }\n    else if (offset === limit) {\n        const ctor = arr.constructor;\n        if (typeof ctor.from === \"function\") {\n            chunks.push(ctor.from([]));\n        }\n        else {\n            chunks.push(new ctor([]));\n        }\n    }\n    return chunks;\n}\n/** Breaks the array-like object into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    const limit = arr.length;\n    const size = Math.ceil(limit / length);\n    const chunks = new Array(size);\n    let offset = 0;\n    let idx = 0;\n    while (offset < limit) {\n        chunks[idx] = arr.slice(offset, offset + length);\n        offset += length;\n        idx++;\n    }\n    return chunks;\n}\n//# sourceMappingURL=base.js.map","/**\n * Functions for dealing with strings.\n * @module\n */\nimport { chunk as _chunk } from \"../array/base.ts\";\nconst encoder = new TextEncoder();\nconst _chars = chars;\n/**\n * Compares two strings, returns `-1` if `a < b`, `0` if `a === b` and `1` if `a > b`.\n */\nexport function compare(str1, str2) {\n    if (str1 < str2) {\n        return -1;\n    }\n    else if (str1 > str2) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\n/**\n * Returns a random string restricted by `length` (character-wise).\n *\n * @param chars Default value: `0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ`.\n */\nexport function random(length, chars = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") {\n    const arr = _chars(chars);\n    let str = \"\";\n    while (0 < length--) {\n        const i = Math.floor(Math.random() * arr.length);\n        str += arr[i];\n    }\n    return str;\n}\n/** Counts the occurrence of the sub-string in the string. */\nexport function count(str, sub) {\n    if (!sub) {\n        return str.length + 1;\n    }\n    else if (!str) {\n        return 0;\n    }\n    return str.split(sub).length - 1;\n}\n/**\n * Capitalizes the string, if `all` is true, all words are capitalized, otherwise only\n * the first word will be capitalized.\n */\nexport function capitalize(str, all) {\n    const regex = all ? /\\w+/g : /\\w+/;\n    return str.replace(regex, (match) => {\n        return match[0].toUpperCase() + match.slice(1).toLowerCase();\n    });\n}\n/** Replaces the spaces between non-empty characters of the string with hyphens (`-`). */\nexport function hyphenate(str) {\n    return str.replace(/(\\S)\\s+(\\S)/g, (_, $1, $2) => $1 + \"-\" + $2);\n}\n/** Returns the bytes of the given string. */\nexport function bytes(str) {\n    return encoder.encode(str);\n}\n/** Returns the characters of the string (emojis are supported). */\nexport function chars(str) {\n    if (typeof (Intl === null || Intl === void 0 ? void 0 : Intl.Segmenter) === \"function\") {\n        return Array.from(new Intl.Segmenter().segment(str))\n            .map((x) => x.segment);\n    }\n    else {\n        return Array.from(str);\n    }\n}\n/** Extracts words (in latin characters) from the string. */\nexport function words(str) {\n    const matches = str.match(/\\w+/g);\n    return matches ? [...matches].map(sub => sub.split(\"_\")).flat() : [];\n}\n/** Splits the string into lines by `\\n` or `\\r\\n`. */\nexport function lines(str) {\n    return str.split(/\\r?\\n/);\n}\n/** Breaks the string into smaller chunks according to the given length. */\nexport function chunk(str, length) {\n    return _chunk(str, length);\n}\n/** Truncates the string to the given length (including the ending `...`). */\nexport function truncate(str, length) {\n    if (length <= 0) {\n        return \"\";\n    }\n    else if (length >= str.length) {\n        return str;\n    }\n    else {\n        length -= 3;\n        return str.slice(0, length) + \"...\";\n    }\n}\nconst _trim = String.prototype.trim;\nconst _trimEnd = String.prototype.trimEnd;\nconst _trimStart = String.prototype.trimStart;\n/** Removes leading and trailing spaces or custom characters of the string. */\nexport function trim(str, chars = \"\") {\n    if (!chars) {\n        return _trim.call(str);\n    }\n    else {\n        return trimEnd(trimStart(str, chars), chars);\n    }\n}\n/** Removes trailing spaces or custom characters of the string. */\nexport function trimEnd(str, chars = \"\") {\n    if (!chars) {\n        return _trimEnd.call(str);\n    }\n    else {\n        let i = str.length;\n        while (i-- && chars.indexOf(str[i]) !== -1) { }\n        return str.substring(0, i + 1);\n    }\n}\n/** Removes leading spaces or custom characters of the string. */\nexport function trimStart(str, chars = \"\") {\n    if (!chars) {\n        return _trimStart.call(str);\n    }\n    else {\n        let i = 0;\n        do { } while (chars.indexOf(str[i]) !== -1 && ++i);\n        return str.substring(i);\n    }\n}\n/** Removes the given suffix of the string if present. */\nexport function stripEnd(str, suffix) {\n    if (str.endsWith(suffix)) {\n        return str.slice(0, -suffix.length);\n    }\n    return str;\n}\n/** Removes the given prefix of the string if present. */\nexport function stripStart(str, prefix) {\n    if (str.startsWith(prefix)) {\n        return str.slice(prefix.length);\n    }\n    return str;\n}\n/** Returns the byte length of the string. */\nexport function byteLength(str) {\n    return bytes(str).byteLength;\n}\n/** Checks if all characters in this string are within the ASCII range. */\nexport function isAscii(str, printableOnly = false) {\n    return printableOnly ? /^[-~]+$/.test(str) : /^[\\x00-\\x7E]+$/.test(str);\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for dealing with numbers.\n * @module\n */\n/** Returns `true` if the given value is a float number, `false` otherwise. */\nexport function isFloat(value) {\n    return typeof value === \"number\"\n        && !Number.isNaN(value)\n        && (!Number.isFinite(value) || value % 1 !== 0);\n}\n/**\n * Returns `true` if the given value is a numeric value, `false` otherwise. A numeric value is a\n * number, a bigint, or a string that can be converted to a number or bigint.\n *\n * @remarks `NaN` is not considered numeric.\n *\n * @param strict Only returns `true` when the value is of type `number`.\n */\nexport function isNumeric(value, strict = false) {\n    const type = typeof value;\n    if (strict) {\n        return type === \"number\" && !Number.isNaN(value);\n    }\n    else if (type === \"bigint\") {\n        return true;\n    }\n    else if (type === \"number\") {\n        return !Number.isNaN(value);\n    }\n    else if (type === \"string\" && value) {\n        try {\n            BigInt(value);\n            return true;\n        }\n        catch (_a) {\n            return !Number.isNaN(Number(value));\n        }\n    }\n    return false;\n}\n/** Return `true` if a number is between the given range (inclusive). */\nexport function isBetween(value, [min, max]) {\n    return value >= min && value <= max;\n}\n/** Returns a random integer ranged from `min` to `max` (inclusive). */\nexport function random(min, max) {\n    return min + Math.floor(Math.random() * (max - min + 1));\n}\n/** Generates a sequence of numbers from `min` to `max` (inclusive). */\nexport function range(min, max, step = 1) {\n    return sequence(min, max, step);\n}\n/**\n * Creates a generator that produces sequential numbers from `1` to\n * `Number.MAX_SAFE_INTEGER`, useful for generating unique IDs.\n *\n * @param loop Repeat the sequence when the end is reached.\n */\nexport function serial(loop = false) {\n    return sequence(1, Number.MAX_SAFE_INTEGER, 1, loop);\n}\n/**\n * Creates a generator that produces sequential numbers from `min` to `max` (inclusive).\n * @deprecated use {@link range} and {@link serial} instead.\n */\nexport function* sequence(min, max, step = 1, loop = false) {\n    let id = min;\n    while (true) {\n        yield id;\n        if ((id += step) > max) {\n            if (loop) {\n                id = min;\n            }\n            else {\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for dealing with objects.\n * @module\n */\nimport { isClass } from \"../class.ts\";\n/**\n * Returns `true` if the specified object has the indicated property as its own property.\n * If the property is inherited, or does not exist, the function returns `false`.\n */\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Returns `true` if the specified object has the indicated method as its own method (in its own\n * prototype). If the method is inherited, or is not in the prototype, or does not exist, this\n * function returns `false`.\n */\nexport function hasOwnMethod(obj, method) {\n    var _a;\n    const proto = Object.getPrototypeOf(obj);\n    if (!proto || !hasOwn(proto, method)) {\n        return false;\n    }\n    return typeof ((_a = Object.getOwnPropertyDescriptor(proto, method)) === null || _a === void 0 ? void 0 : _a.value) === \"function\";\n}\nexport function patch(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Reflect.ownKeys(source)) {\n            if (!hasOwn(target, key) || target[key] === undefined) {\n                target[key] = source[key];\n            }\n        }\n    }\n    return target;\n}\nexport function pick(obj, keys) {\n    return keys.reduce((result, key) => {\n        if (key in obj && obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\nexport function omit(obj, keys) {\n    const allKeys = Reflect.ownKeys(obj);\n    const keptKeys = allKeys.filter(key => !keys.includes(key));\n    const result = pick(obj, keptKeys);\n    // special treatment for Error types\n    if (obj instanceof Error) {\n        [\"name\", \"message\", \"stack\", \"cause\"].forEach(key => {\n            if (!keys.includes(key) &&\n                obj[key] !== undefined &&\n                !hasOwn(result, key)) {\n                result[key] = obj[key];\n            }\n        });\n    }\n    return result;\n}\nexport function as(value, type) {\n    if (typeof type !== \"function\") {\n        throw new TypeError(\"type must be a valid constructor\");\n    }\n    let _type;\n    const primitiveMap = {\n        \"string\": String,\n        \"number\": Number,\n        \"bigint\": BigInt,\n        \"boolean\": Boolean,\n        \"symbol\": Symbol\n    };\n    if (value instanceof type) {\n        if ([String, Number, Boolean].includes(type)) {\n            return value.valueOf(); // make sure the primitives are returned.\n        }\n        else {\n            return value;\n        }\n    }\n    else if ((_type = typeof value) && primitiveMap[_type] === type) {\n        return value;\n    }\n    return null;\n}\n/**\n * Returns a string representation or the constructor of the value's type.\n *\n * @remarks This function returns `\"class\"` for ES6 classes.\n * @remarks This function returns `\"null\"` for `null`.\n * @remarks This function returns `Object` for `Object.create(null)`.\n */\nexport function typeOf(value) {\n    var _a, _b;\n    if (value === undefined) {\n        return \"undefined\";\n    }\n    else if (value === null) {\n        return \"null\";\n    }\n    const type = typeof value;\n    if (type === \"function\") {\n        return isClass(value) ? \"class\" : \"function\";\n    }\n    else if (type === \"object\") {\n        return (_b = (_a = Object.getPrototypeOf(value)) === null || _a === void 0 ? void 0 : _a.constructor) !== null && _b !== void 0 ? _b : Object;\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Returns `true` if the given value is valid. The following values are considered invalid:\n *\n * - `undefined`\n * - `null`\n * - `NaN`\n * - `Invalid Date`\n */\nexport function isValid(value) {\n    return value !== undefined\n        && value !== null\n        && !Object.is(value, NaN)\n        && !(value instanceof Date && value.toString() === \"Invalid Date\");\n}\n/**\n * Returns `true` is the given value is a plain object, that is, an object created by\n * the `Object` constructor or one with a `[[Prototype]]` of `null`.\n */\nexport function isPlainObject(value) {\n    if (typeof value !== \"object\" || value === null)\n        return false;\n    const proto = Object.getPrototypeOf(value);\n    return proto === null || proto.constructor === Object;\n}\n/**\n * Creates an object base on the original object but without any invalid values\n * (except for `null`), and trims the value if it's a string.\n *\n * @remarks This function only operates on plain objects and arrays.\n */\nexport function sanitize(obj, deep = false, options = {}) {\n    const { removeNulls, removeEmptyStrings, removeEmptyObjects, removeArrayItems } = options;\n    return (function process(target, depth) {\n        if (typeof target === \"string\") {\n            return target.trim();\n        }\n        else if (Array.isArray(target)) {\n            const arr = !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n            if (removeArrayItems) {\n                return arr.filter(value => {\n                    if (value === null) {\n                        return !removeNulls;\n                    }\n                    else if (value === \"\") {\n                        return !removeEmptyStrings;\n                    }\n                    else if (isValid(value)) {\n                        if (typeof value !== \"object\") {\n                            return true;\n                        }\n                        else if (Array.isArray(value)) {\n                            return value.length > 0 || !removeEmptyObjects;\n                        }\n                        else if (isPlainObject(value)) {\n                            return Reflect.ownKeys(value).length > 0 || !removeEmptyObjects;\n                        }\n                        else {\n                            return true;\n                        }\n                    }\n                    else {\n                        return false;\n                    }\n                });\n            }\n            else {\n                return arr;\n            }\n        }\n        else if (isPlainObject(target)) {\n            return !depth || deep ? Reflect.ownKeys(target).reduce((result, key) => {\n                const value = process(target[key], depth + 1);\n                if (value === null) {\n                    if (!removeNulls) {\n                        result[key] = value;\n                    }\n                }\n                else if (value === \"\") {\n                    if (!removeEmptyStrings) {\n                        result[key] = value;\n                    }\n                }\n                else if (isValid(value)) {\n                    if (typeof value !== \"object\") {\n                        result[key] = value;\n                    }\n                    else if (Array.isArray(value)) {\n                        if (value.length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else if (isPlainObject(value)) {\n                        if (Reflect.ownKeys(value).length > 0 || !removeEmptyObjects) {\n                            result[key] = value;\n                        }\n                    }\n                    else {\n                        result[key] = value;\n                    }\n                }\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Creates an object with sorted keys (in ascending order) of the original object.\n *\n * @remarks Symbol keys are not sorted and remain their original order.\n * @remarks This function only operates on plain objects and arrays.\n */\nexport function sortKeys(obj, deep = false) {\n    return (function process(target, depth) {\n        if (isPlainObject(target)) {\n            return !depth || deep ? [\n                ...Object.getOwnPropertyNames(target).sort(),\n                ...Object.getOwnPropertySymbols(target)\n            ].reduce((result, key) => {\n                result[key] = process(target[key], depth + 1);\n                return result;\n            }, target.constructor ? {} : Object.create(null)) : target;\n        }\n        else if (Array.isArray(target)) {\n            return !depth || deep ? target.map(item => process(item, depth + 1)) : target;\n        }\n        else {\n            return target;\n        }\n    })(obj, 0);\n}\n/**\n * Create an object with flatted keys of the original object, the children\n * nodes' properties will be transformed to a string-represented path.\n *\n * @remarks This function only operates on plain objects and arrays.\n *\n * @param depth Default value: `1`.\n * @example\n * ```ts\n * const obj = flatKeys({ foo: { bar: \"hello\", baz: \"world\" } });\n * console.log(obj);\n * // { \"foo.bar\": \"hello\", \"foo.baz\": \"world\" }\n * ```\n */\nexport function flatKeys(obj, depth = 1, options = {}) {\n    var _a;\n    const maxDepth = depth;\n    const carrier = obj.constructor ? {} : Object.create(null);\n    const flatArrayIndices = (_a = options === null || options === void 0 ? void 0 : options.flatArrayIndices) !== null && _a !== void 0 ? _a : false;\n    if (!isPlainObject(obj) && (!Array.isArray(obj) || !flatArrayIndices)) {\n        return obj;\n    }\n    (function process(target, path, depth) {\n        if (depth === maxDepth) {\n            carrier[path] = target;\n        }\n        else if (Array.isArray(target) && depth) {\n            if (!flatArrayIndices) {\n                carrier[path] = target;\n            }\n            else {\n                target.forEach((value, i) => {\n                    process(value, path ? `${path}.${i}` : String(i), path ? depth + 1 : depth);\n                });\n            }\n        }\n        else if (isPlainObject(target) || (Array.isArray(target) && !depth)) {\n            Reflect.ownKeys(target).forEach(key => {\n                const value = target[key];\n                if (typeof key === \"symbol\") {\n                    if (depth === 0) { // only allow top-level symbol properties\n                        carrier[key] = value;\n                    }\n                }\n                else {\n                    process(value, path ? `${path}.${key}` : key, path ? depth + 1 : depth);\n                }\n            });\n        }\n        else {\n            carrier[path] = target;\n        }\n    })(obj, \"\", 0);\n    return carrier;\n}\n//# sourceMappingURL=index.js.map","/**\n * This module includes functions for dealing with classes.\n * @module\n */\nimport { hasOwn } from \"./object/index.ts\";\n/**\n * Checks if a value is a class/constructor.\n *\n * @example\n * ```ts\n * import { isClass } from \"@ayonli/jsext/class\";\n *\n * console.assert(isClass(class Foo { }));\n * console.assert(!isClass(function foo() { }));\n * ```\n */\nexport function isClass(value) {\n    if (typeof value !== \"function\")\n        return false;\n    if ([String, Number, Boolean, BigInt, Symbol].includes(value)) {\n        return false;\n    }\n    // async function or arrow function\n    if (value.prototype === undefined)\n        return false;\n    // generator function or malformed inheritance\n    if (value.prototype.constructor !== value)\n        return false;\n    const str = value.toString();\n    // ES6 class\n    if (str.slice(0, 5) === \"class\")\n        return true;\n    const name0 = value.name[0];\n    if (name0 && name0 >= \"A\" && name0 <= \"Z\" && str.includes(\"[native code]\"))\n        return true;\n    return false;\n}\n/**\n * Checks if a class is a subclass of another class.\n *\n * @example\n * ```ts\n * import { isSubclassOf } from \"@ayonli/jsext/class\";\n *\n * class Moment extends Date {}\n *\n * console.assert(isSubclassOf(Moment, Date));\n * console.assert(isSubclassOf(Moment, Object)); // all classes are subclasses of Object\n * ```\n */\nexport function isSubclassOf(ctor1, ctor2) {\n    return typeof ctor1 === \"function\"\n        && typeof ctor2 === \"function\"\n        && ctor1.prototype instanceof ctor2;\n}\n/**\n * Merges properties and methods only if they're missing in the class.\n */\nfunction mergeIfNotExists(proto, source, mergeSuper = false) {\n    const props = Reflect.ownKeys(source);\n    for (const prop of props) {\n        if (prop === \"constructor\") {\n            continue;\n        }\n        else if (mergeSuper) {\n            // When merging properties from super classes, the properties in the\n            // base class has the first priority and shall not be overwrite.\n            if (!(prop in proto)) {\n                setProp(proto, source, prop);\n            }\n        }\n        else if (!hasOwn(proto, prop)) {\n            setProp(proto, source, prop);\n        }\n    }\n    return proto;\n}\n/**\n * Merges properties and methods across the prototype chain.\n */\nfunction mergeHierarchy(ctor, mixin, mergeSuper = false) {\n    mergeIfNotExists(ctor.prototype, mixin.prototype, mergeSuper);\n    const _super = Object.getPrototypeOf(mixin);\n    // Every user defined class or functions that can be instantiated have their\n    // own names, if no name appears, that means the function has traveled to \n    // the root of the hierarchical tree.\n    if (_super.name) {\n        mergeHierarchy(ctor, _super, true);\n    }\n}\n/**\n * Sets property for prototype based on the given source and prop name properly.\n */\nfunction setProp(proto, source, prop) {\n    const desc = Object.getOwnPropertyDescriptor(source, prop);\n    if (desc) {\n        Object.defineProperty(proto, prop, desc);\n    }\n    else {\n        proto[prop] = source[prop];\n    }\n}\nexport function mixin(base, ...mixins) {\n    const obj = { ctor: null };\n    obj.ctor = class extends base {\n    }; // make sure this class has no name\n    for (const mixin of mixins) {\n        if (typeof mixin === \"function\") {\n            mergeHierarchy(obj.ctor, mixin);\n        }\n        else if (mixin && typeof mixin === \"object\") {\n            mergeIfNotExists(obj.ctor.prototype, mixin);\n        }\n        else {\n            throw new TypeError(\"mixin must be a constructor or an object\");\n        }\n    }\n    return obj.ctor;\n}\n//# sourceMappingURL=class.js.map","/**\n * Functions for dealing with arrays.\n * @module\n */\nimport { isSubclassOf } from \"../class.ts\";\nimport { random as rand } from \"../number/index.ts\";\nimport { count as _count, equals as _equals, split as _split, chunk as _chunk, } from \"./base.ts\";\n/** Returns the first element of the array, or `undefined` if the array is empty. */\nexport function first(arr) {\n    return arr[0];\n}\n/** Returns the last element of the array, or `undefined` if the array is empty. */\nexport function last(arr) {\n    return arr.length > 0 ? arr[arr.length - 1] : undefined;\n}\n/** Returns a random element of the array, or `undefined` if the array is empty. */\nexport function random(arr, remove = false) {\n    if (!arr.length) {\n        return undefined;\n    }\n    else if (arr.length === 1) {\n        if (remove) {\n            return arr.splice(0, 1)[0];\n        }\n        else {\n            return arr[0];\n        }\n    }\n    const i = rand(0, arr.length - 1);\n    if (remove) {\n        return arr.splice(i, 1)[0];\n    }\n    else {\n        return arr[i];\n    }\n}\n/** Counts the occurrence of the element in the array. */\nexport function count(arr, item) {\n    return _count(arr, item);\n}\n/**\n * Performs a shallow compare to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n/** Returns a subset of the array that contains only unique items. */\nexport function uniq(arr) {\n    return [...new Set(arr)];\n}\n/**\n * Returns a subset of the array that contains only unique items filtered by the\n * given callback function.\n */\nexport function uniqBy(arr, fn) {\n    const map = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        const item = arr[i];\n        const key = fn(item, i);\n        map.has(key) || map.set(key, item);\n    }\n    return [...map.values()];\n}\n/**\n * Reorganizes the elements in the array in random order.\n *\n * This function mutates the array.\n */\nexport function shuffle(arr) {\n    for (let i = arr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n}\nexport function orderBy(arr, key, order = \"asc\") {\n    const items = arr.slice();\n    if (typeof key === \"function\") {\n        return orderBy(items.map((item, i) => ({\n            key: key(item, i),\n            value: item,\n        })), \"key\", order).map(({ value }) => value);\n    }\n    items.sort((a, b) => {\n        if (typeof a !== \"object\" || typeof b !== \"object\" ||\n            !a || !b ||\n            Array.isArray(a) || Array.isArray(b)) {\n            return -1;\n        }\n        const _a = a[key];\n        const _b = b[key];\n        if (_a === undefined || _b === undefined) {\n            return -1;\n        }\n        if (typeof _a === \"number\" && typeof _b === \"number\") {\n            return _a - _b;\n        }\n        else if ((typeof _a === \"string\" && typeof _b === \"string\")\n            || (typeof _a === \"bigint\" && typeof _b === \"bigint\")) {\n            if (_a < _b) {\n                return -1;\n            }\n            else if (_a > _b) {\n                return 1;\n            }\n            else {\n                return 1;\n            }\n        }\n        else {\n            return -1;\n        }\n    });\n    if (order === \"desc\") {\n        items.reverse();\n    }\n    return items;\n}\n;\nexport function groupBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const groups = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups.get(key);\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups.set(key, [item]);\n            }\n        }\n        return groups;\n    }\n    else {\n        const groups = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            const list = groups[key];\n            if (list) {\n                list.push(item);\n            }\n            else {\n                groups[key] = [item];\n            }\n        }\n        return groups;\n    }\n}\n;\nexport function keyBy(arr, fn, type = Object) {\n    if (type === Map || isSubclassOf(type, Map)) {\n        const map = new type();\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            map.set(key, item);\n        }\n        return map;\n    }\n    else {\n        const record = {};\n        for (let i = 0; i < arr.length; i++) {\n            const item = arr[i];\n            const key = fn(item, i);\n            record[key] = item;\n        }\n        return record;\n    }\n}\n//# sourceMappingURL=index.js.map","/**\n * Functions for mathematical calculations.\n * @module\n */\n/** Returns the sum value of the given values. */\nexport function sum(...values) {\n    return values.reduce((sum, value) => sum + value, 0);\n}\n;\n/** Returns the average value of the given values. */\nexport function avg(...values) {\n    return sum(...values) / values.length;\n}\n;\n/** Returns a the product value multiplied by the given values. */\nexport function product(...values) {\n    var _a;\n    return values.slice(1).reduce((sum, value) => sum * value, (_a = values[0]) !== null && _a !== void 0 ? _a : 0);\n}\n;\n//# sourceMappingURL=index.js.map","import { compare, random, capitalize as _capitalize, chunk as _chunk, count as _count, hyphenate as _hyphenate, truncate as _truncate, bytes as _bytes, chars as _chars, words as _words, lines as _lines, trim as _trim, trimEnd as _trimEnd, trimStart as _trimStart, stripEnd as _stripEnd, stripStart as _stripStart, byteLength as _byteLength, isAscii as _isAscii, } from \"./index.ts\";\nString.compare = compare;\nString.random = random;\nString.prototype.count = function count(sub) {\n    return _count(String(this), sub);\n};\nString.prototype.capitalize = function capitalize(all) {\n    return _capitalize(String(this), all);\n};\nString.prototype.hyphenate = function capitalize() {\n    return _hyphenate(String(this));\n};\nString.prototype.bytes = function bytes() {\n    return _bytes(String(this));\n};\nString.prototype.chars = function chars() {\n    return _chars(String(this));\n};\nString.prototype.words = function words() {\n    return _words(String(this));\n};\nString.prototype.lines = function lines() {\n    return _lines(String(this));\n};\nString.prototype.chunk = function chunk(length) {\n    return _chunk(String(this), length);\n};\nString.prototype.truncate = function truncate(length) {\n    return _truncate(String(this), length);\n};\nString.prototype.trim = function trim(chars = \"\") {\n    return _trim(String(this), chars);\n};\nString.prototype.trimEnd = function trimEnd(chars = \"\") {\n    return _trimEnd(String(this), chars);\n};\nString.prototype.trimStart = function trimStart(chars = \"\") {\n    return _trimStart(String(this), chars);\n};\nString.prototype.stripEnd = function stripEnd(suffix) {\n    return _stripEnd(String(this), suffix);\n};\nString.prototype.stripStart = function stripStart(prefix) {\n    return _stripStart(String(this), prefix);\n};\nString.prototype.byteLength = function byteLength() {\n    return _byteLength(String(this));\n};\nString.prototype.isAscii = function isAscii(printableOnly = false) {\n    return _isAscii(String(this), printableOnly);\n};\n//# sourceMappingURL=augment.js.map","import { isBetween, isFloat, isNumeric, random, range, serial, sequence } from \"./index.ts\";\nNumber.isFloat = isFloat;\nNumber.isNumeric = isNumeric;\nNumber.isBetween = isBetween;\nNumber.random = random;\nNumber.range = range;\nNumber.serial = serial;\nNumber.sequence = sequence;\n//# sourceMappingURL=augment.js.map","import { first as _first, last as _last, chunk as _chunk, count as _count, equals as _equals, groupBy as _groupBy, keyBy as _keyBy, orderBy as _orderBy, random as _random, shuffle as _shuffle, split as _split, uniq as _uniq, uniqBy as _uniqBy, } from \"./index.ts\";\nArray.prototype.first = function first() {\n    return _first(this);\n};\nArray.prototype.last = function last() {\n    return _last(this);\n};\nArray.prototype.random = function random(remove = false) {\n    return _random(this, remove);\n};\nArray.prototype.count = function count(ele) {\n    return _count(this, ele);\n};\nArray.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nArray.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nArray.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\nArray.prototype.uniq = function uniq() {\n    return _uniq(this);\n};\nArray.prototype.uniqBy = function uniqBy(fn) {\n    return _uniqBy(this, fn);\n};\nArray.prototype.shuffle = function shuffle() {\n    return _shuffle(this);\n};\nArray.prototype.toShuffled = function toShuffled() {\n    return this.slice().shuffle();\n};\nif (!Array.prototype.toReversed) {\n    Array.prototype.toReversed = function toReversed() {\n        return this.slice().reverse();\n    };\n}\nif (!Array.prototype.toSorted) {\n    Array.prototype.toSorted = function toSorted(fn) {\n        return this.slice().sort(fn);\n    };\n}\nArray.prototype.orderBy = function orderBy(key, order = \"asc\") {\n    return _orderBy(this, key, order);\n};\nArray.prototype.groupBy = function groupBy(fn, type = Object) {\n    return _groupBy(this, fn, type);\n};\nArray.prototype.keyBy = function keyBy(fn, type = Object) {\n    return _keyBy(this, fn, type);\n};\n//# sourceMappingURL=augment.js.map","import { compare, equals as _equals, split as _split, chunk as _chunk, concat, copy } from \"./index.ts\";\nUint8Array.copy = copy;\nUint8Array.concat = concat;\nUint8Array.compare = compare;\nUint8Array.prototype.equals = function equals(another) {\n    return _equals(this, another);\n};\nUint8Array.prototype.split = function split(delimiter) {\n    return _split(this, delimiter);\n};\nUint8Array.prototype.chunk = function chunk(length) {\n    return _chunk(this, length);\n};\n//# sourceMappingURL=augment.js.map","/**\n * Functions for dealing with `Uint8Array`s.\n * @module\n */\nimport { equals as _equals, split as _split, chunk as _chunk } from \"../array/base.ts\";\nimport { sum } from \"../math/index.ts\";\n/** Copies bytes from `src` array to `dest` and returns the number of bytes copied. */\nexport function copy(src, dest) {\n    if (src.length > dest.length) {\n        src = src.subarray(0, dest.length);\n    }\n    dest.set(src);\n    return src.length;\n}\n/** Like `Buffer.concat` but for pure `Uint8Array`. */\nexport function concat(...arrays) {\n    const length = sum(...arrays.map(arr => arr.length));\n    const ctor = arrays[0].constructor;\n    const result = new ctor(length);\n    let offset = 0;\n    for (const arr of arrays) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\n/** Like `Buffer.compare` but for pure `Uint8Array`. */\nexport function compare(arr1, arr2) {\n    if (arr1 === arr2) {\n        return 0;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const ele1 = arr1[i];\n        const ele2 = arr2[i];\n        if (ele2 === undefined) {\n            return 1;\n        }\n        else if (ele1 < ele2) {\n            return -1;\n        }\n        else if (ele1 > ele2) {\n            return 1;\n        }\n    }\n    return arr1.length < arr2.length ? -1 : 0;\n}\n/**\n * Compares this array to another array and see if it contains the same elements as\n * this array.\n */\nexport function equals(arr1, arr2) {\n    if (!(arr1 instanceof Uint8Array) || !(arr2 instanceof Uint8Array)) {\n        return false;\n    }\n    return _equals(arr1, arr2);\n}\n/** Breaks the array into smaller chunks according to the given delimiter. */\nexport function split(arr, delimiter) {\n    return _split(arr, delimiter);\n}\n/** Breaks the array into smaller chunks according to the given length. */\nexport function chunk(arr, length) {\n    return _chunk(arr, length);\n}\n//# sourceMappingURL=index.js.map","import { hasOwn, hasOwnMethod, omit, patch, pick, as, typeOf, isValid, isPlainObject, sanitize, sortKeys, flatKeys, } from \"./index.ts\";\nif (!Object.hasOwn) {\n    Object.hasOwn = hasOwn;\n}\nif (!Object.hasOwnMethod) {\n    Object.hasOwnMethod = hasOwnMethod;\n}\nObject.patch = patch;\nObject.pick = pick;\nObject.omit = omit;\nObject.as = as;\nObject.typeOf = typeOf;\nObject.isValid = isValid;\nObject.isPlainObject = isPlainObject;\nObject.sanitize = sanitize;\nObject.sortKeys = sortKeys;\nObject.flatKeys = flatKeys;\n//# sourceMappingURL=augment.js.map","import { avg, product, sum } from \"./index.ts\";\nMath.sum = sum;\nMath.avg = avg;\nMath.product = product;\n//# sourceMappingURL=augment.js.map","import { after, sleep, timeout, until } from \"./index.ts\";\nPromise.timeout = timeout;\nPromise.after = after;\nPromise.sleep = sleep;\nPromise.until = until;\n//# sourceMappingURL=augment.js.map","/**\n * Functions for promise/async context handling.\n * @module\n */\n/** Try to resolve a promise with a timeout limit. */\nexport async function timeout(value, ms) {\n    const result = await Promise.race([\n        value,\n        new Promise((_, reject) => setTimeout(() => {\n            reject(new Error(`operation timeout after ${ms}ms`));\n        }, ms))\n    ]);\n    return result;\n}\n/** Resolves a promise only after the given duration. */\nexport async function after(value, ms) {\n    const [result] = await Promise.allSettled([\n        value,\n        new Promise(resolve => setTimeout(resolve, ms))\n    ]);\n    if (result.status === \"fulfilled\") {\n        return result.value;\n    }\n    else {\n        throw result.reason;\n    }\n}\n/** Blocks the context for a given time. */\nexport async function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n/** Blocks the context until the test passes. */\nexport async function until(test) {\n    while ((await test()) === false) {\n        await new Promise(resolve => setTimeout(resolve));\n    }\n}\n//# sourceMappingURL=index.js.map","const inverse = Symbol(\"inverse\");\n/** Bi-directional map, keys and values are unique and map to each other. */\nexport default class BiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"BiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        this[inverse] = new Map();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        super.set(key, value);\n        this[inverse].set(value, key);\n        return this;\n    }\n    getKey(value) {\n        return this[inverse].get(value);\n    }\n    hasValue(value) {\n        return this[inverse].has(value);\n    }\n    deleteValue(value) {\n        if (this[inverse].has(value)) {\n            const key = this[inverse].get(value);\n            super.delete(key);\n            this[inverse].delete(value);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        super.clear();\n        this[inverse].clear();\n    }\n}\n//# sourceMappingURL=BiMap.js.map","/** Case-insensitive map, keys are case-insensitive. */\nexport default class CiMap extends Map {\n    get [Symbol.toStringTag]() {\n        return \"CiMap\";\n    }\n    constructor(iterable = null) {\n        super();\n        if (iterable) {\n            for (const [key, value] of iterable) {\n                this.set(key, value);\n            }\n        }\n    }\n    set(key, value) {\n        const id = String(key).toLowerCase();\n        super.set(id, { key, value });\n        return this;\n    }\n    get(key) {\n        var _a;\n        const id = String(key).toLowerCase();\n        return (_a = super.get(id)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    has(key) {\n        const id = String(key).toLowerCase();\n        return super.has(id);\n    }\n    delete(key) {\n        const id = String(key).toLowerCase();\n        return super.delete(id);\n    }\n    *entries() {\n        for (const { key, value } of super.values()) {\n            yield [key, value];\n        }\n    }\n    *keys() {\n        for (const { key } of super.values()) {\n            yield key;\n        }\n    }\n    *values() {\n        for (const { value } of super.values()) {\n            yield value;\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        super.forEach(({ key, value }) => {\n            callbackfn(value, key, this);\n        }, thisArg);\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n//# sourceMappingURL=CiMap.js.map","import { BiMap, CiMap } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"BiMap\"] = BiMap;\n// @ts-ignore\nglobalThis[\"CiMap\"] = CiMap;\n//# sourceMappingURL=augment.js.map","export default class Exception extends Error {\n    constructor(message, options = 0) {\n        super(message);\n        this.code = 0;\n        if (typeof options === \"number\") {\n            this.code = options;\n        }\n        else if (typeof options === \"string\") {\n            Object.defineProperty(this, \"name\", {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: options,\n            });\n        }\n        else {\n            if (options.name) {\n                Object.defineProperty(this, \"name\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.name,\n                });\n            }\n            if (options.cause) {\n                Object.defineProperty(this, \"cause\", {\n                    configurable: true,\n                    enumerable: false,\n                    writable: true,\n                    value: options.cause,\n                });\n            }\n            if (options.code) {\n                this.code = options.code;\n            }\n        }\n    }\n}\nObject.defineProperty(Exception.prototype, \"name\", {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: \"Exception\",\n});\n//# sourceMappingURL=Exception.js.map","/**\n * Functions for converting errors to/from other types of objects.\n * @module\n */\nimport { isPlainObject, omit } from \"../object/index.ts\";\nimport Exception from \"./Exception.ts\";\nexport { Exception };\n/** Transform the error to a plain object. */\nexport function toObject(err) {\n    if (!(err instanceof Error) && err[\"name\"] && err[\"message\"]) { // Error-like\n        err = fromObject(err, Error);\n    }\n    const obj = {\n        \"@@type\": err.constructor.name,\n        ...omit(err, [\"toString\", \"toJSON\", \"__callSiteEvals\"]),\n    };\n    if (obj[\"@@type\"] === \"AggregateError\" && Array.isArray(obj[\"errors\"])) {\n        obj[\"errors\"] = obj[\"errors\"].map(item => {\n            return item instanceof Error ? toObject(item) : item;\n        });\n    }\n    return obj;\n}\nexport function fromObject(obj, ctor = undefined) {\n    var _a, _b;\n    // @ts-ignore\n    if (!(obj === null || obj === void 0 ? void 0 : obj.name)) {\n        return null;\n    }\n    // @ts-ignore\n    ctor || (ctor = (globalThis[obj[\"@@type\"] || obj.name] || globalThis[obj.name]));\n    if (!ctor) {\n        if (obj[\"@@type\"] === \"Exception\") {\n            ctor = Exception;\n        }\n        else {\n            ctor = Error;\n        }\n    }\n    let err;\n    if (ctor.name === \"DOMException\" && typeof DOMException === \"function\") {\n        err = new ctor((_a = obj[\"message\"]) !== null && _a !== void 0 ? _a : \"\", obj[\"name\"]);\n    }\n    else {\n        err = Object.create(ctor.prototype, {\n            message: {\n                configurable: true,\n                enumerable: false,\n                writable: true,\n                value: (_b = obj[\"message\"]) !== null && _b !== void 0 ? _b : \"\",\n            },\n        });\n    }\n    if (err.name !== obj[\"name\"]) {\n        Object.defineProperty(err, \"name\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"name\"],\n        });\n    }\n    if (obj[\"stack\"] !== undefined) {\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"stack\"],\n        });\n    }\n    if (obj[\"cause\"] != undefined) {\n        Object.defineProperty(err, \"cause\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: obj[\"cause\"],\n        });\n    }\n    const otherKeys = Reflect.ownKeys(obj).filter(key => ![\n        \"@@type\",\n        \"name\",\n        \"message\",\n        \"stack\",\n        \"cause\"\n    ].includes(key));\n    otherKeys.forEach(key => {\n        var _a;\n        // @ts-ignore\n        (_a = err[key]) !== null && _a !== void 0 ? _a : (err[key] = obj[key]);\n    });\n    // @ts-ignore\n    if (isAggregateError(err) && Array.isArray(err[\"errors\"])) {\n        err[\"errors\"] = err[\"errors\"].map(item => {\n            return isPlainObject(item) ? fromObject(item) : item;\n        });\n    }\n    return err;\n}\n/** Creates an `ErrorEvent` instance based on the given error. */\nexport function toErrorEvent(err, type = \"error\") {\n    let filename = \"\";\n    let lineno = 0;\n    let colno = 0;\n    if (err.stack) {\n        const lines = err.stack.split(\"\\n\").map(line => line.trim());\n        let callSite = lines.find(line => line.startsWith(\"at \"));\n        if (callSite) {\n            callSite = callSite.slice(3);\n        }\n        else if (callSite = lines.find(line => line.includes(\"@\") && line.length > 1)) {\n            callSite = callSite.slice(callSite.indexOf(\"@\") + 1);\n        }\n        if (callSite) {\n            let start = callSite.lastIndexOf(\"(\");\n            let end = 0;\n            if (start !== -1) {\n                start += 1;\n                end = callSite.indexOf(\")\", start);\n                callSite = callSite.slice(start, end);\n            }\n            const matches = callSite.match(/:(\\d+):(\\d+)$/);\n            if (matches) {\n                filename = callSite.slice(0, matches.index);\n                lineno = parseInt(matches[1]);\n                colno = parseInt(matches[2]);\n            }\n        }\n    }\n    return new ErrorEvent(type, {\n        error: err,\n        message: err.message,\n        filename,\n        lineno,\n        colno,\n    });\n}\nconst isFirefoxOrSafari = typeof navigator === \"object\" && /Firefox|Safari/.test(navigator.userAgent);\n/** Creates an error instance based on the given `ErrorEvent` instance. */\nexport function fromErrorEvent(event) {\n    if (event.error instanceof Error) {\n        return event.error;\n    }\n    let err;\n    let shouldPatchStack = false;\n    if (event.error\n        && typeof event.error === \"object\"\n        && event.error[\"name\"]\n        && event.error[\"message\"]) { // Error-like\n        err = fromObject(event.error, Error);\n        shouldPatchStack = !err.stack;\n    }\n    else if (event.message) {\n        err = new Error(event.message);\n        shouldPatchStack = true;\n    }\n    else {\n        return null;\n    }\n    if (shouldPatchStack) {\n        let stack = \"\";\n        if (event.filename) {\n            if (isFirefoxOrSafari) {\n                stack = \"@\" + event.filename;\n            }\n            else {\n                stack = `Error: ${event.message}\\n    at ${event.filename}`;\n            }\n            if (event.lineno) {\n                stack += \":\" + event.lineno;\n            }\n            if (event.colno) {\n                stack += \":\" + event.colno;\n            }\n        }\n        Object.defineProperty(err, \"stack\", {\n            configurable: true,\n            enumerable: false,\n            writable: true,\n            value: stack,\n        });\n    }\n    return err;\n}\n/** @inner */\nexport function isDOMException(value) {\n    return ((typeof DOMException === \"function\") && (value instanceof DOMException))\n        || (value instanceof Error && value.constructor.name === \"DOMException\"); // Node.js v16-\n}\n/** @inner */\nexport function isAggregateError(value) {\n    // @ts-ignore\n    return (typeof AggregateError === \"function\" && value instanceof AggregateError)\n        || (value instanceof Error && value.constructor.name === \"AggregateError\");\n}\n//# sourceMappingURL=index.js.map","import { Exception, toErrorEvent, fromObject, toObject, fromErrorEvent } from \"./index.ts\";\n//@ts-ignore\nglobalThis[\"Exception\"] = Exception;\nError.toObject = toObject;\nError.fromObject = fromObject;\nError.toErrorEvent = toErrorEvent;\nError.fromErrorEvent = fromErrorEvent;\nError.prototype.toJSON = function toJSON() {\n    return toObject(this);\n};\n//# sourceMappingURL=augment.js.map","/**\n * Functions for parsing JSONs to specific structures.\n * @module\n */\nimport { isValid } from \"../object/index.ts\";\nimport { fromObject } from \"../error/index.ts\";\nconst typeRegistry = new Map();\nexport function parseAs(text, type) {\n    const data = JSON.parse(text);\n    return as(data, type);\n}\nexport function as(data, type) {\n    if (data === null || data === undefined) {\n        return null;\n    }\n    else if (typeof type.fromJSON === \"function\") {\n        return type.fromJSON(data);\n    }\n    else if (typeof data === \"boolean\") {\n        if (type === Boolean) {\n            return data;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"number\") {\n        if (type === Number) {\n            return data;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (typeof data === \"string\") {\n        if (type === String) {\n            return data;\n        }\n        else if (type === Date) {\n            const date = new Date(data);\n            return isValid(date) ? date : null;\n        }\n        else if (type === BigInt) {\n            try {\n                return BigInt(data);\n            }\n            catch (_b) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (Array.isArray(data)) {\n        if (type === Array) { // Array\n            return data;\n        }\n        else if (type.prototype instanceof Array) { // Array-derivative\n            return type.from(data);\n        }\n        else if (typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") { // ArrayLike or TypedArray\n            try {\n                return type.from(data);\n            }\n            catch (_c) {\n                return null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    else if (![String, Number, Boolean, Date, Array].includes(type)) {\n        if (data.type === \"Buffer\" && Array.isArray(data.data)) { // Node.js Buffer\n            if (typeof Buffer === \"function\" && type === Buffer) {\n                try {\n                    return Buffer.from(data.data);\n                }\n                catch (_d) {\n                    return null;\n                }\n            }\n            else if (typeof type.prototype[Symbol.iterator] === \"function\"\n                && typeof type[\"from\"] === \"function\") {\n                try {\n                    // Convert Node.js Buffer to TypedArray.\n                    return type.from(data.data);\n                }\n                catch (_e) {\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        const keys = Object.getOwnPropertyNames(data);\n        const values = Object.values(data);\n        if (keys.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            values.slice(0, 50).map(Number).every(i => !Number.isNaN(i)) &&\n            typeof type.prototype[Symbol.iterator] === \"function\" &&\n            typeof type[\"from\"] === \"function\") {\n            // Assert the data is a TypedArray.\n            try {\n                return type.from(Object.values(data));\n            }\n            catch (_f) {\n                return null;\n            }\n        }\n        else if (type.prototype instanceof Error) {\n            const err = fromObject(data);\n            if (err) {\n                // Support @JSON.type() decorator in Error constructors.\n                const typeRecords = typeRegistry.get(type.prototype);\n                if (typeRecords) {\n                    for (const key of Reflect.ownKeys(data)) {\n                        const ctor = typeRecords[key];\n                        if (ctor) {\n                            err[key] = as(data[key], ctor);\n                        }\n                    }\n                }\n            }\n            return err;\n        }\n        else {\n            const ins = Object.create(type.prototype);\n            const typeRecords = typeRegistry.get(type.prototype);\n            if (typeRecords) {\n                for (const key of Reflect.ownKeys(data)) {\n                    const ctor = typeRecords[key];\n                    ins[key] = ctor ? as(data[key], ctor) : data[key];\n                }\n            }\n            else {\n                Object.assign(ins, data);\n            }\n            return ins;\n        }\n    }\n    else {\n        return null;\n    }\n}\n/**\n * A decorator to instruct that the target property in the class is of a specific type.\n *\n * When parsing JSON via {@link parseAs}, this property is guaranteed to be of the given type.\n *\n * @remarks This decorator only supports TypeScript's `experimentalDecorators`.\n *\n * @example\n * ```ts\n * class Example {\n *     \\@type(Date)\n *     date: Date;\n * }\n * ```\n */\nexport function type(ctor) {\n    return (proto, prop) => {\n        const record = typeRegistry.get(proto);\n        if (record) {\n            record[prop] = ctor;\n        }\n        else {\n            typeRegistry.set(proto, { [prop]: ctor });\n        }\n    };\n}\n//# sourceMappingURL=index.js.map","if (!Symbol.asyncIterator) {\n    // @ts-ignore\n    Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\");\n}\n\n/**\n * Checks if the given object is an Iterable (implemented `@@iterator`).\n * @param {any} obj\n * @returns {obj is Iterable<any>}\n */\nexport function isIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterable (implemented `@@asyncIterator`).\n * @param {any} obj\n * @returns {obj is AsyncIterable<any>}\n */\nexport function isAsyncIterable(obj) {\n    return obj !== null\n        && obj !== undefined\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an IteratorLike (implemented `next`).\n * @param {any} obj\n * @returns {obj is { [x: string | symbol]: any; next: Function }}\n */\nexport function isIteratorLike(obj) {\n    // An iterable object has a 'next' method, however including a 'next' method\n    // doesn't ensure the object is an iterator, it is only iterator-like.\n    return typeof obj === \"object\"\n        && obj !== null\n        && typeof obj.next === \"function\";\n}\n\n/**\n * Checks if the given object is an IterableIterator (implemented both\n * `@@iterator` and `next`).\n * @param {any} obj\n */\nexport function isIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.iterator] === \"function\";\n}\n\n/**\n * Checks if the given object is an AsyncIterableIterator (implemented\n * both `@@asyncIterator` and `next`).\n * @param {any} obj\n * @returns {obj is AsyncIterableIterator<any>}\n */\nexport function isAsyncIterableIterator(obj) {\n    return isIteratorLike(obj)\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\n\n/**\n * Checks if the given object is a Generator.\n * @param {any} obj\n * @returns {obj is Generator}\n */\nexport function isGenerator(obj) {\n    return isIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * Checks if the given object is an AsyncGenerator.\n * @param {any} obj\n * @returns {obj is AsyncGenerator}\n */\nexport function isAsyncGenerator(obj) {\n    return isAsyncIterableIterator(obj)\n        && hasGeneratorSpecials(obj);\n}\n\n/**\n * @param {any} obj \n */\nfunction hasGeneratorSpecials(obj) {\n    return typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\";\n}\n","import { as, parseAs, type } from \"./index.ts\";\nJSON.parseAs = parseAs;\nJSON.as = as;\nJSON.type = type;\n//# sourceMappingURL=augment.js.map","if (!Symbol.asyncIterator) {\n    Object.defineProperty(Symbol, \"asyncIterator\", {\n        value: Symbol(\"Symbol.asyncIterator\")\n    });\n}\nexport const source = Symbol(\"GeneratorSource\");\nexport const status = Symbol(\"GeneratorStatus\");\nexport const result = Symbol(\"GeneratorResult\");\nexport class Thenable {\n    constructor(_source) {\n        this[source] = _source;\n        this[status] = \"suspended\";\n        this[result] = void 0;\n    }\n    then(onfulfilled, onrejected) {\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve(this[result]);\n        }\n        else if (this[status] === \"erred\") {\n            res = Promise.reject(this[source]);\n        }\n        else if (typeof this[source].then === \"function\") {\n            res = Promise.resolve(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = processIterator(this[source]);\n        }\n        else {\n            res = Promise.resolve(this[source]);\n        }\n        this[status] = \"closed\";\n        return res\n            .then(value => (this[result] = value))\n            .then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return Promise.resolve(this).then(null, onrejected);\n    }\n}\nexport class ThenableGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = { value: void 0, done: true };\n        }\n        else if (this[status] === \"erred\") {\n            return this.throw(this[source]);\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = this[source].next(value);\n        }\n        else {\n            res = { value: this[source], done: true };\n        }\n        if (res.done === true) {\n            this[status] = \"closed\";\n            this[result] = res.value;\n        }\n        return res;\n    }\n    return(value) {\n        this[status] = \"closed\";\n        this[result] = value;\n        if (this[source] && typeof this[source].return === \"function\") {\n            return this[source].return(value);\n        }\n        else {\n            return { value, done: true };\n        }\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return this[source].throw(err);\n        }\n        else {\n            throw err;\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    ;\n}\nexport class ThenableAsyncGenerator extends Thenable {\n    next(...args) {\n        const value = args[0];\n        let res;\n        if (this[source] === undefined || this[status] === \"closed\") {\n            res = Promise.resolve({ value: void 0, done: true });\n        }\n        else if (typeof this[source].next === \"function\") {\n            res = Promise.resolve(this[source].next(value));\n        }\n        else {\n            res = Promise.resolve(this[source]).then(value => {\n                return { value, done: true };\n            });\n        }\n        return res.then(res => {\n            if (res.done === true) {\n                this[status] = \"closed\";\n                this[result] = res.value;\n            }\n            return res;\n        });\n    }\n    return(value) {\n        this[status] = \"closed\";\n        // The input value may be a promise-like object, using Promise.resolve()\n        // to guarantee the value is resolved.\n        return Promise.resolve(value).then(value => {\n            this[result] = value;\n            if (this[source] && typeof this[source].return === \"function\") {\n                return Promise.resolve(this[source].return(value));\n            }\n            else {\n                return Promise.resolve({ value, done: true });\n            }\n        });\n    }\n    throw(err) {\n        this[status] = \"closed\";\n        if (this[source] && typeof this[source].throw === \"function\") {\n            return Promise.resolve(this[source].throw(err));\n        }\n        else {\n            return Promise.reject(err);\n        }\n    }\n    [Symbol.asyncIterator]() {\n        return this;\n    }\n}\nexport const ThenableGeneratorFunction = (function (fn) {\n    if (!(this instanceof ThenableGeneratorFunction)) {\n        return new ThenableGeneratorFunction(fn);\n    }\n    function anonymous(...args) {\n        try {\n            const source = fn.apply(this, args);\n            if (typeof source.then === \"function\" || isAsyncGenerator(source)) {\n                return new ThenableAsyncGenerator(source);\n            }\n            else {\n                return new ThenableGenerator(source);\n            }\n        }\n        catch (err) {\n            return Object.assign(new ThenableGenerator(err), {\n                [status]: \"erred\"\n            });\n        }\n    }\n    // HACK, let the returning function be an instance of\n    // ThenableGeneratorFunction.\n    anonymous.prototype = ThenableGeneratorFunction;\n    anonymous.__proto__ = this;\n    return anonymous;\n});\nThenableGeneratorFunction.create = function create(fn) {\n    return new ThenableGeneratorFunction(fn);\n};\nObject.setPrototypeOf(ThenableGeneratorFunction, Function);\nObject.setPrototypeOf(ThenableGeneratorFunction.prototype, Function.prototype);\nexport const create = ThenableGeneratorFunction.create;\nexport default create;\nfunction isAsyncGenerator(obj) {\n    return obj !== null\n        && typeof obj === \"object\"\n        && typeof obj.next === \"function\"\n        && typeof obj.return === \"function\"\n        && typeof obj.throw === \"function\"\n        && typeof obj[Symbol.asyncIterator] === \"function\";\n}\nfunction processIterator(iterator) {\n    return new Promise((resolve, reject) => {\n        function fulfilled(value) {\n            try {\n                step(iterator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            var _a;\n            try {\n                step((_a = iterator.throw) === null || _a === void 0 ? void 0 : _a.call(iterator, value));\n            }\n            catch (e) {\n                reject(e);\n            }\n        }\n        function step(item) {\n            Promise.resolve(item).then(result => {\n                result.done ? resolve(result.value) : new Promise(resolve => {\n                    resolve(result.value);\n                }).then(fulfilled, rejected);\n            });\n        }\n        step(iterator.next());\n    });\n}\n//# sourceMappingURL=index.js.map","export function isFunction(val) {\n    return typeof val === \"function\";\n}\n//# sourceMappingURL=util.js.map","/**\n * Calls a function safely and return errors when captured.\n * @module\n */\n// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport { isFunction } from \"./util.ts\";\nexport default function _try(fn, ...args) {\n    if (isFunction(fn)) {\n        try {\n            return _try(fn.apply(void 0, args));\n        }\n        catch (err) {\n            return [err, undefined];\n        }\n    }\n    let returns = fn;\n    // Implementation details should be ordered from complex to simple.\n    if (returns instanceof ThenableAsyncGenerator) {\n        // special case\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else if (isAsyncGenerator(returns)) {\n        // @ts-ignore\n        return (async function* () {\n            let input;\n            let result;\n            // Use `while` loop instead of `for...of...` in order to\n            // retrieve the return value of a generator function.\n            while (true) {\n                try {\n                    const { done, value } = await returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        // Receive any potential input value that passed\n                        // to the outer `next()` call, and pass them to\n                        // `res.next()` in the next call.\n                        input = yield Promise.resolve([null, value]);\n                    }\n                }\n                catch (err) {\n                    // If any error occurs, yield that error as resolved\n                    // and break the loop immediately, indicating the\n                    // process is forced broken.\n                    yield Promise.resolve([err, undefined]);\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isGenerator(returns)) {\n        return (function* () {\n            let input;\n            let result;\n            while (true) {\n                try {\n                    const { done, value } = returns.next(input);\n                    if (done) {\n                        result = value;\n                        break;\n                    }\n                    else {\n                        input = yield [null, value];\n                    }\n                }\n                catch (err) {\n                    yield [err, undefined];\n                    break;\n                }\n            }\n            return [null, result];\n        })();\n    }\n    else if (isFunction(returns === null || returns === void 0 ? void 0 : returns.then)) {\n        returns = returns\n            .then((value) => [null, value]);\n        return Promise.resolve(returns)\n            .catch((err) => [err, undefined]);\n    }\n    else {\n        return [null, returns];\n    }\n}\n//# sourceMappingURL=try.js.map","/**\n * Wraps a function for decorator pattern but keep its signature.\n * @module\n */\n/**\n * Wraps a function inside another function and returns a new function that\n * copies the original function's name and other properties.\n *\n * @example\n * ```ts\n * import wrap from \"@ayonli/jsext/wrap\";\n *\n * function log(text: string) {\n *     console.log(text);\n * }\n *\n * const show = wrap(log, function (fn, text) {\n *     return fn.call(this, new Date().toISOString() + \" \" + text);\n * });\n *\n * console.log(show.name); // log\n * console.log(show.length); // 1\n * console.assert(show.toString() === log.toString());\n * ```\n */\nexport default function wrap(fn, wrapper) {\n    const wrapped = function (...args) {\n        return wrapper.call(this, fn, ...args);\n    };\n    Object.defineProperty(wrapped, \"name\", Object.getOwnPropertyDescriptor(fn, \"name\"));\n    Object.defineProperty(wrapped, \"length\", Object.getOwnPropertyDescriptor(fn, \"length\"));\n    Object.defineProperty(wrapped, \"toString\", {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: fn.toString.bind(fn),\n    });\n    return wrapped;\n}\n//# sourceMappingURL=wrap.js.map","/**\n * Throttles function calls for frequent access.\n * @module\n */\nconst Cache = new Map();\nexport default function throttle(handler, options) {\n    const key = typeof options === \"number\" ? null : options.for;\n    const duration = typeof options === \"number\" ? options : options.duration;\n    const noWait = typeof options === \"number\" ? false : !!(options === null || options === void 0 ? void 0 : options.noWait);\n    const handleCall = function (cache, ...args) {\n        var _a;\n        if (cache.result && ((cache.pending && noWait) || Date.now() < ((_a = cache.expires) !== null && _a !== void 0 ? _a : 0))) {\n            if (cache.result.error) {\n                throw cache.result.error;\n            }\n            else {\n                return cache.result.value;\n            }\n        }\n        else if (cache.pending) {\n            return cache.pending;\n        }\n        try {\n            const returns = handler.call(this, ...args);\n            if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                cache.pending = Promise.resolve(returns).finally(() => {\n                    cache.result = { value: cache.pending };\n                    cache.pending = undefined;\n                    cache.expires = Date.now() + duration;\n                });\n                if (noWait && cache.result) {\n                    if (cache.result.error) {\n                        throw cache.result.error;\n                    }\n                    else {\n                        return cache.result.value;\n                    }\n                }\n                else {\n                    return cache.pending;\n                }\n            }\n            else {\n                cache.result = { value: returns };\n                cache.expires = Date.now() + duration;\n                return returns;\n            }\n        }\n        catch (error) {\n            cache.result = { error };\n            cache.expires = Date.now() + duration;\n            throw error;\n        }\n    };\n    if (key === null || key === undefined || key === \"\") {\n        const cache = { for: null };\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n    else {\n        let cache = Cache.get(key);\n        if (!cache) {\n            cache = { for: key };\n            Cache.set(key, cache);\n        }\n        return function (...args) {\n            return handleCall.call(this, cache, ...args);\n        };\n    }\n}\n//# sourceMappingURL=throttle.js.map","/**\n * Debounces function calls for frequent access.\n * @module\n */\nconst registry = new Map();\nexport default function debounce(handler, options, reducer = undefined) {\n    const delay = typeof options === \"number\" ? options : options.delay;\n    const key = typeof options === \"number\" ? null : options.for;\n    const hasKey = key !== null && key !== undefined && key !== \"\";\n    let _cache = hasKey ? registry.get(key) : undefined;\n    if (!_cache) {\n        _cache = {\n            for: key,\n            tasks: [],\n            data: undefined,\n            timer: undefined,\n        };\n        if (hasKey) {\n            registry.set(key, _cache);\n        }\n    }\n    const cache = _cache;\n    return async function (data) {\n        if (typeof reducer === \"function\" && cache.data !== undefined) {\n            cache.data = reducer(cache.data, data);\n        }\n        else {\n            cache.data = data;\n        }\n        cache.timer && clearTimeout(cache.timer);\n        cache.timer = setTimeout(() => {\n            // Move tasks and cached data to new variables, so during the middle\n            // of handler running, new calls won't affect the running process.\n            const _tasks = cache.tasks;\n            const _data = cache.data;\n            cache.tasks = [];\n            cache.data = undefined;\n            if (hasKey) {\n                registry.delete(key);\n            }\n            const resolve = (result) => {\n                _tasks.forEach(({ resolve }) => resolve(result));\n            };\n            const reject = (err) => {\n                _tasks.forEach(({ reject }) => reject(err));\n            };\n            try {\n                const res = handler.call(this, _data);\n                if (typeof (res === null || res === void 0 ? void 0 : res.then) === \"function\") {\n                    res.then(resolve, reject);\n                }\n                else {\n                    resolve(res);\n                }\n            }\n            catch (err) {\n                reject(err);\n            }\n        }, delay);\n        return await new Promise((resolve, reject) => {\n            cache.tasks.push({ resolve, reject });\n        });\n    };\n}\n//# sourceMappingURL=debounce.js.map","var _a;\nexport const id = Symbol.for(\"id\");\nexport const isDeno = typeof Deno === \"object\";\nexport const isBun = typeof Bun === \"object\";\nexport const isNode = !isDeno && !isBun\n    && typeof process === \"object\" && !!((_a = process.versions) === null || _a === void 0 ? void 0 : _a.node);\nexport const isNodePrior14 = isNode && parseInt(process.version.slice(1)) < 14;\nexport const IsPath = /^(\\.[\\/\\\\]|\\.\\.[\\/\\\\]|[a-zA-Z]:|\\/)/;\n// In Node.js, `process.argv` contains `--worker-thread` when the current thread is used as\n// a worker.\nconst isNodeWorkerThread = isNode && process.argv.includes(\"--worker-thread\");\nexport const isMainThread = !isNodeWorkerThread\n    && (isBun ? Bun.isMainThread : typeof WorkerGlobalScope === \"undefined\");\n//# sourceMappingURL=constants.js.map","/**\n * A channel implementation that transfers data across routines, even across\n * multiple threads, inspired by Golang.\n * @module\n */\nvar _a;\nimport { serial } from \"./number/index.ts\";\nimport { id } from \"./parallel/constants.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst idGenerator = serial(true);\n/**\n * A channel implementation that transfers data across routines, even across\n * multiple threads, inspired by Golang.\n */\nexport class Channel {\n    constructor(capacity = 0) {\n        this[_a] = idGenerator.next().value;\n        this.buffer = [];\n        this.producers = [];\n        this.consumers = [];\n        this.error = null;\n        this.state = 1;\n        if (capacity < 0) {\n            throw new RangeError(\"the capacity of a channel must not be negative\");\n        }\n        this.capacity = capacity;\n    }\n    /**\n     * Pushes data to the channel.\n     *\n     * If there is a receiver, the data will be consumed immediately. Otherwise:\n     *\n     * - If this is an non-buffered channel, this function will block until a\n     *  receiver is available and the data is consumed.\n     *\n     * - If this is a buffered channel, then:\n     *      - If the buffer size is within the capacity, the data will be pushed\n     *        to the buffer.\n     *      - Otherwise, this function will block until there is new space for\n     *        the data in the buffer.\n     */\n    send(data) {\n        if (this.state !== 1) {\n            throw new Error(\"the channel is closed\");\n        }\n        else if (this.consumers.length) {\n            const consume = this.consumers.shift();\n            return Promise.resolve(consume(null, data));\n        }\n        else if (this.capacity && this.buffer.length < this.capacity) {\n            this.buffer.push(data);\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise(resolve => {\n                this.producers.push(() => {\n                    if (this.capacity) {\n                        const _data = this.buffer.shift();\n                        this.buffer.push(data);\n                        resolve();\n                        return _data;\n                    }\n                    else {\n                        resolve();\n                        return data;\n                    }\n                });\n            });\n        }\n    }\n    /**\n     * Retrieves data from the channel.\n     *\n     * If there isn't data available at the moment, this function will block\n     * until new data is available.\n     *\n     * If the channel is closed, then:\n     *\n     * - If there is error set in the channel, this function throws that error\n     *   immediately.\n     * - Otherwise, this function returns `undefined` immediately.\n     */\n    recv() {\n        if (this.buffer.length) {\n            const data = this.buffer.shift();\n            if (this.state === 2 && !this.buffer.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(data);\n        }\n        else if (this.producers.length) {\n            const produce = this.producers.shift();\n            if (this.state === 2 && !this.producers.length) {\n                this.state = 0;\n            }\n            return Promise.resolve(produce());\n        }\n        else if (this.state === 0) {\n            return Promise.resolve(undefined);\n        }\n        else if (this.error) {\n            // Error can only be consumed once, after that, that closure will\n            // be complete.\n            const { error } = this;\n            this.state = 0;\n            this.error = null;\n            return Promise.reject(error);\n        }\n        else if (this.state === 2) {\n            this.state = 0;\n            return Promise.resolve(undefined);\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.consumers.push((err, data) => {\n                    if (this.state === 2 && !this.consumers.length) {\n                        this.state = 0;\n                    }\n                    err ? reject(err) : resolve(data);\n                });\n            });\n        }\n    }\n    /**\n     * Closes the channel. If `err` is supplied, it will be captured by the\n     * receiver.\n     *\n     * No more data shall be sent once the channel is closed.\n     *\n     * Explicitly closing the channel is not required, if the channel is no\n     * longer used, it will be automatically released by the GC. However, if\n     * the channel is used in a `for await...of...` loop, closing the channel\n     * will allow the loop to break automatically.\n     *\n     * Moreover, if the channel is used between parallel threads, it will no\n     * longer be able to release automatically, must explicitly call this\n     * function in order to release for GC.\n     */\n    close(err = null) {\n        if (this.state !== 1) {\n            // prevent duplicated call\n            return;\n        }\n        this.state = 2;\n        this.error = err;\n        let consume;\n        while (consume = this.consumers.shift()) {\n            consume(err, undefined);\n        }\n    }\n    [(_a = id, Symbol.asyncIterator)]() {\n        const channel = this;\n        return {\n            async next() {\n                const bufSize = channel.buffer.length;\n                const queueSize = channel.producers.length;\n                const value = await channel.recv();\n                return {\n                    value: value,\n                    done: channel.state === 0 && !bufSize && !queueSize,\n                };\n            }\n        };\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n    /** @deprecated This method is deprecated in favor of the `send()` method. */\n    push(data) {\n        return this.send(data);\n    }\n    /** @deprecated This method is deprecated in favor of the `recv()` method. */\n    pop() {\n        return this.recv();\n    }\n}\n/**\n * Inspired by Golang, cerates a {@link Channel} that can be used to transfer\n * data across routines.\n *\n * If `capacity` is not set, a non-buffered channel will be created. For a\n * non-buffered channel, the sender and receiver must be present at the same\n * time (theoretically), otherwise, the channel will block (non-IO aspect).\n *\n * If `capacity` is set, a buffered channel will be created. For a buffered\n * channel, data will be queued in the buffer first and then consumed by the\n * receiver in FIFO order. Once the buffer size reaches the capacity limit, no\n * more data will be sent unless there is new space available.\n *\n * It is possible to set the `capacity` to `Infinity` to allow the channel to\n * never block and behave like a message queue.\n *\n * Unlike `EventEmitter` or `EventTarget`, `Channel` guarantees the data will\n * always be delivered, even if there is no receiver at the moment.\n *\n * Also, unlike Golang, `await channel.recv()` does not prevent the program from\n * exiting.\n *\n * Channels can be used to send and receive streaming data between main thread\n * and worker threads wrapped by `parallel()`, but once used that way,\n * `channel.close()` must be explicitly called in order to release the channel\n * for garbage collection.\n *\n * @example\n * ```ts\n * // non-buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     await channel.send(123);\n * })();\n *\n * const num = await channel.recv();\n * console.log(num); // 123\n * // output:\n * // 123\n * ```\n *\n * @example\n * ```ts\n * // buffered\n * import chan from \"@ayonli/jsext/chan\";\n *\n * const channel = chan<number>(3);\n *\n * await channel.send(123);\n * await channel.send(456);\n * await channel.send(789);\n *\n * const num1 = await channel.recv();\n * const num2 = await channel.recv();\n * const num3 = await channel.recv();\n *\n * console.log(num1); // 123\n * console.log(num2); // 456\n * console.log(num3); // 789\n * ```\n *\n * @example\n * ```ts\n * // iterable\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n *\n * const channel = chan<number>();\n *\n * (async () => {\n *     for (const num of sequence(1, 5)) {\n *         await channel.send(num);\n *     }\n *\n *     channel.close();\n * })();\n *\n * for await (const num of channel) {\n *     console.log(num);\n * }\n * // output:\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * ```\n */\nexport default function chan(capacity = 0) {\n    return new Channel(capacity);\n}\n//# sourceMappingURL=chan.js.map","/**\n * This module provides a mechanism to handle tasks sequentially and prevent\n * concurrency conflicts.\n * @module\n */\nimport chan from \"./chan.ts\";\nexport class Queue {\n    constructor(handler, bufferSize = 0) {\n        this.channel = chan(bufferSize);\n        (async () => {\n            var _a;\n            for await (const data of this.channel) {\n                try {\n                    await handler.call(void 0, data);\n                }\n                catch (err) {\n                    (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(this, err);\n                }\n            }\n        })().catch(err => {\n            var _a;\n            (_a = this.errorHandler) === null || _a === void 0 ? void 0 : _a.call(void 0, err);\n        });\n    }\n    push(data) {\n        return this.channel.send(data);\n    }\n    close() {\n        var _a;\n        (_a = this.channel) === null || _a === void 0 ? void 0 : _a.close();\n    }\n    onError(handler) {\n        this.errorHandler = handler;\n    }\n    [Symbol.dispose]() {\n        this.close();\n    }\n}\n/**\n * Processes data sequentially by the given `handler` function and prevents\n * concurrency conflicts, it returns a {@link Queue} instance that we can push\n * data into.\n *\n * @param bufferSize The maximum capacity of the underlying channel, once\n * reached, the push operation will block until there is new space available.\n * By default, this option is not set and use a non-buffered channel instead.\n *\n * @example\n * ```ts\n * import queue from \"@ayonli/jsext/queue\";\n *\n * const list: string[] = [];\n * const q = queue(async (str: string) => {\n *     await Promise.resolve(null);\n *     list.push(str);\n * });\n *\n * q.onError(err => {\n *     console.error(err);\n * })\n *\n * await q.push(\"foo\");\n * await q.push(\"foo\");\n *\n * console.log(list.length);\n * q.close();\n * // output:\n * // 2\n * ```\n */\nexport default function queue(handler, bufferSize = 0) {\n    return new Queue(handler, bufferSize);\n}\n//# sourceMappingURL=queue.js.map","/**\n * A mutual exclusion mechanism for concurrent operations and protecting shared\n * data.\n * @module\n */\nvar _a;\nimport BiMap from \"./collections/BiMap.ts\";\nif (typeof Symbol.dispose === \"undefined\") {\n    Object.defineProperty(Symbol, \"dispose\", { value: Symbol(\"Symbol.dispose\") });\n}\nconst _queue = Symbol.for(\"queue\");\nconst _value = Symbol.for(\"value\");\nconst _mutex = Symbol.for(\"mutex\");\nconst _unlocked = Symbol.for(\"unlocked\");\n/**\n * Mutual Exclusion prevents multiple coroutines from accessing the same shared\n * resource simultaneously.\n *\n * @remarks\n * Currently, the Mutex instance can not be used across multiple threads, but is\n * considering adding support for `parallel` threads.\n *\n * @example\n * ```ts\n * import { Mutex } from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n * import { random } from \"@ayonli/jsext/number\";\n * import { sleep } from \"@ayonli/jsext/promise\";\n *\n * const mutex = new Mutex(1);\n *\n * const concurrentOperation = func(async (defer) => {\n *     const shared = await mutex.lock();\n *     defer(() => shared.unlock()); // don't forget to unlock\n *\n *     const value1 = shared.value;\n *\n *     await otherAsyncOperations();\n *\n *     shared.value += 1\n *     const value2 = shared.value;\n *\n *     // Without mutex lock, the shared value may have been modified by other\n *     // calls during `await otherAsyncOperation()`, and the following\n *     // assertion will fail.\n *     console.assert(value1 + 1 === value2);\n * });\n *\n * async function otherAsyncOperations() {\n *     await sleep(100 * random(1, 10));\n * }\n *\n * await Promise.all([\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n *     concurrentOperation(),\n * ]);\n * ```\n */\nexport class Mutex {\n    /**\n     * @param value The data associated to the mutex instance.\n     */\n    constructor(value) {\n        this[_a] = [];\n        this[_value] = value;\n    }\n    /**\n     * Acquires the lock of the mutex, optionally for modifying the shared\n     * resource.\n     */\n    async lock() {\n        await new Promise(resolve => {\n            if (this[_queue].length) {\n                this[_queue].push(resolve);\n            }\n            else {\n                this[_queue].push(resolve);\n                resolve();\n            }\n        });\n        const lock = Object.create(Mutex.Lock.prototype);\n        lock[_mutex] = this;\n        return lock;\n    }\n}\n_a = _queue;\n(function (Mutex) {\n    var _b;\n    class Lock {\n        constructor(mutex) {\n            this[_b] = false;\n            this[_mutex] = mutex;\n        }\n        /** Accesses the data associated to the mutex instance. */\n        get value() {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            return this[_mutex][_value];\n        }\n        set value(v) {\n            if (this[_unlocked]) {\n                throw new ReferenceError(\"trying to access data after unlocked\");\n            }\n            this[_mutex][_value] = v;\n        }\n        /** Releases the current lock of the mutex. */\n        unlock() {\n            this[_unlocked] = true;\n            const queue = this[_mutex][_queue];\n            queue.shift();\n            const next = queue[0];\n            if (next) {\n                next();\n            }\n            else if (registry.hasValue(this[_mutex])) {\n                registry.deleteValue(this[_mutex]);\n            }\n        }\n        [(_b = _unlocked, Symbol.dispose)]() {\n            this.unlock();\n        }\n    }\n    Mutex.Lock = Lock;\n})(Mutex || (Mutex = {}));\nconst registry = new BiMap();\n/**\n * Acquires a mutex lock for the given key in order to perform concurrent\n * operations and prevent conflicts.\n *\n * If the key is currently being locked by other coroutines, this function will\n * block until the lock becomes available again.\n *\n * @example\n * ```ts\n * import lock from \"@ayonli/jsext/lock\";\n * import func from \"@ayonli/jsext/func\";\n *\n * const key = \"lock_key\";\n *\n * export const concurrentOperation = func(async (defer) => {\n *     const ctx = await lock(key);\n *     defer(() => ctx.unlock()); // don't forget to unlock\n *\n *     // This block will never be run if there are other coroutines holding\n *     // the lock.\n *     //\n *     // Other coroutines trying to lock the same key will also never be run\n *     // before `unlock()`.\n * });\n * ```\n */\nexport default async function lock(key) {\n    let mutex = registry.get(key);\n    if (!mutex) {\n        registry.set(key, mutex = new Mutex(void 0));\n    }\n    return await mutex.lock();\n}\n//# sourceMappingURL=lock.js.map","import { IsPath, isBun, isDeno, isNode } from \"../constants.ts\";\nimport { trim } from \"../../string/index.ts\";\nconst moduleCache = new Map();\nexport function sanitizeModuleId(id, strict = false) {\n    let _id = \"\";\n    if (typeof id === \"function\") {\n        let str = id.toString();\n        let offset = \"import(\".length;\n        let start = str.lastIndexOf(\"import(\");\n        if (start === -1) {\n            offset = \"require(\".length;\n            start = str.lastIndexOf(\"require(\");\n        }\n        if (start === -1) {\n            throw new TypeError(\"the given script is not a dynamic import expression\");\n        }\n        else {\n            start += offset;\n            const end = str.indexOf(\")\", start);\n            _id = trim(str.slice(start, end), ` '\"\\'`);\n        }\n    }\n    else {\n        _id = id;\n    }\n    if ((isNode || isBun) && IsPath.test(_id)) {\n        if (!/\\.[cm]?(js|ts|)x?$/.test(_id)) { // if omitted suffix, add suffix\n            _id += isBun ? \".ts\" : \".js\";\n        }\n        else if (isNode) { // replace .ts/.mts/.cts to .js/.mjs/.cjs in Node.js\n            if (_id.endsWith(\".ts\")) {\n                _id = _id.slice(0, -3) + \".js\";\n            }\n            else if (_id.endsWith(\".mts\")) {\n                _id = _id.slice(0, -4) + \".mjs\";\n            }\n            else if (_id.endsWith(\".cts\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".cjs\";\n            }\n            else if (_id.endsWith(\".tsx\")) { // rare, but should support\n                _id = _id.slice(0, -4) + \".js\";\n            }\n        }\n    }\n    if (!IsPath.test(_id) && !strict) {\n        _id = \"./\" + _id;\n    }\n    return _id;\n}\nexport async function resolveModule(modId, baseUrl = undefined) {\n    let module;\n    if (isNode || isBun) {\n        const { fileURLToPath } = await import(\"url\");\n        const path = baseUrl ? fileURLToPath(new URL(modId, baseUrl).href) : modId;\n        module = await import(path);\n    }\n    else {\n        const url = new URL(modId, baseUrl).href;\n        module = moduleCache.get(url);\n        if (!module) {\n            if (isDeno) {\n                module = await import(url);\n                moduleCache.set(url, module);\n            }\n            else {\n                try {\n                    module = await import(url);\n                    moduleCache.set(url, module);\n                }\n                catch (err) {\n                    if (String(err).includes(\"Failed\")) {\n                        const _url = await resolveRemoteModuleUrl(url);\n                        module = await import(_url);\n                        moduleCache.set(url, module);\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n        }\n    }\n    if (typeof module[\"default\"] === \"object\" && typeof module[\"default\"].default !== \"undefined\") {\n        module = module[\"default\"]; // CommonJS module with exports.default\n    }\n    return module;\n}\nexport async function resolveRemoteModuleUrl(url) {\n    var _a;\n    // Use fetch to download the script and compose an object URL which can\n    // bypass CORS security constraint in the browser.\n    const res = await fetch(url);\n    let blob;\n    if ((_a = res.headers.get(\"content-type\")) === null || _a === void 0 ? void 0 : _a.includes(\"/javascript\")) {\n        blob = await res.blob();\n    }\n    else {\n        const buf = await res.arrayBuffer();\n        blob = new Blob([new Uint8Array(buf)], {\n            type: \"application/javascript\",\n        });\n    }\n    return URL.createObjectURL(blob);\n}\n//# sourceMappingURL=module.js.map","import { Channel } from \"../../chan.ts\";\nimport { id, isMainThread } from \"../constants.ts\";\nconst channelStore = new Map();\nexport function isChannelMessage(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"send\", \"close\"].includes(msg.type)\n        && typeof msg.channelId === \"number\";\n}\nexport async function handleChannelMessage(msg) {\n    const record = channelStore.get(msg.channelId);\n    if (!record)\n        return;\n    if (msg.type === \"send\") {\n        await record.raw.send(msg.value);\n    }\n    else if (msg.type === \"close\") {\n        const { value: err, channelId } = msg;\n        record.raw.close(err);\n        channelStore.delete(channelId);\n        if (isMainThread && record.writers.length > 1) {\n            // distribute the channel close event to all threads\n            record.writers.forEach(write => {\n                write(\"close\", err, channelId);\n            });\n        }\n    }\n}\nfunction wireChannel(channel, channelWrite) {\n    const channelId = channel[id];\n    if (!channelStore.has(channelId)) {\n        const send = channel.send.bind(channel);\n        const close = channel.close.bind(channel);\n        channelStore.set(channelId, {\n            channel,\n            raw: { send, close },\n            writers: [channelWrite],\n            counter: 0,\n        });\n        Object.defineProperties(channel, {\n            send: {\n                configurable: true,\n                writable: true,\n                value: async (data) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        const channel = record.channel;\n                        if (channel[\"state\"] !== 1) {\n                            throw new Error(\"the channel is closed\");\n                        }\n                        const write = record.writers[record.counter++ % record.writers.length];\n                        await Promise.resolve(write(\"send\", data, channelId));\n                    }\n                },\n            },\n            close: {\n                configurable: true,\n                writable: true,\n                value: (err = null) => {\n                    const record = channelStore.get(channelId);\n                    if (record) {\n                        channelStore.delete(channelId);\n                        const channel = record.channel;\n                        record.writers.forEach(write => {\n                            write(\"close\", err, channelId);\n                        });\n                        // recover to the original methods\n                        Object.defineProperties(channel, {\n                            send: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.send,\n                            },\n                            close: {\n                                configurable: true,\n                                writable: true,\n                                value: record.raw.close,\n                            },\n                        });\n                        channel.close(err);\n                    }\n                },\n            },\n        });\n    }\n    else {\n        const record = channelStore.get(channelId);\n        record.writers.push(channelWrite);\n    }\n}\nexport function wrapChannel(channel, channelWrite) {\n    wireChannel(channel, channelWrite);\n    return { \"@@type\": \"Channel\", \"@@id\": channel[id], \"capacity\": channel.capacity };\n}\nexport function unwrapChannel(obj, channelWrite) {\n    var _a, _b;\n    const channelId = obj[\"@@id\"];\n    let channel = (_a = channelStore.get(channelId)) === null || _a === void 0 ? void 0 : _a.channel;\n    if (!channel) {\n        channel = Object.assign(Object.create(Channel.prototype), {\n            [id]: channelId,\n            capacity: (_b = obj.capacity) !== null && _b !== void 0 ? _b : 0,\n            buffer: [],\n            producers: [],\n            consumers: [],\n            error: null,\n            state: 1,\n        });\n    }\n    wireChannel(channel, channelWrite);\n    return channel;\n}\n//# sourceMappingURL=channel.js.map","import { trim, trimEnd } from \"../string/index.ts\";\nexport function isNotQuery(str) {\n    return str[0] !== \"?\" && str[0] !== \"#\";\n}\nexport function isVolume(path, strict = false) {\n    return strict ? /^[a-z]:$/i.test(path) : /^[a-z]:(\\\\)?$/i.test(path);\n}\n/**\n * Checks if the given `path` is a Windows specific path.\n * @experimental\n */\nexport function isWindowsPath(path) {\n    return /^[a-z]:/i.test(path) && path.slice(1, 4) !== \"://\";\n}\n/**\n * Checks if the given `path` is a Posix specific path.\n * @experimental\n */\nexport function isPosixPath(path) {\n    return /^\\//.test(path);\n}\n/**\n * Checks if the given string is a URL, whether standard or non-standard.\n * @experimental\n */\nexport function isUrl(str) {\n    return /^[a-z](([a-z\\-]+)?:\\/\\/\\S+|[a-z\\-]+:\\/\\/$)/i.test(str) || isFileUrl(str);\n}\n/**\n * Checks if the given string is a file URL, whether with or without `//`.\n * @experimental\n */\nexport function isFileUrl(str) {\n    return /^file:((\\/\\/|\\/)\\S+|\\/?$)/i.test(str);\n}\nexport function isFileProtocol(path) {\n    return /^file:(\\/\\/)?$/i.test(path);\n}\n/**\n * Checks if the given `path` is an absolute path.\n * @experimental\n */\nexport function isAbsolute(path) {\n    return isPosixPath(path) || isWindowsPath(path) || isUrl(path);\n}\n/**\n * Checks if the `path` ends with the given `sub` path. This function ignores\n * the query string and the hash string, and is separator insensitive.\n * @experimental\n */\nexport function endsWith(path, sub) {\n    const paths = split(path).filter(isNotQuery);\n    const subs = split(sub).filter(isNotQuery);\n    if (paths.length < subs.length) {\n        return false;\n    }\n    else if (!subs.length) {\n        return true;\n    }\n    if (isVolume(paths[0])) {\n        paths[0] = paths[0].toLowerCase();\n    }\n    if (isVolume(subs[0])) {\n        subs[0] = subs[0].toLowerCase();\n    }\n    paths.reverse();\n    subs.reverse();\n    for (let i = 0; i < subs.length; i++) {\n        if (subs[i] !== paths[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Splits the `path` into well-formed segments.\n * @experimental\n */\nexport function split(path) {\n    if (!path) {\n        return [];\n    }\n    else if (isUrl(path)) {\n        const { protocol, host, pathname, search, hash } = new URL(path);\n        const origin = protocol + \"//\" + host;\n        if (pathname === \"/\") {\n            if (search && hash) {\n                return [origin, search, hash];\n            }\n            else if (search) {\n                return [origin, search];\n            }\n            else if (hash) {\n                return [origin, hash];\n            }\n            else {\n                return [origin];\n            }\n        }\n        else {\n            const segments = trim(pathname, \"/\").split(/[/\\\\]+/);\n            if (search && hash) {\n                return [origin, ...segments, search, hash];\n            }\n            else if (search) {\n                return [origin, ...segments, search];\n            }\n            else if (hash) {\n                return [origin, ...segments, hash];\n            }\n            else {\n                return [origin, ...segments];\n            }\n        }\n    }\n    else if (isWindowsPath(path)) {\n        const [_, volume, ...segments] = split(\"file:///\" + path.replace(/[/\\\\]+/g, \"/\"));\n        return [volume + \"\\\\\", ...segments];\n    }\n    else if (isPosixPath(path)) {\n        const [_, ...segments] = split(\"file://\" + path.replace(/[/\\\\]+/g, \"/\"));\n        return [\"/\", ...segments];\n    }\n    else { // relative path\n        path = path.replace(/[/\\\\]+/g, \"/\");\n        const [_path, query] = path.split(\"?\");\n        if (query) {\n            const segments = _path ? trimEnd(_path, \"/\").split(\"/\") : [];\n            const [search, hash] = query.split(\"#\");\n            if (hash) {\n                return [...segments, \"?\" + search, \"#\" + hash];\n            }\n            else {\n                return [...segments, \"?\" + search];\n            }\n        }\n        else {\n            const [pathname, hash] = path.split(\"#\");\n            const segments = pathname ? trimEnd(pathname, \"/\").split(\"/\") : [];\n            if (hash) {\n                return [...segments, \"#\" + hash];\n            }\n            else {\n                return segments;\n            }\n        }\n    }\n}\n//# sourceMappingURL=util.js.map","/**\n * Platform-independent utility functions for dealing with system paths and URLs.\n * @experimental\n * @module\n */\nimport { stripEnd, trim } from \"../string/index.ts\";\nimport { endsWith, isAbsolute, isFileProtocol, isFileUrl, isNotQuery, isPosixPath, isUrl, isVolume, isWindowsPath, split, } from \"./util.ts\";\nexport { isWindowsPath, isPosixPath, isUrl, isFileUrl, isAbsolute, endsWith };\n/**\n * Platform-specific path segment separator.\n * @experimental\n */\nexport const sep = (() => {\n    var _a, _b;\n    if (typeof Deno === \"object\" && typeof ((_a = Deno.build) === null || _a === void 0 ? void 0 : _a.os) === \"string\") { // Deno\n        if (Deno.build.os === \"windows\") {\n            return \"\\\\\";\n        }\n    }\n    else if (typeof process === \"object\" && !!((_b = process.versions) === null || _b === void 0 ? void 0 : _b.node)) { // Node.js\n        if (process.platform === \"win32\") {\n            return \"\\\\\";\n        }\n    }\n    return \"/\";\n})();\n/**\n * Returns the current working directory.\n * @experimental\n */\nexport function cwd() {\n    if (typeof Deno === \"object\" && typeof Deno.cwd === \"function\") {\n        return Deno.cwd();\n    }\n    else if (typeof process === \"object\" && typeof process.cwd === \"function\") {\n        return process.cwd();\n    }\n    else if (typeof location === \"object\" && location.origin) {\n        return location.origin + (location.pathname === \"/\" ? \"\" : location.pathname);\n    }\n    else {\n        throw new Error(\"Unable to determine the current working directory.\");\n    }\n}\n/**\n * Concatenates all given `segments` into a well-formed path.\n * @experimental\n */\nexport function join(...segments) {\n    segments = segments.filter(s => s !== \"\");\n    if (!segments.length) {\n        return \".\";\n    }\n    const paths = [];\n    for (let i = 0; i < segments.length; i++) {\n        const segment = segments[i];\n        for (const _segment of split(segment)) {\n            if (_segment === \"..\") {\n                if (!paths.length || paths.every(p => p === \"..\")) {\n                    paths.push(\"..\");\n                }\n                else if (paths.length > 1 || (paths[0] !== \"/\" && !isVolume(paths[0]))) {\n                    paths.pop();\n                }\n            }\n            else if (_segment && _segment !== \".\") {\n                paths.push(_segment);\n            }\n        }\n    }\n    const start = paths[0];\n    const _sep = isUrl(start) || isPosixPath(start) ? \"/\" : isWindowsPath(start) ? \"\\\\\" : sep;\n    let path = \"\";\n    for (let i = 0; i < paths.length; i++) {\n        const segment = paths[i];\n        if (segment) {\n            if (!path) {\n                path = segment;\n            }\n            else if (segment[0] === \"?\" || segment[0] === \"#\") {\n                path += segment;\n            }\n            else if (path === \"/\") {\n                path += trim(segment, \"/\\\\\");\n            }\n            else if (isVolume(path)) {\n                path += isVolume(path, true) ? \"\\\\\" + segment : segment;\n            }\n            else if (segment) {\n                path += _sep + trim(segment, \"/\\\\\");\n            }\n        }\n    }\n    return path || \".\";\n}\nfunction _normalize(...segments) {\n    const path = join(...segments);\n    return isFileProtocol(path) ? path + \"/\" : path;\n}\n/**\n * Normalizes the given `path`, resolving `..` and `.` segments. Note that\n * resolving these segments does not necessarily mean that all will be\n * eliminated. A `..` at the top-level will be preserved, and an empty path is\n * canonically `.`.\n * @experimental\n */\nexport function normalize(path) {\n    return _normalize(path);\n}\n/**\n * Similar to {@link normalize}, but also remove the search string and hash string if\n * present.\n */\nexport function sanitize(path) {\n    return _normalize(...split(path).filter(isNotQuery));\n}\n/**\n * Resolves path `segments` into a well-formed path.\n * @experimental\n */\nexport function resolve(...segments) {\n    segments = segments.filter(s => s !== \"\");\n    const _cwd = cwd();\n    if (!segments.length) {\n        return _cwd;\n    }\n    segments = isAbsolute(segments[0]) ? segments : [_cwd, ...segments];\n    let _paths = [];\n    for (let i = 0; i < segments.length; i++) {\n        const path = segments[i];\n        if (isAbsolute(path)) {\n            _paths = [];\n        }\n        _paths.push(path);\n    }\n    return _normalize(..._paths);\n}\n/**\n * Returns the parent path of the given `path`.\n * @experimental\n */\nexport function dirname(path) {\n    if (isUrl(path)) {\n        const { protocol, host, pathname } = new URL(path);\n        const origin = protocol + \"//\" + host;\n        const _dirname = dirname(pathname);\n        if (_dirname === \"/\") {\n            return isFileProtocol(origin) ? origin + \"/\" : origin;\n        }\n        else {\n            return origin + _dirname;\n        }\n    }\n    else {\n        const segments = split(path).filter(isNotQuery);\n        const last = segments.pop();\n        if (segments.length) {\n            return join(...segments);\n        }\n        else if (last === \"/\") {\n            return \"/\";\n        }\n        else if (isVolume(last, true)) {\n            return last + \"\\\\\";\n        }\n        else if (isVolume(last)) {\n            return last;\n        }\n        else {\n            return \".\";\n        }\n    }\n}\n/**\n * Return the last portion of the given `path`. Trailing directory separators\n * are ignored, and optional `suffix` is removed.\n * @experimental\n */\nexport function basename(path, suffix = \"\") {\n    if (isUrl(path)) {\n        const { pathname } = new URL(path);\n        return basename(pathname, suffix);\n    }\n    else {\n        const segments = split(path).filter(isNotQuery);\n        const _basename = segments.pop();\n        if (!_basename || _basename === \"/\" || isVolume(_basename)) {\n            return \"\";\n        }\n        else if (suffix) {\n            return stripEnd(_basename, suffix);\n        }\n        else {\n            return _basename;\n        }\n    }\n}\n/**\n * Returns the extension of the `path` with leading period.\n * @experimental\n */\nexport function extname(path) {\n    const base = basename(path);\n    const index = base.lastIndexOf(\".\");\n    if (index === -1) {\n        return \"\";\n    }\n    else {\n        return base.slice(index);\n    }\n}\n//# sourceMappingURL=index.js.map","import { Channel } from \"../../chan.ts\";\nimport { isBun, isDeno, isNode, isNodePrior14 } from \"../constants.ts\";\nimport { handleChannelMessage, isChannelMessage, wrapChannel } from \"./channel.ts\";\nimport { resolveRemoteModuleUrl } from \"./module.ts\";\nimport { isPlainObject } from \"../../object/index.ts\";\nimport { serial } from \"../../number/index.ts\";\nimport { Exception, fromErrorEvent, fromObject, isAggregateError, isDOMException, toObject, } from \"../../error/index.ts\";\nimport * as path from \"../../path/index.ts\";\nconst workerIdCounter = serial(true);\nlet workerPool = [];\nlet gcTimer;\nexport const remoteTasks = new Map();\nexport const getMaxParallelism = (async () => {\n    if (isNode) {\n        const os = await import(\"os\");\n        if (typeof os.availableParallelism === \"function\") {\n            return os.availableParallelism();\n        }\n        else {\n            return os.cpus().length;\n        }\n    }\n    else if (typeof navigator === \"object\" && navigator.hardwareConcurrency) {\n        return navigator.hardwareConcurrency;\n    }\n    else {\n        return 8;\n    }\n})();\nexport function isCallResponse(msg) {\n    return msg\n        && typeof msg === \"object\"\n        && [\"return\", \"yield\", \"error\", \"gen\"].includes(msg.type);\n}\nfunction getModuleDir(importMetaPath) {\n    if (path.extname(importMetaPath) === \".ts\") {\n        return path.resolve(importMetaPath, \"../../..\");\n    }\n    let _dirname = path.dirname(importMetaPath);\n    if (path.endsWith(_dirname, \"jsext/bundle\")) {\n        // The application imports the bundled version of this module\n        return path.dirname(_dirname);\n    }\n    else {\n        // The application imports the compiled version of this module\n        return path.resolve(_dirname, \"../../..\");\n    }\n}\nasync function getWorkerEntry(parallel = {}) {\n    if (isNode || isBun) {\n        if (parallel.workerEntry) {\n            return parallel.workerEntry;\n        }\n        const { fileURLToPath } = await import(\"url\");\n        const _filename = fileURLToPath(import.meta.url);\n        if (_filename === process.argv[1]) {\n            // The code is bundled, try the worker entry in node_modules\n            // (hope it exists).\n            const _dirname = path.join(path.cwd(), \"node_modules/@ayonli/jsext\");\n            if (isBun) {\n                if (path.extname(_filename) === \".ts\") {\n                    return path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    return path.join(_dirname, \"bundle/worker.mjs\");\n                }\n            }\n            else {\n                return path.join(_dirname, \"bundle/worker-node.mjs\");\n            }\n        }\n        else {\n            const _dirname = getModuleDir(_filename);\n            if (isBun) {\n                if (path.extname(_filename) === \".ts\") {\n                    return path.join(_dirname, \"worker.ts\");\n                }\n                else {\n                    return path.join(_dirname, \"bundle/worker.mjs\");\n                }\n            }\n            else {\n                return path.join(_dirname, \"bundle/worker-node.mjs\");\n            }\n        }\n    }\n    else if (isDeno) {\n        if (parallel.workerEntry) {\n            return parallel.workerEntry;\n        }\n        else if (import.meta[\"main\"]) {\n            // The code is bundled, try the remote worker entry.\n            if (import.meta.url.includes(\"jsr.io\")) {\n                return \"jsr:@ayonli/jsext/worker.ts\";\n            }\n            else {\n                return \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            }\n        }\n        else {\n            if (import.meta.url.includes(\"jsr.io\")) {\n                return \"jsr:@ayonli/jsext/worker.ts\";\n            }\n            else {\n                const _dirname = getModuleDir(import.meta.url);\n                return path.join(_dirname, \"/worker.ts\");\n            }\n        }\n    }\n    else {\n        if (parallel.workerEntry) {\n            if (path.isUrl(parallel.workerEntry)) {\n                return await resolveRemoteModuleUrl(parallel.workerEntry);\n            }\n            else {\n                return parallel.workerEntry;\n            }\n        }\n        else {\n            const url = \"https://ayonli.github.io/jsext/bundle/worker.mjs\";\n            return await resolveRemoteModuleUrl(url);\n        }\n    }\n}\nexport async function createWorker(options) {\n    let { adapter = \"worker_threads\", parallel } = options;\n    const entry = await getWorkerEntry(parallel);\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const { fork } = await import(\"child_process\");\n            const serialization = isNodePrior14 ? \"json\" : \"advanced\";\n            const worker = fork(entry, [\"--worker-thread\"], {\n                stdio: \"inherit\",\n                serialization,\n            });\n            const workerId = worker.pid;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"message\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_process\",\n            };\n        }\n        else if (isNode) {\n            const { Worker } = await import(\"worker_threads\");\n            const worker = new Worker(entry, { argv: [\"--worker-thread\"] });\n            const workerId = worker.threadId;\n            await new Promise((resolve, reject) => {\n                worker.once(\"error\", reject);\n                worker.once(\"online\", () => {\n                    worker.off(\"error\", reject);\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"node_worker\",\n            };\n        }\n        else { // isBun\n            const worker = new Worker(entry, { type: \"module\" });\n            const workerId = workerIdCounter.next().value;\n            await new Promise((resolve, reject) => {\n                worker.onerror = (ev) => {\n                    reject(new Error(ev.message || \"unable to start the worker\"));\n                };\n                worker.addEventListener(\"open\", () => {\n                    worker.onerror = null;\n                    resolve();\n                });\n            });\n            return {\n                worker,\n                workerId,\n                kind: \"bun_worker\",\n            };\n        }\n    }\n    else { // Deno and browsers\n        const worker = new Worker(entry, { type: \"module\" });\n        const workerId = workerIdCounter.next().value;\n        return {\n            worker,\n            workerId,\n            kind: \"web_worker\",\n        };\n    }\n}\nfunction handleWorkerMessage(poolRecord, worker, msg) {\n    var _a, _b, _c, _d;\n    if (isChannelMessage(msg)) {\n        handleChannelMessage(msg);\n    }\n    else if (isCallResponse(msg) && msg.taskId) {\n        const task = remoteTasks.get(msg.taskId);\n        if (!task)\n            return;\n        if (msg.type === \"return\" || msg.type === \"error\") {\n            if (msg.type === \"error\") {\n                const err = isPlainObject(msg.error)\n                    ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                    : msg.error;\n                if (err instanceof Error &&\n                    (err.message.includes(\"not be cloned\")\n                        || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                    )) {\n                    Object.defineProperty(err, \"stack\", {\n                        configurable: true,\n                        enumerable: false,\n                        writable: true,\n                        value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                            + `at ${task.fn} (${task.module})`,\n                    });\n                }\n                if (task.resolver) {\n                    task.resolver.reject(err);\n                    if (task.channel) {\n                        task.channel.close();\n                    }\n                }\n                else if (task.channel) {\n                    task.channel.close(err);\n                }\n                else {\n                    task.error = err;\n                }\n            }\n            else {\n                const value = unwrapReturnValue(msg.value);\n                if (task.resolver) {\n                    task.resolver.resolve(value);\n                }\n                else {\n                    task.result = { value };\n                }\n                if (task.channel) {\n                    task.channel.close();\n                }\n            }\n            poolRecord.tasks.delete(msg.taskId);\n            if (!poolRecord.tasks.size && (isNode || isBun)) {\n                // Allow the main thread to exit if the event\n                // loop is empty.\n                worker.unref();\n            }\n        }\n        else if (msg.type === \"yield\") {\n            const value = unwrapReturnValue(msg.value);\n            (_c = task.channel) === null || _c === void 0 ? void 0 : _c.send({ value, done: msg.done });\n            if (msg.done) {\n                // The final message of yield event is the\n                // return value.\n                handleWorkerMessage(poolRecord, worker, {\n                    type: \"return\",\n                    value,\n                    taskId: msg.taskId,\n                });\n            }\n        }\n        else if (msg.type === \"gen\") {\n            (_d = task.generate) === null || _d === void 0 ? void 0 : _d.call(task);\n        }\n    }\n}\nfunction handleWorkerClose(poolRecord, err) {\n    for (const taskId of poolRecord.tasks) {\n        poolRecord.tasks.delete(taskId);\n        const task = remoteTasks.get(taskId);\n        if (task) {\n            if (task.resolver) {\n                task.resolver.reject(err);\n                if (task.channel) {\n                    task.channel.close();\n                }\n            }\n            else if (task.channel) {\n                task.channel.close(err);\n            }\n            else {\n                task.error = err;\n            }\n        }\n    }\n    workerPool = workerPool.filter(item => item !== poolRecord);\n}\nexport async function acquireWorker(taskId, parallel) {\n    const maxWorkers = parallel.maxWorkers || await getMaxParallelism;\n    let poolRecord = workerPool.find(item => !item.tasks.size);\n    if (poolRecord) {\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        workerPool.push(poolRecord = {\n            getWorker: (async () => {\n                const worker = (await createWorker({ parallel }))\n                    .worker;\n                const handleMessage = handleWorkerMessage.bind(void 0, poolRecord, worker);\n                const handleClose = handleWorkerClose.bind(void 0, poolRecord);\n                if (isNode) {\n                    worker.on(\"message\", handleMessage)\n                        .on(\"error\", handleClose); // In Node.js, worker will exit once erred.\n                }\n                else if (isBun) {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = () => _worker.terminate(); // terminate once erred\n                    _worker.addEventListener(\"close\", ((ev) => {\n                        handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"));\n                    }));\n                }\n                else {\n                    const _worker = worker;\n                    _worker.onmessage = (ev) => handleMessage(ev.data);\n                    _worker.onerror = (ev) => {\n                        var _a;\n                        _worker.terminate(); // ensure termination\n                        handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"));\n                    };\n                }\n                return worker;\n            })(),\n            tasks: new Set(),\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                // GC: clean long-time unused workers\n                const now = Date.now();\n                const idealItems = [];\n                workerPool = workerPool.filter(item => {\n                    const ideal = !item.tasks.size\n                        && (now - item.lastAccess) >= 10000;\n                    if (ideal) {\n                        idealItems.push(item);\n                    }\n                    return !ideal;\n                });\n                idealItems.forEach(async (item) => {\n                    const worker = await item.getWorker;\n                    await worker.terminate();\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        poolRecord = workerPool[taskId % workerPool.length];\n        poolRecord.lastAccess = Date.now();\n    }\n    poolRecord.tasks.add(taskId);\n    const worker = await poolRecord.getWorker;\n    if (isNode || isBun) {\n        // Prevent premature exit in the main thread.\n        worker.ref();\n    }\n    return worker;\n}\nexport function wrapArgs(args, getWorker) {\n    const transferable = [];\n    args = args.map(arg => {\n        if (arg instanceof Channel) {\n            return wrapChannel(arg, (type, msg, channelId) => {\n                getWorker.then(worker => {\n                    if (typeof worker[\"postMessage\"] === \"function\") {\n                        try {\n                            worker.postMessage({\n                                type,\n                                value: msg,\n                                channelId,\n                            });\n                        }\n                        catch (err) {\n                            // Suppress error when sending `close` command to\n                            // the channel in the worker thread when the thread\n                            // is terminated. This situation often occurs when\n                            // using `run()` to call function and the `result()`\n                            // is called before `channel.close()`.\n                            if (!(type === \"close\" &&\n                                String(err).includes(\"Worker has been terminated\"))) {\n                                throw err;\n                            }\n                        }\n                    }\n                    else {\n                        worker.send({\n                            type,\n                            value: msg,\n                            channelId,\n                        });\n                    }\n                });\n            });\n        }\n        else if ((arg instanceof Exception)\n            || isDOMException(arg)\n            || isAggregateError(arg)) {\n            return toObject(arg);\n        }\n        if (arg instanceof ArrayBuffer) {\n            transferable.push(arg);\n        }\n        else if (isPlainObject(arg)) {\n            for (const key of Object.getOwnPropertyNames(arg)) {\n                const value = arg[key];\n                if (value instanceof ArrayBuffer) {\n                    transferable.push(value);\n                }\n                else if ((value instanceof Exception)\n                    || isDOMException(value)\n                    || isAggregateError(value)) {\n                    arg[key] = toObject(value);\n                }\n            }\n        }\n        else if (Array.isArray(arg)) {\n            arg = arg.map(item => {\n                if (item instanceof ArrayBuffer) {\n                    transferable.push(item);\n                    return item;\n                }\n                else if ((item instanceof Exception)\n                    || isDOMException(item)\n                    || isAggregateError(item)) {\n                    return toObject(item);\n                }\n                else {\n                    return item;\n                }\n            });\n        }\n        return arg;\n    });\n    return { args, transferable };\n}\nexport function unwrapReturnValue(value) {\n    if (isPlainObject(value) && (value[\"@@type\"] === \"Exception\" ||\n        value[\"@@type\"] === \"DOMException\" ||\n        value[\"@@type\"] === \"AggregateError\")) {\n        return fromObject(value);\n    }\n    return value;\n}\n//# sourceMappingURL=threads.js.map","/**\n * This module provides JavaScript the ability to run functions in parallel\n * threads and take advantage of multi-core CPUs, inspired by Golang.\n * @module\n */\nimport { ThenableAsyncGenerator } from \"./external/thenable-generator/index.ts\";\nimport chan from \"./chan.ts\";\nimport { serial } from \"./number/index.ts\";\nimport { isBun, isDeno, isNode, IsPath, isMainThread } from \"./parallel/constants.ts\";\nimport { resolveModule, sanitizeModuleId } from \"./parallel/utils/module.ts\";\nimport { acquireWorker, remoteTasks, wrapArgs } from \"./parallel/utils/threads.ts\";\nconst taskIdCounter = serial(true);\nasync function safeRemoteCall(worker, req, transferable, taskId) {\n    try {\n        worker.postMessage(req, transferable);\n    }\n    catch (err) {\n        remoteTasks.delete(taskId);\n        if (typeof worker[\"unref\"] === \"function\") {\n            worker.unref();\n        }\n        throw err;\n    }\n}\nfunction createRemoteCall(module, fn, args) {\n    const taskId = taskIdCounter.next().value;\n    remoteTasks.set(taskId, { module, fn });\n    let getWorker = acquireWorker(taskId, parallel);\n    const { args: _args, transferable } = wrapArgs(args, getWorker);\n    getWorker = getWorker.then(async (worker) => {\n        await safeRemoteCall(worker, {\n            type: \"call\",\n            module,\n            fn,\n            args: _args,\n            taskId,\n        }, transferable, taskId);\n        return worker;\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                remoteTasks.delete(taskId);\n                return onrejected === null || onrejected === void 0 ? void 0 : onrejected(task.error);\n            }\n            else if (task.result) {\n                remoteTasks.delete(taskId);\n                return onfulfilled === null || onfulfilled === void 0 ? void 0 : onfulfilled(task.result.value);\n            }\n            else {\n                return getWorker.then(() => new Promise((resolve, reject) => {\n                    task.resolver = {\n                        resolve: (value) => {\n                            remoteTasks.delete(taskId);\n                            resolve(value);\n                        },\n                        reject: (err) => {\n                            remoteTasks.delete(taskId);\n                            reject(err);\n                        }\n                    };\n                })).then(onfulfilled, onrejected);\n            }\n        },\n        async next(input) {\n            var _a;\n            const task = remoteTasks.get(taskId);\n            if (task.error) {\n                const err = task.error;\n                remoteTasks.delete(taskId);\n                throw err;\n            }\n            else if (task.result) {\n                const value = task.result.value;\n                remoteTasks.delete(taskId);\n                return { value, done: true };\n            }\n            else {\n                (_a = task.channel) !== null && _a !== void 0 ? _a : (task.channel = chan(Infinity));\n                const worker = await getWorker;\n                if (!task.generate) {\n                    await new Promise(resolve => {\n                        task.generate = resolve;\n                    });\n                }\n                const { args, transferable } = wrapArgs([input], getWorker);\n                await safeRemoteCall(worker, {\n                    type: \"next\",\n                    args: args,\n                    taskId,\n                }, transferable, taskId);\n                return await task.channel.recv();\n            }\n        },\n        async return(value) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            const { args, transferable } = wrapArgs([value], getWorker);\n            await safeRemoteCall(worker, {\n                type: \"return\",\n                args: args,\n                taskId,\n            }, transferable, taskId);\n            return { value, done: true };\n        },\n        async throw(err) {\n            remoteTasks.delete(taskId);\n            const worker = await getWorker;\n            await safeRemoteCall(worker, {\n                type: \"throw\",\n                args: [err],\n                taskId,\n            }, transferable, taskId);\n            throw err;\n        },\n    });\n}\nfunction createLocalCall(module, fn, args) {\n    const getReturns = resolveModule(module).then(mod => {\n        return mod[fn](...args);\n    });\n    return new ThenableAsyncGenerator({\n        then(onfulfilled, onrejected) {\n            return getReturns.then(onfulfilled, onrejected);\n        },\n        async next(input) {\n            const gen = await getReturns;\n            return await gen.next(input);\n        },\n        async return(value) {\n            const gen = await getReturns;\n            return await gen.return(value);\n        },\n        async throw(err) {\n            const gen = await getReturns;\n            return gen.throw(err);\n        },\n    });\n}\nfunction extractBaseUrl(stackTrace) {\n    var _a, _b, _c;\n    let lines = stackTrace.split(\"\\n\");\n    const offset = lines.findIndex(line => line === \"Error\");\n    if (offset !== -1) {\n        lines = lines.slice(offset); // fix for tsx in Node.js v16\n    }\n    let callSite;\n    if ((_a = lines[0]) === null || _a === void 0 ? void 0 : _a.startsWith(\"Error\")) { // chromium browsers\n        callSite = lines[2];\n    }\n    else {\n        callSite = lines[1];\n    }\n    let baseUrl;\n    if (callSite) {\n        let start = callSite.lastIndexOf(\"(\");\n        let end = 0;\n        if (start !== -1) {\n            start += 1;\n            end = callSite.indexOf(\")\", start);\n            callSite = callSite.slice(start, end);\n        }\n        else if (callSite.startsWith(\"    at \")) {\n            callSite = callSite.slice(7); // remove leading `    at `\n        }\n        else if (typeof location === \"object\") { // general browsers\n            start = (_c = (_b = callSite.match(/(https?|file):/)) === null || _b === void 0 ? void 0 : _b.index) !== null && _c !== void 0 ? _c : -1;\n            if (start > 0) {\n                callSite = callSite.slice(start);\n            }\n        }\n        baseUrl = callSite.replace(/:\\d+:\\d+$/, \"\");\n        if (!/^(https?|file):/.test(baseUrl)) {\n            if (IsPath.test(baseUrl)) {\n                baseUrl = \"file://\" + baseUrl;\n            }\n            else if (isDeno) {\n                baseUrl = \"file://\" + Deno.cwd() + \"/\";\n            }\n            else if (isNode || isBun) {\n                baseUrl = \"file://\" + process.cwd() + \"/\";\n            }\n            else if (typeof location === \"object\") {\n                baseUrl = location.href;\n            }\n            else {\n                baseUrl = \"\";\n            }\n        }\n    }\n    return baseUrl;\n}\n/**\n * Wraps a module so its functions will be run in worker threads.\n *\n * In Node.js and Bun, the `module` can be either an ES module or a CommonJS\n * module, **node_modules** and built-in modules are also supported.\n *\n * In browsers and Deno, the `module` can only be an ES module.\n *\n * Data are cloned and transferred between threads via **Structured Clone**\n * **Algorithm**.\n *\n * Apart from the standard data types supported by the algorithm, {@link Channel}\n * can also be used to transfer data between threads. To do so, just passed a\n * channel instance to the threaded function. But be aware, channel can only be\n * used as a parameter, return a channel from the threaded function is not\n * allowed. Once passed, the data can only be transferred into and out-from the\n * function.\n *\n * The difference between using a channel and a generator function for streaming\n * processing is, for a generator function, `next(value)` is coupled with a\n * `yield value`, the process is blocked between **next** calls, channel doesn't\n * have this limit, we can use it to stream all the data into the function\n * before processing and receiving any result.\n *\n * The threaded function also supports `ArrayBuffer`s as transferable objects.\n * If an array buffer is presented as an argument or the direct property of an\n * argument (assume it's a plain object), or the array buffer is the return\n * value or the direct property of the return value (assume it's a plain object),\n * it automatically becomes a transferrable object and will be transferred to\n * the other thread instead of being cloned. This strategy allows us to easily\n * compose objects like `Request` and `Response` instances into plain objects\n * and pass them between threads without overhead.\n *\n * @remarks\n * If the current module is already in a worker thread, use this function won't\n * create another worker thread.\n *\n * @remarks\n * Cloning and transferring data between the main thread and worker threads are\n * very heavy and slow, worker threads are only intended to run CPU-intensive\n * tasks or divide tasks among multiple threads, they have no advantage when\n * performing IO-intensive tasks such as handling HTTP requests, always prefer\n * `cluster` module for that kind of purpose.\n *\n * @remarks\n * For error instances, only the following types are guaranteed to be sent and\n * received properly between threads.\n *\n * - `Error`\n * - `EvalError`\n * - `RangeError`\n * - `ReferenceError`\n * - `SyntaxError`\n * - `TypeError`\n * - `URIError`\n * - `AggregateError` (as arguments, return values, thrown values, or shallow\n *   object properties)\n * - `Exception` (as arguments, return values, thrown values, or shallow object\n *   properties)\n * - `DOMException` (as arguments, return values, thrown values, or shallow\n *   object properties)\n *\n * In order to handle errors properly between threads, throw well-known error\n * types or use `Exception` (or `DOMException`) with error names in the threaded\n * function.\n *\n * @example\n * ```ts\n * // regular or async function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n * console.log(await mod.greet(\"World\")); // Hi, World\n * ```\n *\n * @example\n * ```ts\n * // generator or async generator function\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * for await (const word of mod.sequence([\"foo\", \"bar\"])) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // use channel\n * import parallel from \"@ayonli/jsext/parallel\";\n * import chan from \"@ayonli/jsext/chan\";\n * import { sequence } from \"@ayonli/jsext/number\";\n * import { readAll } from \"@ayonli/jsext/read\";\n *\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const channel = chan<{ value: number; done: boolean; }>();\n * const length = mod.twoTimesValues(channel);\n *\n * for (const value of sequence(0, 9)) {\n *     await channel.push({ value, done: value === 9 });\n * }\n *\n * const results = (await readAll(channel)).map(item => item.value);\n * console.log(results);      // [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n * console.log(await length); // 10\n * ```\n *\n * @example\n * ```ts\n * import parallel from \"@ayonli/jsext/parallel\";\n *\n * // use transferrable\n * const mod = parallel(() => import(\"./examples/worker.mjs\"));\n *\n * const arr = Uint8Array.from([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n * const length = await mod.transfer(arr.buffer);\n *\n * console.log(length);     // 10\n * console.log(arr.length); // 0\n * ```\n *\n * @remarks\n * If the application is to be bundled, use the following syntax to link the\n * module instead, it will prevent the bundler from including the file and\n * rewriting the path.\n *\n * ```ts\n * const mod = parallel<typeof import(\"./examples/worker.mjs\")>(\"./examples/worker.mjs\");\n * ```\n */\nfunction parallel(module) {\n    let modId = sanitizeModuleId(module, true);\n    let baseUrl;\n    if (IsPath.test(modId)) {\n        if (typeof Error.captureStackTrace === \"function\") {\n            const trace = {};\n            Error.captureStackTrace(trace);\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n        else {\n            const trace = new Error(\"\");\n            baseUrl = extractBaseUrl(trace.stack);\n        }\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    return new Proxy(Object.create(null), {\n        get: (target, prop) => {\n            if (Reflect.has(target, prop)) {\n                return target[prop];\n            }\n            else if (typeof prop === \"symbol\") {\n                return undefined;\n            }\n            const obj = {\n                // This syntax will give our remote function a name.\n                [prop]: (...args) => {\n                    if (isMainThread) {\n                        return createRemoteCall(modId, prop, args);\n                    }\n                    else {\n                        return createLocalCall(modId, prop, args);\n                    }\n                }\n            };\n            return obj[prop];\n        }\n    });\n}\n(function (parallel) {\n    /**\n     * The maximum number of workers allowed to exist at the same time. If not\n     * set, the program by default uses CPU core numbers as the limit.\n     */\n    parallel.maxWorkers = undefined;\n    /**\n     * In browsers, by default, the program loads the worker entry directly from\n     * GitHub, which could be slow due to poor internet connection, we can copy\n     * the entry file `bundle/worker.mjs` to a local path of our website and set\n     * this option to that path so that it can be loaded locally.\n     *\n     * Or, if the code is bundled, the program won't be able to automatically\n     * locate the entry file in the file system, in such case, we can also copy\n     * the entry file (`bundle/worker.mjs` for Bun, Deno and the browser,\n     * `bundle/worker-node.mjs` for Node.js) to a local directory and supply\n     * this option instead.\n     */\n    parallel.workerEntry = undefined;\n})(parallel || (parallel = {}));\nexport default parallel;\n//# sourceMappingURL=parallel.js.map","/**\n * Runs a script in another thread and abort at any time.\n * @module\n */\nimport chan from \"./chan.ts\";\nimport { isPlainObject } from \"./object/index.ts\";\nimport { fromErrorEvent, fromObject } from \"./error/index.ts\";\nimport { isNode, isBun, isDeno, IsPath } from \"./parallel/constants.ts\";\nimport { sanitizeModuleId } from \"./parallel/utils/module.ts\";\nimport { handleChannelMessage, isChannelMessage } from \"./parallel/utils/channel.ts\";\nimport { getMaxParallelism, createWorker, isCallResponse, wrapArgs, unwrapReturnValue, } from \"./parallel/utils/threads.ts\";\nimport parallel from \"./parallel.ts\";\nconst workerPools = new Map();\nlet gcTimer;\n// The worker consumer queue is nothing but a callback list, once a worker is\n// available, the runner pop a consumer and run the callback, which will retry\n// gaining the worker and retry the task.\nconst workerConsumerQueue = [];\n/**\n * Runs the given `script` in a worker thread and abort the task at any time.\n *\n * This function is similar to {@link parallel}(), many features applicable to\n * `parallel()` are also applicable to `run()`, except the following:\n *\n * 1. The `script` can only be a filename, and is relative to the current\n *   working directory (or the current URL) if not absolute.\n * 2. Only one task is allow to run at a time for one worker thread, set\n *   {@link run.maxWorkers} to allow more tasks to be run at the same time if\n *   needed.\n * 3. By default, the worker thread is dropped after the task settles, set\n *   `keepAlive` option in order to reused it.\n *\n * @example\n * ```ts\n * // result\n * import run from \"@ayonli/jsext/run\";\n *\n * const job1 = await run(\"examples/worker.mjs\", [\"World\"]);\n * console.log(await job1.result()); // Hello, World\n * ```\n *\n * @example\n * ```ts\n * // iterate\n * import run from \"@ayonli/jsext/run\";\n *\n * const job2 = await run<string, [string[]]>(\n *     \"examples/worker.mjs\",\n *     [[\"foo\", \"bar\"]],\n *     { fn: \"sequence\" }\n * );\n * for await (const word of job2.iterate()) {\n *     console.log(word);\n * }\n * // output:\n * // foo\n * // bar\n * ```\n *\n * @example\n * ```ts\n * // abort\n * import run from \"@ayonli/jsext/run\";\n * import _try from \"@ayonli/jsext/try\";\n *\n * const job3 = await run<string, [string]>(\"examples/worker.mjs\", [\"foobar\"], {\n *    fn: \"takeTooLong\",\n * });\n * await job3.abort();\n * const [err, res] = await _try(job3.result());\n * console.assert(err === null);\n * console.assert(res === undefined);\n * ```\n */\nasync function run(script, args, options) {\n    var _a;\n    const maxWorkers = run.maxWorkers || parallel.maxWorkers || await getMaxParallelism;\n    const fn = (options === null || options === void 0 ? void 0 : options.fn) || \"default\";\n    let modId = sanitizeModuleId(script);\n    let baseUrl = undefined;\n    if (isDeno) {\n        baseUrl = \"file://\" + Deno.cwd() + \"/\";\n    }\n    else if (isNode || isBun) {\n        if (IsPath.test(modId)) {\n            // Only set baseUrl for relative modules, don't set it for node modules.\n            baseUrl = \"file://\" + process.cwd() + \"/\";\n        }\n    }\n    else if (typeof location === \"object\") {\n        baseUrl = location.href;\n    }\n    if (baseUrl) {\n        modId = new URL(modId, baseUrl).href;\n    }\n    const req = {\n        type: \"call\",\n        module: modId,\n        fn,\n        args: args !== null && args !== void 0 ? args : [],\n    };\n    const adapter = (options === null || options === void 0 ? void 0 : options.adapter) || \"worker_threads\";\n    const workerPool = (_a = workerPools.get(adapter)) !== null && _a !== void 0 ? _a : workerPools.set(adapter, []).get(adapter);\n    let poolRecord = workerPool.find(item => !item.busy);\n    if (poolRecord) {\n        poolRecord.busy = true;\n        poolRecord.lastAccess = Date.now();\n    }\n    else if (workerPool.length < maxWorkers) {\n        // Fill the worker pool regardless the current call should keep-alive\n        // or not, this will make sure that the total number of workers will not\n        // exceed the `run.maxWorkers`. If the the call doesn't keep-alive the\n        // worker, it will be cleaned after the call.\n        workerPool.push(poolRecord = {\n            getWorker: createWorker({ parallel, adapter }),\n            adapter,\n            busy: true,\n            lastAccess: Date.now(),\n        });\n        if (!gcTimer) {\n            gcTimer = setInterval(() => {\n                workerPools.forEach((workerPool, adapter) => {\n                    // GC: clean long-time unused workers\n                    const now = Date.now();\n                    const idealItems = [];\n                    workerPools.set(adapter, workerPool.filter(item => {\n                        const ideal = !item.busy\n                            && (now - item.lastAccess) >= 10000;\n                        if (ideal) {\n                            idealItems.push(item);\n                        }\n                        return !ideal;\n                    }));\n                    idealItems.forEach(async (item) => {\n                        const { worker } = await item.getWorker;\n                        if (typeof worker[\"terminate\"] === \"function\") {\n                            await worker\n                                .terminate();\n                        }\n                        else {\n                            worker.kill();\n                        }\n                    });\n                });\n            }, 1000);\n            if (isNode || isBun) {\n                gcTimer.unref();\n            }\n            else if (isDeno) {\n                Deno.unrefTimer(gcTimer);\n            }\n        }\n    }\n    else {\n        // Put the current call in the consumer queue if there are no workers\n        // available, once an existing call finishes, the queue will pop the its\n        // head consumer and retry.\n        return new Promise((resolve) => {\n            workerConsumerQueue.push(resolve);\n        }).then(() => run(modId, args, options));\n    }\n    let error = null;\n    let result;\n    let resolver;\n    let channel = undefined;\n    let workerId;\n    let release;\n    let terminate = () => Promise.resolve(void 0);\n    const timeout = (options === null || options === void 0 ? void 0 : options.timeout) ? setTimeout(async () => {\n        const err = new Error(`operation timeout after ${options.timeout}ms`);\n        error = err;\n        await terminate();\n        handleClose(err, true);\n    }, options.timeout) : null;\n    const handleMessage = async (msg) => {\n        var _a, _b;\n        if (isChannelMessage(msg)) {\n            await handleChannelMessage(msg);\n        }\n        else if (isCallResponse(msg)) {\n            timeout && clearTimeout(timeout);\n            if (msg.type === \"return\" || msg.type === \"error\") {\n                if (msg.type === \"error\") {\n                    const err = isPlainObject(msg.error)\n                        ? ((_a = fromObject(msg.error)) !== null && _a !== void 0 ? _a : msg.error)\n                        : msg.error;\n                    if (err instanceof Error &&\n                        (err.message.includes(\"not be cloned\")\n                            || ((_b = err.stack) === null || _b === void 0 ? void 0 : _b.includes(\"not be cloned\")) // Node.js v16-\n                            || err.message.includes(\"Do not know how to serialize\") // JSON error\n                        )) {\n                        Object.defineProperty(err, \"stack\", {\n                            configurable: true,\n                            enumerable: false,\n                            writable: true,\n                            value: (err.stack ? err.stack + \"\\n    \" : \"\")\n                                + `at ${fn} (${modId})`,\n                        });\n                    }\n                    error = err;\n                }\n                else {\n                    result = { value: unwrapReturnValue(msg.value) };\n                }\n                (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n                handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            }\n            else if (msg.type === \"yield\") {\n                const value = unwrapReturnValue(msg.value);\n                if (msg.done) {\n                    // The final message of yield event is the return value.\n                    handleMessage({\n                        type: \"return\",\n                        value,\n                    });\n                }\n                else {\n                    channel === null || channel === void 0 ? void 0 : channel.send(value);\n                }\n            }\n        }\n    };\n    const handleClose = (err, terminated = false) => {\n        var _a, _b, _c;\n        timeout && clearTimeout(timeout);\n        if (!terminated) {\n            // Release before resolve.\n            release === null || release === void 0 ? void 0 : release();\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to gain the worker.\n                (_a = workerConsumerQueue.shift()) === null || _a === void 0 ? void 0 : _a();\n            }\n        }\n        else if (poolRecord) {\n            // Clean the pool before resolve.\n            // The `workerPool` of this key in the pool map may have been\n            // modified by other routines, we need to retrieve the newest value.\n            const remainItems = (_b = workerPools.get(adapter)) === null || _b === void 0 ? void 0 : _b.filter(record => record !== poolRecord);\n            if (remainItems === null || remainItems === void 0 ? void 0 : remainItems.length) {\n                workerPools.set(adapter, remainItems);\n            }\n            else {\n                workerPools.delete(adapter);\n            }\n            if (workerConsumerQueue.length) {\n                // Queued consumer now has chance to create new worker.\n                (_c = workerConsumerQueue.shift()) === null || _c === void 0 ? void 0 : _c();\n            }\n        }\n        if (err) {\n            error !== null && error !== void 0 ? error : (error = err);\n        }\n        if (error) {\n            if (resolver) {\n                resolver.reject(error);\n                if (channel) {\n                    channel.close();\n                }\n            }\n            else if (channel) {\n                if (error instanceof Error) {\n                    channel.close(error);\n                }\n                else if (typeof error === \"string\") {\n                    channel.close(new Error(error));\n                }\n                else {\n                    // @ts-ignore\n                    channel.close(new Error(\"unknown error\", { cause: error }));\n                }\n            }\n        }\n        else {\n            result !== null && result !== void 0 ? result : (result = { value: void 0 });\n            if (resolver) {\n                resolver.resolve(result.value);\n            }\n            if (channel) {\n                channel.close();\n            }\n        }\n    };\n    const safeRemoteCall = async (worker, req, transferable = []) => {\n        try {\n            if (typeof worker[\"postMessage\"] === \"function\") {\n                worker.postMessage(req, transferable);\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    worker.send(req, err => {\n                        err ? reject(err) : resolve();\n                    });\n                });\n            }\n        }\n        catch (err) {\n            if (typeof worker[\"unref\"] === \"function\") {\n                worker.unref();\n            }\n            error = err;\n            (options === null || options === void 0 ? void 0 : options.keepAlive) || await terminate();\n            handleClose(null, !(options === null || options === void 0 ? void 0 : options.keepAlive));\n            throw err;\n        }\n    };\n    if (isNode || isBun) {\n        if (adapter === \"child_process\") {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            workerId = record.workerId;\n            worker.ref(); // prevent premature exit in the main thread\n            worker.on(\"message\", handleMessage);\n            worker.once(\"exit\", (code, signal) => {\n                if (!error && !result) {\n                    handleClose(new Error(`worker exited (${code !== null && code !== void 0 ? code : signal})`), true);\n                }\n            });\n            release = () => {\n                // allow the main thread to exit if the event loop is empty\n                worker.unref();\n                // Remove the event listener so that later calls will not mess\n                // up.\n                worker.off(\"message\", handleMessage);\n                worker.removeAllListeners(\"exit\");\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(void worker.kill(1));\n            if (error) {\n                // The worker take too long to start and timeout error already\n                // thrown.\n                await terminate();\n                throw error;\n            }\n            const { args } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req);\n        }\n        else if (isNode) {\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleErrorEvent = (err) => {\n                if (!error && !result) {\n                    // In Node.js, worker will exit once erred.\n                    handleClose(err, true);\n                }\n            };\n            workerId = record.workerId;\n            worker.ref();\n            worker.on(\"message\", handleMessage);\n            worker.once(\"error\", handleErrorEvent);\n            release = () => {\n                worker.unref();\n                worker.off(\"message\", handleMessage);\n                worker.off(\"error\", handleErrorEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = async () => void (await worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n        else { // isBun\n            const record = await poolRecord.getWorker;\n            const worker = record.worker;\n            const handleCloseEvent = ((ev) => {\n                if (!error && !result) {\n                    handleClose(new Error(ev.reason + \" (\" + ev.code + \")\"), true);\n                }\n            });\n            workerId = record.workerId;\n            worker.ref();\n            worker.onmessage = (ev) => handleMessage(ev.data);\n            worker.onerror = () => void worker.terminate(); // terminate once erred\n            worker.addEventListener(\"close\", handleCloseEvent);\n            release = () => {\n                worker.unref();\n                worker.onmessage = null;\n                worker.onerror = null;\n                worker.removeEventListener(\"close\", handleCloseEvent);\n                poolRecord && (poolRecord.busy = false);\n            };\n            terminate = () => Promise.resolve(worker.terminate());\n            if (error) {\n                await terminate();\n                throw error;\n            }\n            const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n            req.args = args;\n            await safeRemoteCall(worker, req, transferable);\n        }\n    }\n    else {\n        const record = await poolRecord.getWorker;\n        const worker = record.worker;\n        workerId = record.workerId;\n        worker.onmessage = (ev) => handleMessage(ev.data);\n        worker.onerror = (ev) => {\n            var _a;\n            if (!error && !result) {\n                worker.terminate(); // ensure termination\n                handleClose((_a = fromErrorEvent(ev)) !== null && _a !== void 0 ? _a : new Error(\"worker exited\"), true);\n            }\n        };\n        release = () => {\n            worker.onmessage = null;\n            worker.onerror = null;\n            poolRecord && (poolRecord.busy = false);\n        };\n        terminate = () => Promise.resolve(worker.terminate());\n        if (error) {\n            await terminate();\n            throw error;\n        }\n        const { args, transferable, } = wrapArgs(req.args, Promise.resolve(worker));\n        req.args = args;\n        await safeRemoteCall(worker, req, transferable);\n    }\n    return {\n        workerId,\n        async abort(reason = undefined) {\n            timeout && clearTimeout(timeout);\n            if (reason) {\n                error = reason;\n            }\n            else {\n                result = { value: void 0 };\n            }\n            await terminate();\n            handleClose(null, true);\n        },\n        async result() {\n            return await new Promise((resolve, reject) => {\n                if (error) {\n                    reject(error);\n                }\n                else if (result) {\n                    resolve(result.value);\n                }\n                else {\n                    resolver = { resolve, reject };\n                }\n            });\n        },\n        iterate() {\n            if (resolver) {\n                throw new Error(\"result() has been called\");\n            }\n            else if (result) {\n                throw new TypeError(\"the response is not iterable\");\n            }\n            channel = chan(Infinity);\n            return {\n                [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n            };\n        },\n    };\n}\n(function (run) {\n    /**\n     * The maximum number of workers allowed to exist at the same time.\n     * If not set, use the same setting as {@link parallel.maxWorkers}.\n     */\n    run.maxWorkers = undefined;\n    /** @deprecated set {@link parallel.workerEntry} instead */\n    run.workerEntry = undefined;\n})(run || (run = {}));\n// backward compatibility\nObject.defineProperties(run, {\n    workerEntry: {\n        set(v) {\n            parallel.workerEntry = v;\n        },\n        get() {\n            return parallel.workerEntry;\n        },\n    },\n});\nexport default run;\n//# sourceMappingURL=run.js.map","/**\n * Marks a function as deprecated and emit warnings when it is called.\n * @module\n */\nimport wrap from \"./wrap.ts\";\nconst isBun = typeof Bun === \"object\";\nconst warnedRecord = new Map();\nexport default function deprecate(target, ...args) {\n    var _a, _b, _c, _d;\n    if (typeof target === \"function\") {\n        const tip = (_a = args[0]) !== null && _a !== void 0 ? _a : \"\";\n        const once = (_b = args[1]) !== null && _b !== void 0 ? _b : false;\n        return wrap(target, function wrapped(fn, ...args) {\n            emitWarning(fn.name + \"()\", wrapped, tip, once, isBun ? 1 : 2);\n            return fn.apply(this, args);\n        });\n    }\n    const forFn = args[0];\n    const tip = (_c = args[1]) !== null && _c !== void 0 ? _c : \"\";\n    const once = (_d = args[2]) !== null && _d !== void 0 ? _d : false;\n    return emitWarning(target, forFn, tip, once, 1);\n}\nfunction emitWarning(target, forFn, tip, once, lineNum) {\n    var _a;\n    if (!once || !warnedRecord.has(forFn)) {\n        let trace = {};\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(trace, forFn);\n        }\n        else {\n            trace = new Error(\"\");\n        }\n        let lines = trace.stack.split(\"\\n\");\n        const offset = lines.findIndex(line => line === \"Error\");\n        if (offset !== -1) {\n            lines = lines.slice(offset); // fix for tsx in Node.js v16\n        }\n        let line = (_a = lines[lineNum]) === null || _a === void 0 ? void 0 : _a.trim();\n        let warning = `${target} is deprecated`;\n        if (tip) {\n            warning += \", \" + tip;\n        }\n        if (line) {\n            let start = line.indexOf(\"(\");\n            if (start !== -1) {\n                start += 1;\n                const end = line.indexOf(\")\", start);\n                line = line.slice(start, end);\n            }\n            warning += \" (\" + line + \")\";\n        }\n        console.warn(\"DeprecationWarning:\", warning);\n        once && warnedRecord.set(forFn, true);\n    }\n}\n//# sourceMappingURL=deprecate.js.map","import _try from \"./try.ts\";\nimport func from \"./func.ts\";\nimport wrap from \"./wrap.ts\";\nimport throttle from \"./throttle.ts\";\nimport debounce from \"./debounce.ts\";\nimport queue, { Queue } from \"./queue.ts\";\nimport lock, { Mutex } from \"./lock.ts\";\nimport read, { readAll } from \"./read.ts\";\nimport chan, { Channel } from \"./chan.ts\";\nimport parallel from \"./parallel.ts\";\nimport run from \"./run.ts\";\nimport example from \"./example.ts\";\nimport deprecate from \"./deprecate.ts\";\nimport { isClass, isSubclassOf, mixin } from \"./class.ts\";\nimport mixins from \"./mixins.ts\";\nexport { Channel, Queue, Mutex };\nexport const AsyncFunction = (async function () { }).constructor;\nexport const AsyncGeneratorFunction = (async function* () { }).constructor;\n/**\n * The entry of jsext main functions.\n */\nconst jsext = {\n    _try,\n    /** @deprecated use `_try` instead */\n    try: _try,\n    func,\n    wrap,\n    throttle,\n    debounce,\n    queue,\n    lock,\n    read,\n    readAll,\n    chan,\n    parallel,\n    run,\n    example,\n    deprecate,\n    isClass,\n    isSubclassOf,\n    mixin,\n    mixins,\n};\nexport { jsext as default, _try, func, wrap, throttle, debounce, queue, lock, read, readAll, chan, parallel, run, example, deprecate, isClass, isSubclassOf, mixin, mixins, };\n//# sourceMappingURL=index.js.map","/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which\n * can be used to carry deferred jobs.\n * @module\n */\n// @ts-ignore\nimport { isAsyncGenerator, isGenerator } from \"./external/check-iterable/index.mjs\";\n/**\n * Inspired by Golang, creates a function that receives a `defer` keyword which\n * can be used to carry deferred jobs that will be run after the main function\n * is complete.\n *\n * Multiple calls of the `defer` keyword is supported, and the callbacks are\n * called in the LIFO order. Callbacks can be async functions if the main\n * function is an async function or an async generator function, and all the\n * running procedures will be awaited.\n *\n * @example\n * ```ts\n * import func from \"@ayonli/jsext/func\";\n * import * as fs from \"node:fs/promises\";\n *\n * export const getVersion = func(async (defer) => {\n *     const file = await fs.open(\"./package.json\", \"r\");\n *     defer(() => file.close());\n *\n *     const content = await file.readFile(\"utf8\");\n *     const pkg = JSON.parse(content);\n *\n *     return pkg.version as string;\n * });\n * ```\n */\nexport default function func(fn) {\n    return function (...args) {\n        var _a;\n        const callbacks = [];\n        const defer = (cb) => void callbacks.push(cb);\n        let result;\n        try {\n            const returns = fn.call(this, defer, ...args);\n            if (isAsyncGenerator(returns)) {\n                const gen = (async function* () {\n                    var _a;\n                    let input;\n                    // Use `while` loop instead of `for...of...` in order to\n                    // retrieve the return value of a generator function.\n                    while (true) {\n                        try {\n                            const { done, value } = await returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                // Receive any potential input value that passed\n                                // to the outer `next()` call, and pass them to\n                                // `res.next()` in the next call.\n                                input = yield Promise.resolve(value);\n                            }\n                        }\n                        catch (error) {\n                            // If any error occurs, capture that error and break\n                            // the loop immediately, indicating the process is\n                            // forced broken.\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (isGenerator(returns)) {\n                const gen = (function* () {\n                    var _a;\n                    let input;\n                    while (true) {\n                        try {\n                            const { done, value } = returns.next(input);\n                            if (done) {\n                                result = { value, error: null };\n                                break;\n                            }\n                            else {\n                                input = yield value;\n                            }\n                        }\n                        catch (error) {\n                            result = { value: void 0, error };\n                            break;\n                        }\n                    }\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                })();\n                return gen;\n            }\n            else if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n                return Promise.resolve(returns).then(value => ({\n                    value,\n                    error: null,\n                })).catch((error) => ({\n                    value: void 0,\n                    error,\n                })).then(async (result) => {\n                    var _a;\n                    for (let i = callbacks.length - 1; i >= 0; i--) {\n                        await ((_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks));\n                    }\n                    if (result.error) {\n                        throw result.error;\n                    }\n                    else {\n                        return result.value;\n                    }\n                });\n            }\n            else {\n                result = { value: returns, error: null };\n            }\n        }\n        catch (error) {\n            result = { value: void 0, error };\n        }\n        for (let i = callbacks.length - 1; i >= 0; i--) {\n            (_a = callbacks[i]) === null || _a === void 0 ? void 0 : _a.call(callbacks);\n        }\n        if (result.error) {\n            throw result.error;\n        }\n        else {\n            return result.value;\n        }\n    };\n}\n//# sourceMappingURL=func.js.map","/**\n * This module includes functions for reading data from various kinds of streams.\n * @module\n */\nimport chan from \"./chan.ts\";\nimport { isFunction } from \"./util.ts\";\nexport default function read(source, eventMap = undefined) {\n    var _a;\n    if (isFunction(source[Symbol.asyncIterator])) {\n        return source;\n    }\n    else if (typeof ReadableStream === \"function\"\n        && source instanceof ReadableStream) {\n        const reader = source.getReader();\n        return {\n            [Symbol.asyncIterator]: async function* () {\n                try {\n                    while (true) {\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            break;\n                        }\n                        yield value;\n                    }\n                }\n                finally {\n                    reader.releaseLock();\n                }\n            },\n        };\n    }\n    const channel = chan(Infinity);\n    const handleMessage = channel.send.bind(channel);\n    const handleClose = channel.close.bind(channel);\n    const handleBrowserErrorEvent = (ev) => {\n        let err;\n        if (ev instanceof ErrorEvent) {\n            err = ev.error || new Error(ev.message);\n        }\n        else {\n            // @ts-ignore\n            err = new Error(\"something went wrong\", { cause: ev });\n        }\n        handleClose(err);\n    };\n    const proto = Object.getPrototypeOf(source);\n    const msgDesc = Object.getOwnPropertyDescriptor(proto, \"onmessage\");\n    if ((msgDesc === null || msgDesc === void 0 ? void 0 : msgDesc.set) && isFunction(source[\"close\"])) { // WebSocket or EventSource\n        const errDesc = Object.getOwnPropertyDescriptor(proto, \"onerror\");\n        const closeDesc = Object.getOwnPropertyDescriptor(proto, \"onclose\");\n        let cleanup;\n        if ((eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) &&\n            (eventMap === null || eventMap === void 0 ? void 0 : eventMap.event) !== \"message\" &&\n            isFunction(source[\"addEventListener\"])) { // for EventSource listening on custom events\n            const es = source;\n            const eventName = eventMap.event;\n            const msgListener = (ev) => {\n                handleMessage(ev.data);\n            };\n            es.addEventListener(eventName, msgListener);\n            cleanup = () => {\n                es.removeEventListener(eventName, msgListener);\n            };\n        }\n        else {\n            msgDesc.set.call(source, (ev) => {\n                handleMessage(ev.data);\n            });\n            cleanup = () => {\n                var _a;\n                (_a = msgDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n            };\n        }\n        (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, handleBrowserErrorEvent);\n        if (closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) { // WebSocket\n            closeDesc.set.call(source, () => {\n                var _a, _b;\n                handleClose();\n                (_a = closeDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                (_b = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _b === void 0 ? void 0 : _b.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            });\n        }\n        else if (!(closeDesc === null || closeDesc === void 0 ? void 0 : closeDesc.set) && isFunction(source[\"close\"])) { // EventSource\n            // EventSource by default does not trigger close event, we need to\n            // make sure when it calls the close() function, the iterator is\n            // automatically closed.\n            const es = source;\n            const _close = es.close;\n            es.close = function close() {\n                var _a;\n                _close.call(es);\n                handleClose();\n                es.close = _close;\n                (_a = errDesc === null || errDesc === void 0 ? void 0 : errDesc.set) === null || _a === void 0 ? void 0 : _a.call(source, null);\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            };\n        }\n    }\n    else if (isFunction(source[\"send\"]) && isFunction(source[\"close\"])) {\n        // non-standard WebSocket implementation\n        const ws = source;\n        ws.onmessage = (ev) => {\n            handleMessage(ev.data);\n        };\n        ws.onerror = handleBrowserErrorEvent;\n        ws.onclose = () => {\n            handleClose();\n            ws.onclose = null;\n            ws.onerror = null;\n            ws.onmessage = null;\n        };\n    }\n    else if (isFunction(source[\"addEventListener\"])) { // EventTarget\n        const target = source;\n        const msgEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.message) || \"message\";\n        const errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n        const closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        const msgListener = (ev) => {\n            if (ev instanceof MessageEvent) {\n                handleMessage(ev.data);\n            }\n        };\n        target.addEventListener(msgEvent, msgListener);\n        target.addEventListener(errEvent, handleBrowserErrorEvent);\n        target.addEventListener(closeEvent, function closeListener() {\n            handleClose();\n            target.removeEventListener(closeEvent, closeListener);\n            target.removeEventListener(msgEvent, msgListener);\n            target.removeEventListener(errEvent, handleBrowserErrorEvent);\n        });\n    }\n    else if (isFunction(source[\"on\"])) { // EventEmitter\n        const target = source;\n        let dataEvent;\n        let errEvent;\n        let closeEvent;\n        if (typeof process === \"object\" && source === process) {\n            dataEvent = \"message\";\n            errEvent = \"uncaughtException\";\n            closeEvent = \"exit\";\n        }\n        else if ((isFunction(source[\"send\"]) && isFunction(source[\"kill\"])) || // child process\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"terminate\"])) || // worker thread\n            (isFunction(source[\"postMessage\"]) && isFunction(source[\"close\"])) // message port\n        ) {\n            dataEvent = \"message\";\n            errEvent = \"error\";\n            closeEvent = \"exit\";\n        }\n        else {\n            dataEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.data) || \"data\";\n            errEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.error) || \"error\";\n            closeEvent = (eventMap === null || eventMap === void 0 ? void 0 : eventMap.close) || \"close\";\n        }\n        target.on(dataEvent, handleMessage);\n        target.once(errEvent, handleClose);\n        target.once(closeEvent, () => {\n            handleClose();\n            target.off(dataEvent, handleMessage);\n            target.off(errEvent, handleClose);\n        });\n    }\n    else {\n        throw new TypeError(\"the input source cannot be read as an AsyncIterable object\");\n    }\n    return {\n        [Symbol.asyncIterator]: channel[Symbol.asyncIterator].bind(channel),\n    };\n}\n/**\n * Reads all values from the iterable object at once.\n *\n * @example\n * ```ts\n * import { readAll } from \"@ayonli/jsext/read\";\n * import * as fs from \"node:fs\";\n *\n * const file = fs.createReadStream(\"./package.json\");\n * const chunks = await readAll(file);\n *\n * console.log(chunks);\n * ```\n */\nexport async function readAll(iterable) {\n    const list = [];\n    for await (const chunk of iterable) {\n        list.push(chunk);\n    }\n    return list;\n}\n//# sourceMappingURL=read.js.map","/**\n * Writes unit tests as if writing examples, inspired by Golang.\n * @module\n */\n/**\n * Inspired by Golang's **Example as Test** design, creates a function that\n * carries example code with `// output:` comments, when the returned function\n * is called, it will automatically check if the actual output matches the one\n * declared in the comment.\n *\n * The example function receives a customized `console` object which will be\n * used to log outputs instead of using the built-in `console`.\n *\n * @remarks\n * This function is used to simplify the process of writing tests, currently,\n * it does not work in Bun, **tsx** and browsers, because Bun hasn't implement\n * the `Console` constructor and removes comments during runtime, **tsx** also\n * remove comments, and the function relies on Node.js built-in modules.\n *\n * @example\n * ```ts\n * import example from \"@ayonli/jsext/example\";\n *\n * it(\"should output as expected\", example(console => {\n *     console.log(\"Hello, World!\");\n *     // output:\n *     // Hello, World!\n * }));\n * ```\n */\nexport default function example(fn, options = undefined) {\n    const call = {};\n    Error.captureStackTrace(call, example);\n    return async function (...args) {\n        const fnStr = fn.toString();\n        let lines = fnStr.split(\"\\n\").slice(1, -1);\n        let offset = lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        });\n        if (offset === -1) {\n            // no output is detected, skip the function\n            return;\n        }\n        else {\n            offset += 1;\n            lines = lines.slice(offset);\n        }\n        if (lines.findIndex(line => {\n            return line.trim().toLowerCase() === \"// output:\";\n        }) !== -1) {\n            throw new Error(\"there can only be one output comment in the example\");\n        }\n        let expected = [];\n        for (let line of lines) {\n            line = line.trimStart();\n            if (line.startsWith(\"//\")) {\n                if (line[2] && line[2] !== \" \") {\n                    throw new Error(\"the output comment must start with '// '\");\n                }\n                expected.push(line.slice(3));\n            }\n            else {\n                throw new Error(\"the output comment must be at the end of the example\");\n            }\n        }\n        // remove empty tailing lines\n        const _expected = [...expected];\n        expected = [];\n        for (let i = _expected.length - 1; i >= 0; i--) {\n            if (_expected[i] !== \"\") {\n                expected.push(_expected[i]);\n            }\n        }\n        expected.reverse();\n        const assert = await import(\"node:assert\");\n        const { Writable } = await import(\"node:stream\");\n        const { Console } = await import(\"node:console\");\n        const logs = [];\n        const decoder = new TextDecoder();\n        const stdout = new Writable({\n            write(chunk, _, callback) {\n                logs.push(chunk);\n                // const str = decoder.decode(chunk);\n                // const lines = str.split(\"\\n\");\n                // lines.forEach((line, i) => {\n                //     if (line || i !== lines.length - 1) {\n                //         logs.push(line);\n                //     }\n                // });\n                callback();\n            },\n        });\n        const _console = new Console(stdout);\n        const returns = fn.call(this, _console, ...args);\n        const handleResult = async () => {\n            var _a;\n            const actual = logs.map(chunk => decoder.decode(chunk))\n                .join(\"\\n\")\n                .replace(/[\\n]+$/, \"\");\n            const _expected = expected.join(\"\\n\");\n            try {\n                // @ts-ignore\n                assert.ok(actual === _expected, `\\nexpected:\\n${_expected}\\n\\ngot:\\n${actual}`);\n                if (!(options === null || options === void 0 ? void 0 : options.suppress)) {\n                    for (const chunk of logs) {\n                        if (typeof Deno === \"object\") {\n                            await Deno.stdout.write(chunk);\n                        }\n                        else if (typeof process === \"object\") {\n                            await new Promise(resolve => {\n                                process.stdout.write(chunk, () => resolve());\n                            });\n                        }\n                    }\n                }\n            }\n            catch (err) {\n                Object.defineProperty(err, \"stack\", {\n                    configurable: true,\n                    writable: true,\n                    enumerable: false,\n                    value: err.stack\n                        + \"\\n\" + ((_a = call.stack) === null || _a === void 0 ? void 0 : _a.split(\"\\n\").slice(1).join(\"\\n\")),\n                });\n                throw err;\n            }\n        };\n        if (typeof (returns === null || returns === void 0 ? void 0 : returns.then) === \"function\") {\n            await returns;\n        }\n        await new Promise(resolve => stdout.end(() => resolve()));\n        await handleResult();\n    };\n}\n//# sourceMappingURL=example.js.map","import \"./string/augment.ts\";\nimport \"./number/augment.ts\";\nimport \"./array/augment.ts\";\nimport \"./uint8array/augment.ts\";\nimport \"./object/augment.ts\";\nimport \"./math/augment.ts\";\nimport \"./promise/augment.ts\";\nimport \"./collections/augment.ts\";\nimport \"./error/augment.ts\";\nimport \"./json/augment.ts\";\nimport { AsyncFunction, AsyncGeneratorFunction } from \"./index.ts\";\n// @ts-ignore\nglobalThis[\"AsyncFunction\"] = AsyncFunction;\n// @ts-ignore\nglobalThis[\"AsyncGeneratorFunction\"] = AsyncGeneratorFunction;\n//# sourceMappingURL=augment.js.map"],"names":["equals","arr1","arr2","length","i","split","arr","delimiter","chunks","limit","offset","push","slice","ctor","constructor","from","chunk","size","Math","ceil","Array","idx","encoder","TextEncoder","_chars","chars","bytes","str","encode","Intl","Segmenter","segment","map","x","_trim","String","prototype","trim","_trimEnd","trimEnd","_trimStart","trimStart","call","indexOf","substring","stripEnd","suffix","endsWith","random","min","max","floor","serial","loop","sequence","Number","MAX_SAFE_INTEGER","step","id","hasOwn","obj","key","Object","hasOwnProperty","pick","keys","reduce","result","undefined","omit","keptKeys","Reflect","ownKeys","filter","includes","Error","forEach","isValid","value","is","NaN","Date","toString","isPlainObject","proto","getPrototypeOf","isClass","Boolean","BigInt","Symbol","name0","name","isSubclassOf","ctor1","ctor2","mergeIfNotExists","source","mergeSuper","props","prop","setProp","mergeHierarchy","mixin","_super","desc","getOwnPropertyDescriptor","defineProperty","base","mixins","TypeError","remove","splice","rand","orderBy","order","items","item","sort","a","b","isArray","_a","_b","reverse","sum","values","compare","str1","str2","count","sub","_count","this","capitalize","all","regex","replace","match","toUpperCase","toLowerCase","_capitalize","hyphenate","_","$1","$2","_bytes","words","matches","flat","_words","lines","_chunk","truncate","_truncate","_stripEnd","stripStart","prefix","startsWith","_stripStart","byteLength","isAscii","printableOnly","test","_isAscii","isFloat","isNaN","isFinite","isNumeric","strict","type","isBetween","range","first","last","_random","ele","another","_equals","_split","uniq","Set","uniqBy","fn","Map","has","set","_uniqBy","shuffle","j","_shuffle","toShuffled","toReversed","toSorted","_orderBy","groupBy","groups","list","get","_groupBy","keyBy","record","_keyBy","Uint8Array","copy","src","dest","subarray","concat","arrays","ele1","ele2","hasOwnMethod","method","patch","target","sources","as","_type","primitiveMap","string","number","bigint","boolean","symbol","valueOf","typeOf","sanitize","deep","options","removeNulls","removeEmptyStrings","removeEmptyObjects","removeArrayItems","process","depth","create","sortKeys","getOwnPropertyNames","getOwnPropertySymbols","flatKeys","maxDepth","carrier","flatArrayIndices","path","avg","product","Promise","timeout","async","ms","race","reject","setTimeout","after","allSettled","resolve","status","reason","sleep","until","inverse","BiMap","toStringTag","iterable","super","getKey","hasValue","deleteValue","delete","clear","CiMap","entries","callbackfn","thisArg","iterator","globalThis","Exception","message","code","configurable","enumerable","writable","cause","toObject","err","fromObject","DOMException","isAggregateError","isFirefoxOrSafari","navigator","userAgent","fromErrorEvent","event","error","shouldPatchStack","stack","filename","lineno","colno","isDOMException","AggregateError","toErrorEvent","line","callSite","find","start","lastIndexOf","end","index","parseInt","ErrorEvent","toJSON","typeRegistry","data","fromJSON","date","_c","Buffer","_d","_e","every","typeRecords","ins","assign","_f","isIteratorLike","next","isGenerator","isIterableIterator","hasGeneratorSpecials","isAsyncGenerator","asyncIterator","isAsyncIterableIterator","return","throw","JSON","parseAs","text","parse","Thenable","_source","then","onfulfilled","onrejected","res","fulfilled","e","rejected","done","ThenableGenerator","args","ThenableAsyncGenerator","ThenableGeneratorFunction","anonymous","apply","__proto__","isFunction","val","_try","returns","catch","input","wrap","wrapper","wrapped","bind","setPrototypeOf","Function","Cache","registry","for","isDeno","Deno","isBun","Bun","isNode","versions","node","isNodePrior14","version","IsPath","isMainThread","argv","WorkerGlobalScope","dispose","idGenerator","Channel","capacity","buffer","producers","consumers","state","RangeError","send","consume","shift","_data","recv","produce","close","channel","bufSize","queueSize","pop","chan","Queue","handler","bufferSize","errorHandler","onError","_queue","_value","_mutex","_unlocked","Mutex","lock","Lock","mutex","ReferenceError","v","unlock","queue","moduleCache","sanitizeModuleId","_id","resolveRemoteModuleUrl","url","fetch","blob","headers","buf","arrayBuffer","Blob","URL","createObjectURL","channelStore","isChannelMessage","msg","channelId","handleChannelMessage","raw","writers","write","wrapChannel","channelWrite","counter","defineProperties","wireChannel","isNotQuery","isVolume","isWindowsPath","isPosixPath","isUrl","isFileUrl","isFileProtocol","isAbsolute","protocol","host","pathname","search","hash","origin","segments","volume","_path","query","sep","build","os","platform","cwd","location","join","s","paths","_segment","p","_sep","_cwd","_paths","_normalize","dirname","_dirname","basename","_basename","extname","workerIdCounter","gcTimer","workerPool","remoteTasks","getMaxParallelism","import","availableParallelism","cpus","hardwareConcurrency","isCallResponse","getModuleDir","importMetaPath","path.extname","path.resolve","path.dirname","subs","path.endsWith","createWorker","adapter","parallel","entry","workerEntry","fileURLToPath","_filename","document","require","pathToFileURL","__filename","href","_documentCurrentScript","baseURI","path.join","path.cwd","path.isUrl","getWorkerEntry","fork","worker","stdio","serialization","workerId","pid","once","off","kind","Worker","threadId","onerror","ev","addEventListener","handleWorkerMessage","poolRecord","taskId","task","module","resolver","unwrapReturnValue","tasks","unref","generate","handleWorkerClose","acquireWorker","maxWorkers","lastAccess","now","getWorker","handleMessage","handleClose","on","_worker","onmessage","terminate","setInterval","idealItems","ideal","unrefTimer","add","ref","wrapArgs","transferable","arg","postMessage","ArrayBuffer","taskIdCounter","safeRemoteCall","req","createLocalCall","getReturns","modId","baseUrl","_url","default","resolveModule","mod","gen","extractBaseUrl","stackTrace","findIndex","captureStackTrace","trace","Proxy","_args","Infinity","createRemoteCall","parallel$1","workerPools","workerConsumerQueue","run","script","busy","kill","release","clearTimeout","keepAlive","terminated","remainItems","signal","removeAllListeners","handleErrorEvent","handleCloseEvent","removeEventListener","abort","iterate","run$1","warnedRecord","emitWarning","forFn","tip","lineNum","warning","console","warn","AsyncFunction","AsyncGeneratorFunction","jsext","try","func","callbacks","defer","cb","throttle","duration","noWait","handleCall","cache","pending","expires","finally","debounce","reducer","delay","hasKey","_cache","timer","_tasks","read","eventMap","ReadableStream","reader","getReader","releaseLock","handleBrowserErrorEvent","msgDesc","errDesc","closeDesc","cleanup","es","eventName","msgListener","_close","ws","onclose","msgEvent","errEvent","closeEvent","MessageEvent","closeListener","dataEvent","readAll","example","expected","_expected","assert","Writable","Console","logs","decoder","TextDecoder","stdout","callback","_console","actual","decode","ok","suppress","handleResult","deprecate"],"mappings":"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"}